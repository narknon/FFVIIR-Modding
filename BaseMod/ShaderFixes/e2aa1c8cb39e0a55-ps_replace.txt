// ---- Created with 3Dmigoto v1.3.16 on Fri Dec 24 15:46:12 2021
Texture2D<float4> t11 : register(t11);

TextureCubeArray<float4> t10 : register(t10);

Buffer<uint4> t9 : register(t9);

Buffer<uint4> t8 : register(t8);

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s9_s : register(s9);

SamplerState s8_s : register(s8);

SamplerState s7_s : register(s7);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[2728];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[154];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = t1.SampleLevel(s1_s, v0.xy, 0).xyzw;
  r0.w = r0.w * 255 + 0.5;
  r0.w = (uint)r0.w;
  r1.x = (int)r0.w & 15;
  if (r1.x != 0) {
    r2.xyzw = t0.SampleLevel(s0_s, v0.xy, 0).xyzw;
    r3.xyzw = t2.SampleLevel(s2_s, v0.xy, 0).xyzw;
    r1.yzw = t3.SampleLevel(s3_s, v0.xy, 0).xyz;
    r4.xyzw = t4.SampleLevel(s4_s, v0.xy, 0).xyzw;
    r2.xyz = r2.xyz * float3(2,2,2) + float3(-1,-1,-1);
    r5.x = dot(r2.xyz, r2.xyz);
    r5.x = rsqrt(r5.x);
    r6.xyz = r5.xxx * r2.xyz;
    r2.w = r2.w * 3 + 0.5;
    r2.w = (uint)r2.w;
    r5.y = 1 + -r0.x;
    r7.xyz = r5.yyy * r3.xyz;
    r0.y = r0.y * r0.y;
    r5.z = 0.159999996 * r0.y;
    r3.xyz = -r0.yyy * float3(0.159999996,0.159999996,0.159999996) + r3.xyz;
    r3.xyz = r0.xxx * r3.xyz + r5.zzz;
    r7.xyz = r7.xyz * cb0[132].www + cb0[132].xyz;
    r8.xyzw = cmp((int4)r1.xxxx == int4(1,2,3,7));
    r0.x = (int)r8.y | (int)r8.x;
    r9.xyz = r3.xyz * cb0[133].www + cb0[133].xyz;
    r9.xyz = r0.xxx ? r9.xyz : r3.xyz;
    r3.xyz = r9.xyz * float3(0.449999988,0.449999988,0.449999988) + r7.xyz;
    r0.xy = (int2)r0.ww & int2(16,64);
    r5.yzw = r0.xxx ? r5.yyy : r7.xyz;
    r0.x = t6.SampleLevel(s6_s, v0.xy, 0).x;
    r7.xy = t7.SampleLevel(s7_s, v0.xy, 0).xy;
    r10.xyzw = cb0[128].yyyy * r4.xyzw;
    r11.xyzw = t11.SampleLevel(s9_s, v0.xy, 0).xyzw;
    r11.xyz = cb0[128].yyy * r11.xyz;
    r7.zw = float2(1,0.577000022) * r0.zz;
    r0.w = dot(float2(0.850000024,0.150000006), r7.zw);
    r7.zw = cmp((int2)r1.xx == int2(8,5));
    r0.z = r7.z ? 1 : r0.z;
    r0.z = r8.w ? 0.479999989 : r0.z;
    r0.z = r8.z ? r0.w : r0.z;
    r0.w = t5.SampleLevel(s5_s, v0.xy, 0).x;
    r4.w = r0.w * cb0[57].x + cb0[57].y;
    r0.w = r0.w * cb0[57].z + -cb0[57].w;
    r0.w = rcp(r0.w);
    r0.w = r4.w + r0.w;
    r12.xy = v0.zw * r0.ww;
    r13.xyzw = cb0[41].xyzw * r12.yyyy;
    r12.xyzw = r12.xxxx * cb0[40].xyzw + r13.xyzw;
    r12.xyzw = r0.wwww * cb0[42].xyzw + r12.xyzw;
    r12.xyzw = cb0[43].xyzw + r12.xyzw;
    r12.xyz = r12.xyz / r12.www;
    r13.xyz = cb0[59].xyz + -r12.xyz;
    r4.w = dot(r13.xyz, r13.xyz);
    r4.w = rsqrt(r4.w);
    r13.xyz = r13.xyz * r4.www;
    r4.w = dot(r6.xyz, r13.xyz);
    r8.y = saturate(r4.w);
    r11.w = 1 + -r11.w;
    r12.w = cmp(r11.w >= 0.00100000005);
    if (r12.w != 0) {
      r14.xy = -cb0[121].xy + v1.xy;
      r14.xy = (uint2)r14.xy;
      r0.w = r0.w * cb1[3].x + cb1[3].y;
      r0.w = log2(r0.w);
      r0.w = cb1[3].z * r0.w;
      r12.w = asint(cb1[1].z) + -1;
      r12.w = (int)r12.w;
      r0.w = max(0, r0.w);
      r0.w = min(r0.w, r12.w);
      r0.w = (uint)r0.w;
      r14.xy = (uint2)r14.xy >> asuint(cb1[2].xx);
      r0.w = mad((int)r0.w, asint(cb1[1].y), (int)r14.y);
      r0.w = mad((int)r0.w, asint(cb1[1].x), (int)r14.x);
      r0.w = (int)r0.w + asint(cb1[0].w);
      r12.w = (uint)r0.w << 1;
      r12.w = t8.Load(r12.w).x;
      bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r0.w = (((uint)r0.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
      r0.w = t8.Load(r0.w).x;
      r14.xyz = r4.www * r6.xyz;
      r13.xyz = r14.xyz * float3(2,2,2) + -r13.xyz;
      r4.w = dot(r13.xyz, r13.xyz);
      r4.w = rsqrt(r4.w);
      r13.xyz = r13.xyz * r4.www;
      r4.w = r0.z * r0.z;
      r4.w = r4.w * r0.z;
      r2.xyz = r2.xyz * r5.xxx + -r13.xyz;
      r2.xyz = r4.www * r2.xyz + r13.xyz;
      r4.w = dot(r2.xyz, r2.xyz);
      r4.w = rsqrt(r4.w);
      r2.xyz = r4.www * r2.xyz;
      r4.w = cmp((int)r1.x == 5);
      r4.w = (int)r4.w | (int)r8.x;
      if (r4.w != 0) {
        r13.xyz = r1.yzw * float3(2,2,2) + float3(-1,-1,-1);
        r4.w = dot(r13.xyz, r13.xyz);
        r4.w = rsqrt(r4.w);
        r13.xyz = r13.xyz * r4.www;
        r4.w = dot(r13.xyz, r2.xyz);
        r4.w = abs(r4.w) + -r4.w;
        r13.xyz = r4.www * r13.xyz + r2.xyz;
        r4.w = dot(r13.xyz, r13.xyz);
        r4.w = rsqrt(r4.w);
        r2.xyz = r13.xyz * r4.www;
        r13.xyz = r10.xyz;
        r4.w = -1;
      } else {
        r5.x = cmp((int)r1.x == 9);
        r4.w = ~(int)r5.x;
        if (r5.x != 0) {
          r14.xyz = r1.yzw * float3(2,2,2) + float3(-1,-1,-1);
          r1.y = dot(r14.xyz, r14.xyz);
          r1.y = rsqrt(r1.y);
          r14.xyz = r14.xyz * r1.yyy;
          r1.y = -0.0454999991 + r9.x;
          r1.y = saturate(249.999985 * r1.y);
          r16.xyz = float3(0,0,0);
          r1.w = 1;
          r5.x = 1;
          r15.xyzw = float4(0,0,0,0);
          while (true) {
            r16.w = cmp((uint)r15.w >= (uint)r12.w);
            if (r16.w != 0) break;
            r16.w = (int)r0.w + (int)r15.w;
            r16.w = t9.Load(r16.w).x;
            r17.xyz = -cb2[r16.w+0].xyz + r12.xyz;
            r17.x = dot(r17.xyz, r17.xyz);
            r17.y = cb2[r16.w+0].w * cb2[r16.w+0].w;
            r17.y = cmp(r17.x < r17.y);
            if (r17.y != 0) {
              r17.y = cmp(0 < cb2[r16.w+341].z);
              if (r17.y != 0) {
                r17.y = (uint)r16.w << 2;
                r18.xyz = cb2[r17.y+1024].xyz * r12.yyy;
                r18.xyz = r12.xxx * cb2[r17.y+1023].xyz + r18.xyz;
                r18.xyz = r12.zzz * cb2[r17.y+1025].xyz + r18.xyz;
                r17.yzw = cb2[r17.y+1026].xyz + r18.xyz;
                r18.x = cb2[r16.w+2387].w * 0.699999988;
                r18.yzw = -cb2[r16.w+2387].www * float3(0.5,0.5,0.5) + cb2[r16.w+2387].xyz;
                r19.xyz = r17.yzw * cb2[r16.w+2387].xyz + -r18.yzw;
                r19.xyz = max(float3(0,0,0), r19.xyz);
                r17.yzw = r17.yzw * cb2[r16.w+2387].xyz + r18.yzw;
                r17.yzw = min(float3(0,0,0), r17.yzw);
                r17.yzw = r19.xyz + -r17.yzw;
                r17.y = r17.y + r17.z;
                r17.y = r17.y + r17.w;
                r17.z = rcp(r18.x);
                r17.y = saturate(r17.y * r17.z);
                r17.z = r17.y * r17.y;
                r17.y = -r17.y * 2 + 3;
                r17.y = -r17.z * r17.y + 1;
              } else {
                r17.x = sqrt(r17.x);
                r17.x = saturate(r17.x / cb2[r16.w+0].w);
                r17.x = r17.x * 2.5 + -1.5;
                r17.x = max(0, r17.x);
                r17.z = r17.x * r17.x;
                r17.x = -r17.x * 2 + 3;
                r17.y = -r17.z * r17.x + 1;
              }
              r17.x = cmp(0 < r17.y);
              if (r17.x != 0) {
                r14.w = cb2[r16.w+341].y;
                r17.xzw = t10.SampleLevel(s8_s, r14.xyzw, 3.44974756).xyz;
                r16.w = cb2[r16.w+341].x * r17.y;
                r18.x = r16.w * r1.w;
                r17.xzw = r17.xzw * r18.xxx + r15.xyz;
                r17.y = 1 + -r17.y;
                r1.w = r17.y * r1.w;
                r18.xyz = t10.SampleLevel(s8_s, r14.xyzw, 4).xyz;
                r14.w = r16.w * r5.x;
                r18.xyz = r18.xyz * r14.www + r16.xyz;
                r5.x = r17.y * r5.x;
                r14.w = cmp(r1.w < 0.00100000005);
                if (r14.w != 0) {
                  r15.xyz = r17.xzw;
                  r16.xyz = r18.xyz;
                  break;
                }
                r15.xyz = r17.xzw;
                r16.xyz = r18.xyz;
              }
            }
            r15.w = (int)r15.w + 1;
          }
          r14.xyz = cb0[153].xyz * r15.xyz;
          r15.xyz = cb0[153].xyz * r16.xyz;
          r16.w = dot(r10.xyz, float3(0.212599993,0.715200007,0.0722000003));
          r1.w = dot(r15.xyz, float3(0.212599993,0.715200007,0.0722000003));
          r5.x = dot(r14.xyz, float3(0.212599993,0.715200007,0.0722000003));
          r16.xyz = r10.xyz;
          r15.xyzw = max(float4(9.99999975e-006,9.99999975e-006,9.99999975e-006,9.99999975e-006), r16.xyzw);
          r1.w = max(9.99999975e-006, r1.w);
          r15.xyzw = r15.xyzw / r1.wwww;
          r14.xyz = r15.www * r14.xyz;
          r1.w = saturate(-1 + r15.w);
          r15.xyz = r15.xyz * r5.xxx + -r14.xyz;
          r14.xyz = r1.www * r15.xyz + r14.xyz;
          r15.xyz = r4.xyz * cb0[128].yyy + -r14.xyz;
          r14.xyz = r15.xyz * float3(0.24999997,0.24999997,0.24999997) + r14.xyz;
          r4.xyz = -r4.xyz * cb0[128].yyy + r14.xyz;
          r13.xyz = r1.yyy * r4.xyz + r10.xyz;
        } else {
          r13.xyz = r10.xyz;
        }
      }
      r1.y = (int)r2.w & 2;
      r1.y = cmp((int)r1.y != 0);
      r1.w = saturate(r0.z);
      r2.w = -r1.w * 3 + 7;
      r1.w = r2.w * r1.w;
      r1.w = min(4, r1.w);
      r4.xyz = float3(0,0,0);
      r2.w = 1;
      r5.x = 1;
      r14.xyzw = float4(0,0,0,0);
      while (true) {
        r15.x = cmp((uint)r14.w >= (uint)r12.w);
        if (r15.x != 0) break;
        r15.x = (int)r0.w + (int)r14.w;
        r15.x = t9.Load(r15.x).x;
        r15.yzw = -cb2[r15.x+0].xyz + r12.xyz;
        r16.x = dot(r15.yzw, r15.yzw);
        r16.y = cb2[r15.x+0].w * cb2[r15.x+0].w;
        r16.y = cmp(r16.x < r16.y);
        if (r16.y != 0) {
          r16.y = cmp(0 < cb2[r15.x+341].z);
          if (r16.y != 0) {
            r16.y = (uint)r15.x << 2;
            r17.xyz = cb2[r16.y+1024].xyz * r12.yyy;
            r17.xyz = r12.xxx * cb2[r16.y+1023].xyz + r17.xyz;
            r17.xyz = r12.zzz * cb2[r16.y+1025].xyz + r17.xyz;
            r17.xyz = cb2[r16.y+1026].xyz + r17.xyz;
            r16.z = cb2[r15.x+2387].w * 0.699999988;
            r18.xyz = -cb2[r15.x+2387].www * float3(0.5,0.5,0.5) + cb2[r15.x+2387].xyz;
            r19.xyz = r17.xyz * cb2[r15.x+2387].xyz + -r18.xyz;
            r19.xyz = max(float3(0,0,0), r19.xyz);
            r18.xyz = r17.xyz * cb2[r15.x+2387].xyz + r18.xyz;
            r18.xyz = min(float3(0,0,0), r18.xyz);
            r18.xyz = r19.xyz + -r18.xyz;
            r16.w = r18.x + r18.y;
            r16.w = r16.w + r18.z;
            r16.z = rcp(r16.z);
            r16.z = saturate(r16.w * r16.z);
            r16.w = r16.z * r16.z;
            r16.z = -r16.z * 2 + 3;
            r16.z = -r16.w * r16.z + 1;
            r16.w = cmp(0 < r16.z);
            r16.w = r1.y ? r16.w : 0;
            if (r16.w != 0) {
              r18.xyz = -cb2[r15.x+682].xyz + r15.yzw;
              r19.xyz = cb2[r16.y+1024].xyz * r2.yyy;
              r19.xyz = r2.xxx * cb2[r16.y+1023].xyz + r19.xyz;
              r19.xyz = r2.zzz * cb2[r16.y+1025].xyz + r19.xyz;
              r19.xyz = rcp(r19.xyz);
              r20.xyz = r17.xyz * r19.xyz + r19.xyz;
              r17.xyz = r17.xyz * r19.xyz + -r19.xyz;
              r17.xyz = min(r20.xyz, r17.xyz);
              r16.y = max(r17.y, r17.z);
              r16.y = max(r17.x, r16.y);
              r17.xyz = -r16.yyy * r2.xyz + r18.xyz;
            } else {
              r17.xyz = r2.xyz;
            }
          } else {
            r16.y = sqrt(r16.x);
            r16.y = saturate(r16.y / cb2[r15.x+0].w);
            r16.y = r16.y * 2.5 + -1.5;
            r16.y = max(0, r16.y);
            r16.w = r16.y * r16.y;
            r16.y = -r16.y * 2 + 3;
            r16.z = -r16.w * r16.y + 1;
            r16.y = cmp(0 < r16.z);
            r16.y = r1.y ? r16.y : 0;
            if (r16.y != 0) {
              r18.xyz = -cb2[r15.x+682].xyz + r15.yzw;
              r15.y = dot(r2.xyz, r15.yzw);
              r15.z = r15.y * r15.y + -r16.x;
              r15.z = cb2[r15.x+0].w * cb2[r15.x+0].w + r15.z;
              r15.w = cmp(r15.z >= 0);
              r15.z = sqrt(r15.z);
              r15.y = r15.z + -r15.y;
              r16.xyw = r15.yyy * r2.xyz + r18.xyz;
              r17.xyz = r15.www ? r16.xyw : r2.xyz;
            } else {
              r17.xyz = r2.xyz;
            }
          }
          r15.y = cmp(0 < r16.z);
          if (r15.y != 0) {
            r17.w = cb2[r15.x+341].y;
            r15.yzw = t10.SampleLevel(s8_s, r17.xyzw, r1.w).xyz;
            r16.x = cb2[r15.x+341].x * r16.z;
            r16.y = r16.x * r2.w;
            r15.yzw = r15.yzw * r16.yyy + r4.xyz;
            r16.y = 1 + -r16.z;
            r2.w = r16.y * r2.w;
            r6.w = cb2[r15.x+341].y;
            r17.xyz = t10.SampleLevel(s8_s, r6.xyzw, 4).xyz;
            r6.w = r16.x * r5.x;
            r16.xzw = r17.xyz * r6.www + r14.xyz;
            r5.x = r16.y * r5.x;
            r6.w = cmp(r2.w < 0.00100000005);
            if (r6.w != 0) {
              r4.xyz = r15.yzw;
              r14.xyz = r16.xzw;
              break;
            }
            r4.xyz = r15.yzw;
            r14.xyz = r16.xzw;
          }
        }
        r14.w = (int)r14.w + 1;
      }
      r2.xyz = cb0[153].xyz * r4.xyz;
      r6.xyz = cb0[153].xyz * r14.xyz;
      if (r4.w != 0) {
        r13.w = dot(r13.xyz, float3(0.212599993,0.715200007,0.0722000003));
        r0.w = dot(r6.xyz, float3(0.212599993,0.715200007,0.0722000003));
        r1.y = dot(r2.xyz, float3(0.212599993,0.715200007,0.0722000003));
        r6.xyzw = max(float4(9.99999975e-006,9.99999975e-006,9.99999975e-006,9.99999975e-006), r13.xyzw);
        r0.w = max(9.99999975e-006, r0.w);
        r6.xyzw = r6.xyzw / r0.wwww;
        r12.xyz = r6.www * r2.xyz;
        r0.w = saturate(-1 + r6.w);
        r6.xyz = r6.xyz * r1.yyy + -r12.xyz;
        r6.xyz = r0.www * r6.xyz + r12.xyz;
        r0.w = max(0.0399999991, r0.z);
        r1.y = r0.w + r0.w;
        r1.y = min(1, r1.y);
        r4.xyz = -r4.xyz * cb0[153].xyz + r6.xyz;
        r4.xyz = r1.yyy * r4.xyz + r2.xyz;
        r0.w = r0.w * r0.w;
        r0.w = r0.w * r0.w;
        r6.xyz = r13.xyz + -r4.xyz;
        r2.xyz = r0.www * r6.xyz + r4.xyz;
      }
      r2.xyz = r2.xyz * r11.www;
      r10.xyz = r13.xyz;
    } else {
      r2.xyz = float3(0,0,0);
    }
    r0.w = dot(r10.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r0.w = max(9.99999975e-006, r0.w);
    r1.y = max(9.99999975e-006, r10.w);
    r1.y = rcp(r1.y);
    r0.w = r1.y * r0.w;
    r0.w = min(1, r0.w);
    r1.y = 1 + -r0.w;
    r0.w = r7.x * r1.y + r0.w;
    r0.w = r0.w * r7.y;
    r1.y = r3.w * r0.x;
    r1.w = min(r3.w, r0.x);
    r2.w = r3.w * r0.x + 1;
    r2.w = r2.w + -r1.w;
    r2.w = r2.w * r2.w;
    r0.x = -r3.w * r0.x + r1.w;
    r0.x = r2.w * r0.x + r1.y;
    r1.y = r0.x * r0.w;
    r1.w = min(r0.x, r0.w);
    r2.w = r0.x * r0.w + 1;
    r2.w = r2.w + -r1.w;
    r2.w = r2.w * r2.w;
    r0.x = -r0.x * r0.w + r1.w;
    r0.x = r2.w * r0.x + r1.y;
    r0.w = r8.y + r0.x;
    r1.y = r0.z * r0.z;
    r1.w = cmp(r0.w < 9.99999997e-007);
    r0.w = log2(abs(r0.w));
    r0.w = r1.y * r0.w;
    r0.w = exp2(r0.w);
    r0.w = r1.w ? 0 : r0.w;
    r0.w = r0.w + r0.x;
    r0.w = saturate(-1 + r0.w);
    r4.xyz = r3.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
    r6.xyz = r3.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + float3(0.641700029,0.641700029,0.641700029);
    r3.xyz = r3.xyz * float3(2.75519991,2.75519991,2.75519991) + float3(0.690299988,0.690299988,0.690299988);
    r4.xyz = r4.xyz * r0.xxx + r6.xyz;
    r3.xyz = r4.xyz * r0.xxx + r3.xyz;
    r3.xyz = max(float3(1,1,1), r3.xyz);
    r3.xyz = r3.xyz * r0.xxx;
    r0.x = r0.y ? cb0[130].x : 1;
    r2.xyz = r0.xxx * r2.xyz;
    r2.xyz = r2.xyz * r0.www + r11.xyz;
    r0.xyw = r0.xxx * r10.xyz;
    r4.xyz = r0.xyw * r3.xyz;
    r1.y = (int)r7.w | (int)r8.x;
    if (r1.y != 0) {
      r6.xyzw = r0.zzzz * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
      r1.y = r6.x * r6.x;
      r1.w = -9.27999973 * r8.y;
      r1.w = exp2(r1.w);
      r1.y = min(r1.y, r1.w);
      r1.y = r1.y * r6.x + r6.y;
      r1.yw = r1.yy * float2(-1.03999996,1.03999996) + r6.zw;
      r9.w = dot(r9.xyz, float3(0.333333343,0.333333343,0.333333343));
      r2.w = saturate(50 * r9.w);
      r1.w = r2.w * r1.w;
      r6.xyzw = saturate(r9.xyzw * r1.yyyy + r1.wwww);
      r1.y = 1 + -r6.w;
      r6.xyz = r6.xyz * r2.xyz;
      r7.xyw = r4.xyz * r1.yyy;
      r7.xyw = r7.xyw * r5.yzw;
    } else {
      if (r8.z != 0) {
        r10.xyzw = r0.zzzz * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
        r1.y = r10.x * r10.x;
        r1.w = -9.27999973 * r8.y;
        r1.w = exp2(r1.w);
        r1.y = min(r1.y, r1.w);
        r1.y = r1.y * r10.x + r10.y;
        r1.yw = r1.yy * float2(-1.03999996,1.03999996) + r10.zw;
        r2.w = dot(r9.xyz, float3(0.333333343,0.333333343,0.333333343));
        r2.w = saturate(50 * r2.w);
        r2.w = r2.w * r1.w;
        r10.xyz = saturate(r9.xyz * r1.yyy + r2.www);
        r1.y = saturate(r1.y * 0.0324999988 + r1.w);
        r1.y = 1 + -r1.y;
        r6.xyz = r10.xyz * r2.xyz;
        r10.xyz = r4.xyz * r1.yyy;
        r7.xyw = r10.xyz * r5.yzw;
      } else {
        r1.x = cmp((int)r1.x == 9);
        if (r1.x != 0) {
          r10.xyzw = r0.zzzz * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
          r1.x = r10.x * r10.x;
          r1.y = -9.27999973 * r8.y;
          r1.y = exp2(r1.y);
          r1.x = min(r1.x, r1.y);
          r1.x = r1.x * r10.x + r10.y;
          r1.xy = r1.xx * float2(-1.03999996,1.03999996) + r10.zw;
          r1.x = saturate(r1.x * 0.0454999991 + r1.y);
          r1.y = 1 + -r1.x;
          r6.xyz = r2.xyz * r1.xxx;
          r1.xyw = r4.xyz * r1.yyy;
          r7.xyw = r1.xyw * r5.yzw;
        } else {
          if (r8.w != 0) {
            r10.xyzw = r0.zzzz * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
            r0.z = r10.x * r10.x;
            r1.x = -9.27999973 * r8.y;
            r1.x = exp2(r1.x);
            r0.z = min(r1.x, r0.z);
            r0.z = r0.z * r10.x + r10.y;
            r1.xy = r0.zz * float2(-1.03999996,1.03999996) + r10.zw;
            r0.z = saturate(r1.x * 0.0465199985 + r1.y);
            r1.x = 1 + -r0.z;
            r8.xzw = r0.zzz * r2.xyz;
            r6.xyz = float3(0.785398185,0.785398185,0.785398185) * r8.xzw;
            r0.xyz = -r0.xyw * r3.xyz + r2.xyz;
            r0.xyz = r0.xyz * float3(0.150000006,0.150000006,0.150000006) + r4.xyz;
            r0.xyz = r1.xxx * r0.xyz;
            r0.xyz = r0.xyz * r5.yzw;
            r7.xyw = float3(0.785398185,0.785398185,0.785398185) * r0.xyz;
          } else {
            if (r7.z != 0) {
              r9.w = dot(r9.xyz, float3(0.333333343,0.333333343,0.333333343));
              r0.x = saturate(50 * r9.w);
              r0.y = 0.0476000011 * r0.x;
              r0.x = -r0.x * 0.0476000011 + 1;
              r0.xyzw = r9.xyzw * r0.xxxx + r0.yyyy;
              r1.x = sqrt(r8.y);
              r1.x = r1.x * -0.494999975 + 0.635999978;
              r0.xyz = r1.xxx * r0.xyz;
              r1.x = r8.y * -0.633000076 + 0.200000048;
              r1.x = r1.z * r1.x + 1;
              r0.w = 1 + -r0.w;
              r0.w = r1.x * r0.w;
              r6.xyz = r2.xyz * r0.xyz;
              r0.xyz = r4.xyz * r0.www;
              r7.xyw = r0.xyz * r5.yzw;
            } else {
              r7.xyw = float3(0,0,0);
              r6.xyz = float3(0,0,0);
            }
          }
        }
      }
    }
    r0.xyz = r7.xyw + r6.xyz;
    r0.w = dot(r7.xyw, float3(0.212599993,0.715200007,0.0722000003));
    o0.xyzw = cb0[128].xxxx * r0.xyzw;
  } else {
    o0.xyzw = float4(0,0,0,0);
  }
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Dec 24 15:46:12 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// SV_Position              0   xyzw        1      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[154], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[2728], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear v0.xyzw
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 21
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v0.xyxx, t1.xyzw, s1, l(0.000000)
mad r0.w, r0.w, l(255.000000), l(0.500000)
ftou r0.w, r0.w
and r1.x, r0.w, l(15)
if_nz r1.x
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, v0.xyxx, t2.xyzw, s2, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r1.yzw, v0.xyxx, t3.wxyz, s3, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, v0.xyxx, t4.xyzw, s4, l(0.000000)
  mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  dp3 r5.x, r2.xyzx, r2.xyzx
  rsq r5.x, r5.x
  mul r6.xyz, r2.xyzx, r5.xxxx
  mad r2.w, r2.w, l(3.000000), l(0.500000)
  ftou r2.w, r2.w
  add r5.y, -r0.x, l(1.000000)
  mul r7.xyz, r3.xyzx, r5.yyyy
  mul r0.y, r0.y, r0.y
  mul r5.z, r0.y, l(0.160000)
  mad r3.xyz, -r0.yyyy, l(0.160000, 0.160000, 0.160000, 0.000000), r3.xyzx
  mad r3.xyz, r0.xxxx, r3.xyzx, r5.zzzz
  mad r7.xyz, r7.xyzx, cb0[132].wwww, cb0[132].xyzx
  ieq r8.xyzw, r1.xxxx, l(1, 2, 3, 7)
  or r0.x, r8.y, r8.x
  mad r9.xyz, r3.xyzx, cb0[133].wwww, cb0[133].xyzx
  movc r9.xyz, r0.xxxx, r9.xyzx, r3.xyzx
  mad r3.xyz, r9.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r7.xyzx
  and r0.xy, r0.wwww, l(16, 64, 0, 0)
  movc r5.yzw, r0.xxxx, r5.yyyy, r7.xxyz
  sample_l_indexable(texture2d)(float,float,float,float) r0.x, v0.xyxx, t6.xyzw, s6, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r7.xy, v0.xyxx, t7.xyzw, s7, l(0.000000)
  mul r10.xyzw, r4.xyzw, cb0[128].yyyy
  sample_l_indexable(texture2d)(float,float,float,float) r11.xyzw, v0.xyxx, t11.xyzw, s9, l(0.000000)
  mul r11.xyz, r11.xyzx, cb0[128].yyyy
  mul r7.zw, r0.zzzz, l(0.000000, 0.000000, 1.000000, 0.577000)
  dp2 r0.w, l(0.850000, 0.150000, 0.000000, 0.000000), r7.zwzz
  ieq r7.zw, r1.xxxx, l(0, 0, 8, 5)
  movc r0.z, r7.z, l(1.000000), r0.z
  movc r0.z, r8.w, l(0.480000), r0.z
  movc r0.z, r8.z, r0.w, r0.z
  sample_l_indexable(texture2d)(float,float,float,float) r0.w, v0.xyxx, t5.yzwx, s5, l(0.000000)
  mad r4.w, r0.w, cb0[57].x, cb0[57].y
  mad r0.w, r0.w, cb0[57].z, -cb0[57].w
  rcp r0.w, r0.w
  add r0.w, r0.w, r4.w
  mul r12.xy, r0.wwww, v0.zwzz
  mul r13.xyzw, r12.yyyy, cb0[41].xyzw
  mad r12.xyzw, r12.xxxx, cb0[40].xyzw, r13.xyzw
  mad r12.xyzw, r0.wwww, cb0[42].xyzw, r12.xyzw
  add r12.xyzw, r12.xyzw, cb0[43].xyzw
  div r12.xyz, r12.xyzx, r12.wwww
  add r13.xyz, -r12.xyzx, cb0[59].xyzx
  dp3 r4.w, r13.xyzx, r13.xyzx
  rsq r4.w, r4.w
  mul r13.xyz, r4.wwww, r13.xyzx
  dp3 r4.w, r6.xyzx, r13.xyzx
  mov_sat r8.y, r4.w
  add r11.w, -r11.w, l(1.000000)
  ge r12.w, r11.w, l(0.001000)
  if_nz r12.w
    add r14.xy, v1.xyxx, -cb0[121].xyxx
    ftou r14.xy, r14.xyxx
    mad r0.w, r0.w, cb1[3].x, cb1[3].y
    log r0.w, r0.w
    mul r0.w, r0.w, cb1[3].z
    iadd r12.w, cb1[1].z, l(-1)
    itof r12.w, r12.w
    max r0.w, r0.w, l(0.000000)
    min r0.w, r12.w, r0.w
    ftou r0.w, r0.w
    ushr r14.xy, r14.xyxx, cb1[2].xxxx
    imad r0.w, r0.w, cb1[1].y, r14.y
    imad r0.w, r0.w, cb1[1].x, r14.x
    iadd r0.w, r0.w, cb1[0].w
    ishl r12.w, r0.w, l(1)
    ld_indexable(buffer)(uint,uint,uint,uint) r12.w, r12.wwww, t8.yzwx
    bfi r0.w, l(31), l(1), r0.w, l(1)
    ld_indexable(buffer)(uint,uint,uint,uint) r0.w, r0.wwww, t8.yzwx
    mul r14.xyz, r6.xyzx, r4.wwww
    mad r13.xyz, r14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r13.xyzx
    dp3 r4.w, r13.xyzx, r13.xyzx
    rsq r4.w, r4.w
    mul r13.xyz, r4.wwww, r13.xyzx
    mul r4.w, r0.z, r0.z
    mul r4.w, r0.z, r4.w
    mad r2.xyz, r2.xyzx, r5.xxxx, -r13.xyzx
    mad r2.xyz, r4.wwww, r2.xyzx, r13.xyzx
    dp3 r4.w, r2.xyzx, r2.xyzx
    rsq r4.w, r4.w
    mul r2.xyz, r2.xyzx, r4.wwww
    ieq r4.w, r1.x, l(5)
    or r4.w, r4.w, r8.x
    if_nz r4.w
      mad r13.xyz, r1.yzwy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      dp3 r4.w, r13.xyzx, r13.xyzx
      rsq r4.w, r4.w
      mul r13.xyz, r4.wwww, r13.xyzx
      dp3 r4.w, r13.xyzx, r2.xyzx
      add r4.w, -r4.w, |r4.w|
      mad r13.xyz, r4.wwww, r13.xyzx, r2.xyzx
      dp3 r4.w, r13.xyzx, r13.xyzx
      rsq r4.w, r4.w
      mul r2.xyz, r4.wwww, r13.xyzx
      mov r13.xyz, r10.xyzx
      mov r4.w, l(-1)
    else
      ieq r5.x, r1.x, l(9)
      not r4.w, r5.x
      if_nz r5.x
        mad r14.xyz, r1.yzwy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
        dp3 r1.y, r14.xyzx, r14.xyzx
        rsq r1.y, r1.y
        mul r14.xyz, r1.yyyy, r14.xyzx
        add r1.y, r9.x, l(-0.045500)
        mul_sat r1.y, r1.y, l(249.999985)
        mov r16.xyz, l(0,0,0,0)
        mov r1.w, l(1.000000)
        mov r5.x, l(1.000000)
        mov r15.xyzw, l(0,0,0,0)
        loop
          uge r16.w, r15.w, r12.w
          breakc_nz r16.w
          iadd r16.w, r0.w, r15.w
          ld_indexable(buffer)(uint,uint,uint,uint) r16.w, r16.wwww, t9.yzwx
          add r17.xyz, r12.xyzx, -cb2[r16.w + 0].xyzx
          dp3 r17.x, r17.xyzx, r17.xyzx
          mul r17.y, cb2[r16.w + 0].w, cb2[r16.w + 0].w
          lt r17.y, r17.x, r17.y
          if_nz r17.y
            lt r17.y, l(0.000000), cb2[r16.w + 341].z
            if_nz r17.y
              ishl r17.y, r16.w, l(2)
              mul r18.xyz, r12.yyyy, cb2[r17.y + 1024].xyzx
              mad r18.xyz, r12.xxxx, cb2[r17.y + 1023].xyzx, r18.xyzx
              mad r18.xyz, r12.zzzz, cb2[r17.y + 1025].xyzx, r18.xyzx
              add r17.yzw, r18.xxyz, cb2[r17.y + 1026].xxyz
              mul r18.x, l(0.700000), cb2[r16.w + 2387].w
              mad r18.yzw, -cb2[r16.w + 2387].wwww, l(0.000000, 0.500000, 0.500000, 0.500000), cb2[r16.w + 2387].xxyz
              mad r19.xyz, r17.yzwy, cb2[r16.w + 2387].xyzx, -r18.yzwy
              max r19.xyz, r19.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
              mad r17.yzw, r17.yyzw, cb2[r16.w + 2387].xxyz, r18.yyzw
              min r17.yzw, r17.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
              add r17.yzw, -r17.yyzw, r19.xxyz
              add r17.y, r17.z, r17.y
              add r17.y, r17.w, r17.y
              rcp r17.z, r18.x
              mul_sat r17.y, r17.z, r17.y
              mul r17.z, r17.y, r17.y
              mad r17.y, -r17.y, l(2.000000), l(3.000000)
              mad r17.y, -r17.z, r17.y, l(1.000000)
            else
              sqrt r17.x, r17.x
              div_sat r17.x, r17.x, cb2[r16.w + 0].w
              mad r17.x, r17.x, l(2.500000), l(-1.500000)
              max r17.x, r17.x, l(0.000000)
              mul r17.z, r17.x, r17.x
              mad r17.x, -r17.x, l(2.000000), l(3.000000)
              mad r17.y, -r17.z, r17.x, l(1.000000)
            endif
            lt r17.x, l(0.000000), r17.y
            if_nz r17.x
              mov r14.w, cb2[r16.w + 341].y
              sample_l_indexable(texturecubearray)(float,float,float,float) r17.xzw, r14.xyzw, t10.xwyz, s8, l(3.44974756)
              mul r16.w, r17.y, cb2[r16.w + 341].x
              mul r18.x, r1.w, r16.w
              mad r17.xzw, r17.xxzw, r18.xxxx, r15.xxyz
              add r17.y, -r17.y, l(1.000000)
              mul r1.w, r1.w, r17.y
              sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r14.xyzw, t10.xyzw, s8, l(4.000000)
              mul r14.w, r5.x, r16.w
              mad r18.xyz, r18.xyzx, r14.wwww, r16.xyzx
              mul r5.x, r5.x, r17.y
              lt r14.w, r1.w, l(0.001000)
              if_nz r14.w
                mov r15.xyz, r17.xzwx
                mov r16.xyz, r18.xyzx
                break
              endif
              mov r15.xyz, r17.xzwx
              mov r16.xyz, r18.xyzx
            endif
          endif
          iadd r15.w, r15.w, l(1)
        endloop
        mul r14.xyz, r15.xyzx, cb0[153].xyzx
        mul r15.xyz, r16.xyzx, cb0[153].xyzx
        dp3 r16.w, r10.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        dp3 r1.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        dp3 r5.x, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mov r16.xyz, r10.xyzx
        max r15.xyzw, r16.xyzw, l(0.000010, 0.000010, 0.000010, 0.000010)
        max r1.w, r1.w, l(0.000010)
        div r15.xyzw, r15.xyzw, r1.wwww
        mul r14.xyz, r14.xyzx, r15.wwww
        add_sat r1.w, r15.w, l(-1.000000)
        mad r15.xyz, r15.xyzx, r5.xxxx, -r14.xyzx
        mad r14.xyz, r1.wwww, r15.xyzx, r14.xyzx
        mad r15.xyz, r4.xyzx, cb0[128].yyyy, -r14.xyzx
        mad r14.xyz, r15.xyzx, l(0.249999970, 0.249999970, 0.249999970, 0.000000), r14.xyzx
        mad r4.xyz, -r4.xyzx, cb0[128].yyyy, r14.xyzx
        mad r13.xyz, r1.yyyy, r4.xyzx, r10.xyzx
      else
        mov r13.xyz, r10.xyzx
      endif
    endif
    and r1.y, r2.w, l(2)
    ine r1.y, r1.y, l(0)
    mov_sat r1.w, r0.z
    mad r2.w, -r1.w, l(3.000000), l(7.000000)
    mul r1.w, r1.w, r2.w
    min r1.w, r1.w, l(4.000000)
    mov r4.xyz, l(0,0,0,0)
    mov r2.w, l(1.000000)
    mov r5.x, l(1.000000)
    mov r14.xyzw, l(0,0,0,0)
    loop
      uge r15.x, r14.w, r12.w
      breakc_nz r15.x
      iadd r15.x, r0.w, r14.w
      ld_indexable(buffer)(uint,uint,uint,uint) r15.x, r15.xxxx, t9.xyzw
      add r15.yzw, r12.xxyz, -cb2[r15.x + 0].xxyz
      dp3 r16.x, r15.yzwy, r15.yzwy
      mul r16.y, cb2[r15.x + 0].w, cb2[r15.x + 0].w
      lt r16.y, r16.x, r16.y
      if_nz r16.y
        lt r16.y, l(0.000000), cb2[r15.x + 341].z
        if_nz r16.y
          ishl r16.y, r15.x, l(2)
          mul r17.xyz, r12.yyyy, cb2[r16.y + 1024].xyzx
          mad r17.xyz, r12.xxxx, cb2[r16.y + 1023].xyzx, r17.xyzx
          mad r17.xyz, r12.zzzz, cb2[r16.y + 1025].xyzx, r17.xyzx
          add r17.xyz, r17.xyzx, cb2[r16.y + 1026].xyzx
          mul r16.z, l(0.700000), cb2[r15.x + 2387].w
          mad r18.xyz, -cb2[r15.x + 2387].wwww, l(0.500000, 0.500000, 0.500000, 0.000000), cb2[r15.x + 2387].xyzx
          mad r19.xyz, r17.xyzx, cb2[r15.x + 2387].xyzx, -r18.xyzx
          max r19.xyz, r19.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          mad r18.xyz, r17.xyzx, cb2[r15.x + 2387].xyzx, r18.xyzx
          min r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
          add r18.xyz, -r18.xyzx, r19.xyzx
          add r16.w, r18.y, r18.x
          add r16.w, r18.z, r16.w
          rcp r16.z, r16.z
          mul_sat r16.z, r16.z, r16.w
          mul r16.w, r16.z, r16.z
          mad r16.z, -r16.z, l(2.000000), l(3.000000)
          mad r16.z, -r16.w, r16.z, l(1.000000)
          lt r16.w, l(0.000000), r16.z
          and r16.w, r1.y, r16.w
          if_nz r16.w
            add r18.xyz, r15.yzwy, -cb2[r15.x + 682].xyzx
            mul r19.xyz, r2.yyyy, cb2[r16.y + 1024].xyzx
            mad r19.xyz, r2.xxxx, cb2[r16.y + 1023].xyzx, r19.xyzx
            mad r19.xyz, r2.zzzz, cb2[r16.y + 1025].xyzx, r19.xyzx
            rcp r19.xyz, r19.xyzx
            mad r20.xyz, r17.xyzx, r19.xyzx, r19.xyzx
            mad r17.xyz, r17.xyzx, r19.xyzx, -r19.xyzx
            min r17.xyz, r17.xyzx, r20.xyzx
            max r16.y, r17.z, r17.y
            max r16.y, r16.y, r17.x
            mad r17.xyz, -r16.yyyy, r2.xyzx, r18.xyzx
          else
            mov r17.xyz, r2.xyzx
          endif
        else
          sqrt r16.y, r16.x
          div_sat r16.y, r16.y, cb2[r15.x + 0].w
          mad r16.y, r16.y, l(2.500000), l(-1.500000)
          max r16.y, r16.y, l(0.000000)
          mul r16.w, r16.y, r16.y
          mad r16.y, -r16.y, l(2.000000), l(3.000000)
          mad r16.z, -r16.w, r16.y, l(1.000000)
          lt r16.y, l(0.000000), r16.z
          and r16.y, r1.y, r16.y
          if_nz r16.y
            add r18.xyz, r15.yzwy, -cb2[r15.x + 682].xyzx
            dp3 r15.y, r2.xyzx, r15.yzwy
            mad r15.z, r15.y, r15.y, -r16.x
            mad r15.z, cb2[r15.x + 0].w, cb2[r15.x + 0].w, r15.z
            ge r15.w, r15.z, l(0.000000)
            sqrt r15.z, r15.z
            add r15.y, -r15.y, r15.z
            mad r16.xyw, r15.yyyy, r2.xyxz, r18.xyxz
            movc r17.xyz, r15.wwww, r16.xywx, r2.xyzx
          else
            mov r17.xyz, r2.xyzx
          endif
        endif
        lt r15.y, l(0.000000), r16.z
        if_nz r15.y
          mov r17.w, cb2[r15.x + 341].y
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r17.xyzw, t10.wxyz, s8, r1.w
          mul r16.x, r16.z, cb2[r15.x + 341].x
          mul r16.y, r2.w, r16.x
          mad r15.yzw, r15.yyzw, r16.yyyy, r4.xxyz
          add r16.y, -r16.z, l(1.000000)
          mul r2.w, r2.w, r16.y
          mov r6.w, cb2[r15.x + 341].y
          sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r6.xyzw, t10.xyzw, s8, l(4.000000)
          mul r6.w, r5.x, r16.x
          mad r16.xzw, r17.xxyz, r6.wwww, r14.xxyz
          mul r5.x, r5.x, r16.y
          lt r6.w, r2.w, l(0.001000)
          if_nz r6.w
            mov r4.xyz, r15.yzwy
            mov r14.xyz, r16.xzwx
            break
          endif
          mov r4.xyz, r15.yzwy
          mov r14.xyz, r16.xzwx
        endif
      endif
      iadd r14.w, r14.w, l(1)
    endloop
    mul r2.xyz, r4.xyzx, cb0[153].xyzx
    mul r6.xyz, r14.xyzx, cb0[153].xyzx
    if_nz r4.w
      dp3 r13.w, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      dp3 r0.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      dp3 r1.y, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      max r6.xyzw, r13.xyzw, l(0.000010, 0.000010, 0.000010, 0.000010)
      max r0.w, r0.w, l(0.000010)
      div r6.xyzw, r6.xyzw, r0.wwww
      mul r12.xyz, r2.xyzx, r6.wwww
      add_sat r0.w, r6.w, l(-1.000000)
      mad r6.xyz, r6.xyzx, r1.yyyy, -r12.xyzx
      mad r6.xyz, r0.wwww, r6.xyzx, r12.xyzx
      max r0.w, r0.z, l(0.040000)
      add r1.y, r0.w, r0.w
      min r1.y, r1.y, l(1.000000)
      mad r4.xyz, -r4.xyzx, cb0[153].xyzx, r6.xyzx
      mad r4.xyz, r1.yyyy, r4.xyzx, r2.xyzx
      mul r0.w, r0.w, r0.w
      mul r0.w, r0.w, r0.w
      add r6.xyz, -r4.xyzx, r13.xyzx
      mad r2.xyz, r0.wwww, r6.xyzx, r4.xyzx
    endif
    mul r2.xyz, r11.wwww, r2.xyzx
    mov r10.xyz, r13.xyzx
  else
    mov r2.xyz, l(0,0,0,0)
  endif
  dp3 r0.w, r10.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  max r0.w, r0.w, l(0.000010)
  max r1.y, r10.w, l(0.000010)
  rcp r1.y, r1.y
  mul r0.w, r0.w, r1.y
  min r0.w, r0.w, l(1.000000)
  add r1.y, -r0.w, l(1.000000)
  mad r0.w, r7.x, r1.y, r0.w
  mul r0.w, r7.y, r0.w
  mul r1.y, r0.x, r3.w
  min r1.w, r0.x, r3.w
  mad r2.w, r3.w, r0.x, l(1.000000)
  add r2.w, -r1.w, r2.w
  mul r2.w, r2.w, r2.w
  mad r0.x, -r3.w, r0.x, r1.w
  mad r0.x, r2.w, r0.x, r1.y
  mul r1.y, r0.w, r0.x
  min r1.w, r0.w, r0.x
  mad r2.w, r0.x, r0.w, l(1.000000)
  add r2.w, -r1.w, r2.w
  mul r2.w, r2.w, r2.w
  mad r0.x, -r0.x, r0.w, r1.w
  mad r0.x, r2.w, r0.x, r1.y
  add r0.w, r0.x, r8.y
  mul r1.y, r0.z, r0.z
  lt r1.w, r0.w, l(0.000001)
  log r0.w, |r0.w|
  mul r0.w, r0.w, r1.y
  exp r0.w, r0.w
  movc r0.w, r1.w, l(0), r0.w
  add r0.w, r0.x, r0.w
  add_sat r0.w, r0.w, l(-1.000000)
  mad r4.xyz, r3.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
  mad r6.xyz, r3.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
  mad r3.xyz, r3.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
  mad r4.xyz, r4.xyzx, r0.xxxx, r6.xyzx
  mad r3.xyz, r4.xyzx, r0.xxxx, r3.xyzx
  max r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r0.xxxx, r3.xyzx
  movc r0.x, r0.y, cb0[130].x, l(1.000000)
  mul r2.xyz, r2.xyzx, r0.xxxx
  mad r2.xyz, r2.xyzx, r0.wwww, r11.xyzx
  mul r0.xyw, r10.xyxz, r0.xxxx
  mul r4.xyz, r3.xyzx, r0.xywx
  or r1.y, r7.w, r8.x
  if_nz r1.y
    mad r6.xyzw, r0.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
    mul r1.y, r6.x, r6.x
    mul r1.w, r8.y, l(-9.280000)
    exp r1.w, r1.w
    min r1.y, r1.w, r1.y
    mad r1.y, r1.y, r6.x, r6.y
    mad r1.yw, r1.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r6.zzzw
    dp3 r9.w, r9.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
    mul_sat r2.w, r9.w, l(50.000000)
    mul r1.w, r1.w, r2.w
    mad_sat r6.xyzw, r9.xyzw, r1.yyyy, r1.wwww
    add r1.y, -r6.w, l(1.000000)
    mul r6.xyz, r2.xyzx, r6.xyzx
    mul r7.xyw, r1.yyyy, r4.xyxz
    mul r7.xyw, r5.yzyw, r7.xyxw
  else
    if_nz r8.z
      mad r10.xyzw, r0.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
      mul r1.y, r10.x, r10.x
      mul r1.w, r8.y, l(-9.280000)
      exp r1.w, r1.w
      min r1.y, r1.w, r1.y
      mad r1.y, r1.y, r10.x, r10.y
      mad r1.yw, r1.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r10.zzzw
      dp3 r2.w, r9.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
      mul_sat r2.w, r2.w, l(50.000000)
      mul r2.w, r1.w, r2.w
      mad_sat r10.xyz, r9.xyzx, r1.yyyy, r2.wwww
      mad_sat r1.y, r1.y, l(0.032500), r1.w
      add r1.y, -r1.y, l(1.000000)
      mul r6.xyz, r2.xyzx, r10.xyzx
      mul r10.xyz, r1.yyyy, r4.xyzx
      mul r7.xyw, r5.yzyw, r10.xyxz
    else
      ieq r1.x, r1.x, l(9)
      if_nz r1.x
        mad r10.xyzw, r0.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
        mul r1.x, r10.x, r10.x
        mul r1.y, r8.y, l(-9.280000)
        exp r1.y, r1.y
        min r1.x, r1.y, r1.x
        mad r1.x, r1.x, r10.x, r10.y
        mad r1.xy, r1.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r10.zwzz
        mad_sat r1.x, r1.x, l(0.045500), r1.y
        add r1.y, -r1.x, l(1.000000)
        mul r6.xyz, r1.xxxx, r2.xyzx
        mul r1.xyw, r1.yyyy, r4.xyxz
        mul r7.xyw, r5.yzyw, r1.xyxw
      else
        if_nz r8.w
          mad r10.xyzw, r0.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
          mul r0.z, r10.x, r10.x
          mul r1.x, r8.y, l(-9.280000)
          exp r1.x, r1.x
          min r0.z, r0.z, r1.x
          mad r0.z, r0.z, r10.x, r10.y
          mad r1.xy, r0.zzzz, l(-1.040000, 1.040000, 0.000000, 0.000000), r10.zwzz
          mad_sat r0.z, r1.x, l(0.046520), r1.y
          add r1.x, -r0.z, l(1.000000)
          mul r8.xzw, r2.xxyz, r0.zzzz
          mul r6.xyz, r8.xzwx, l(0.785398185, 0.785398185, 0.785398185, 0.000000)
          mad r0.xyz, -r0.xywx, r3.xyzx, r2.xyzx
          mad r0.xyz, r0.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r4.xyzx
          mul r0.xyz, r0.xyzx, r1.xxxx
          mul r0.xyz, r5.yzwy, r0.xyzx
          mul r7.xyw, r0.xyxz, l(0.785398185, 0.785398185, 0.000000, 0.785398185)
        else
          if_nz r7.z
            dp3 r9.w, r9.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
            mul_sat r0.x, r9.w, l(50.000000)
            mul r0.y, r0.x, l(0.047600)
            mad r0.x, -r0.x, l(0.047600), l(1.000000)
            mad r0.xyzw, r9.xyzw, r0.xxxx, r0.yyyy
            sqrt r1.x, r8.y
            mad r1.x, r1.x, l(-0.494999975), l(0.636000)
            mul r0.xyz, r0.xyzx, r1.xxxx
            mad r1.x, r8.y, l(-0.633000076), l(0.200000048)
            mad r1.x, r1.z, r1.x, l(1.000000)
            add r0.w, -r0.w, l(1.000000)
            mul r0.w, r0.w, r1.x
            mul r6.xyz, r0.xyzx, r2.xyzx
            mul r0.xyz, r0.wwww, r4.xyzx
            mul r7.xyw, r5.yzyw, r0.xyxz
          else
            mov r7.xyw, l(0,0,0,0)
            mov r6.xyz, l(0,0,0,0)
          endif
        endif
      endif
    endif
  endif
  add r0.xyz, r6.xyzx, r7.xywx
  dp3 r0.w, r7.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mul o0.xyzw, r0.xyzw, cb0[128].xxxx
else
  mov o0.xyzw, l(0,0,0,0)
endif
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
