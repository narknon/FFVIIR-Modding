// ---- Created with 3Dmigoto v1.3.16 on Fri Dec 17 21:16:15 2021
Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

cbuffer cb0 : register(b0)
{
  float4 cb0[127];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = floor(v0.xy);
  r0.xy = (int2)r0.xy;
  r0.zw = float2(0,0);
  r1.x = t1.Load(r0.xyw).x;
  r0.x = t0.Load(r0.xyz).w;
  r0.x = r0.x * 3 + 0.5;
  r0.x = (uint)r0.x;
  r0.x = (int)r0.x & 1;
  r0.y = r1.x * cb0[57].z + -cb0[57].w;
  r0.z = r1.x * cb0[57].x + cb0[57].y;
  r0.y = rcp(r0.y);
  r0.y = r0.z + r0.y;
  r1.zw = float2(0,0);
  r0.zw = float2(0.5,0.5) * cb0[122].xy;
  r0.zw = floor(r0.zw);
  r0.zw = float2(-1,-1) + r0.zw;
  r0.zw = (int2)r0.zw;
  r2.xy = float2(0.5,0.5) * cb0[126].xy;
  r2.xy = floor(r2.xy);
  r2.xy = cb0[126].zw * r2.xy;
  r2.zw = -cb0[121].xy + v0.xy;
  r3.xy = r2.zw * r2.xy + float2(-0.5,-0.5);
  r3.xy = floor(r3.xy);
  r3.zw = (int2)r3.xy;
  r2.xy = r2.zw * r2.xy + -r3.xy;
  r2.xy = saturate(float2(-0.5,-0.5) + r2.xy);
  r2.zw = (int2)r3.zw + int2(1,1);
  r2.zw = max(int2(0,0), (int2)r2.zw);
  r1.xy = min((int2)r2.zw, (int2)r0.zw);
  r1.xyzw = t2.Load(r1.xyz).xyzw;
  r2.z = r1.w * cb0[57].z + -cb0[57].w;
  r2.z = rcp(r2.z);
  r1.w = r1.w * cb0[57].x + cb0[57].y;
  r4.w = r1.w + r2.z;
  r5.xyzw = (int4)r3.zwzw + int4(1,0,0,1);
  r2.zw = max(int2(0,0), (int2)r3.zw);
  r3.xy = min((int2)r2.zw, (int2)r0.zw);
  r5.xyzw = max(int4(0,0,0,0), (int4)r5.xyzw);
  r5.xyzw = min((int4)r5.zwxy, (int4)r0.zwzw);
  r6.xy = r5.zw;
  r6.zw = float2(0,0);
  r6.xyzw = t2.Load(r6.xyz).yxzw;
  r0.z = r6.w * cb0[57].z + -cb0[57].w;
  r0.z = rcp(r0.z);
  r0.w = r6.w * cb0[57].x + cb0[57].y;
  r4.y = r0.w + r0.z;
  r5.zw = float2(0,0);
  r5.xyzw = t2.Load(r5.xyz).xzyw;
  r0.z = r5.w * cb0[57].z + -cb0[57].w;
  r0.z = rcp(r0.z);
  r0.w = r5.w * cb0[57].x + cb0[57].y;
  r4.z = r0.w + r0.z;
  r3.zw = float2(0,0);
  r3.xyzw = t2.Load(r3.xyz).xyzw;
  r0.z = r3.w * cb0[57].z + -cb0[57].w;
  r0.z = rcp(r0.z);
  r0.w = r3.w * cb0[57].x + cb0[57].y;
  r4.x = r0.w + r0.z;
  r4.xyzw = r4.xyzw + -r0.yyyy;
  r4.xyzw = max(float4(9.99999975e-005,9.99999975e-005,9.99999975e-005,9.99999975e-005), abs(r4.xyzw));
  r4.xyzw = rcp(r4.xyzw);
  r0.yz = float2(1,1) + -r2.yx;
  r7.yz = r2.xy * r0.yz;
  r7.x = r0.z * r0.y;
  r7.w = r2.x * r2.y;
  r2.xyzw = r7.xyzw * r4.xyzw;
  r4.y = r6.z;
  r4.z = r5.y;
  r0.y = r0.x ? -1 : -0;
  r4.w = r1.z;
  r4.x = r3.z;
  r4.xyzw = r4.xyzw + r0.yyyy;
  r4.xyzw = cmp(abs(r4.xyzw) < float4(0.5,0.5,0.5,0.5));
  r4.xyzw = r4.xyzw ? float4(1,1,1,1) : 0;
  r2.xyzw = r4.xyzw * r2.xyzw;
  r2.xyzw = max(float4(9.99999975e-005,9.99999975e-005,9.99999975e-005,9.99999975e-005), r2.xyzw);
  r6.w = r1.x;
  r5.w = r1.y;
  r5.y = r6.x;
  r6.z = r5.x;
  r6.x = r3.x;
  r5.x = r3.y;
  r0.y = dot(r5.xyzw, r2.xyzw);
  r0.z = dot(r6.xyzw, r2.xyzw);
  r0.w = dot(r2.xyzw, float4(1,1,1,1));
  r0.w = rcp(r0.w);
  r1.xy = r0.zy * r0.ww;
  o0.xy = r0.xx ? float2(1,1) : r1.xy;
  o0.zw = float2(0,0);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Dec 17 21:16:15 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[127], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 8
round_ni r0.xy, v0.xyxx
ftoi r0.xy, r0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r0.xyww, t1.xyzw
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t0.wxyz
mad r0.x, r0.x, l(3.000000), l(0.500000)
ftou r0.x, r0.x
and r0.x, r0.x, l(1)
mad r0.y, r1.x, cb0[57].z, -cb0[57].w
mad r0.z, r1.x, cb0[57].x, cb0[57].y
rcp r0.y, r0.y
add r0.y, r0.y, r0.z
mov r1.zw, l(0,0,0,0)
mul r0.zw, cb0[122].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
round_ni r0.zw, r0.zzzw
add r0.zw, r0.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
ftoi r0.zw, r0.zzzw
mul r2.xy, cb0[126].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
round_ni r2.xy, r2.xyxx
mul r2.xy, r2.xyxx, cb0[126].zwzz
add r2.zw, v0.xxxy, -cb0[121].xxxy
mad r3.xy, r2.zwzz, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
round_ni r3.xy, r3.xyxx
ftoi r3.zw, r3.xxxy
mad r2.xy, r2.zwzz, r2.xyxx, -r3.xyxx
add_sat r2.xy, r2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
iadd r2.zw, r3.zzzw, l(0, 0, 1, 1)
imax r2.zw, r2.zzzw, l(0, 0, 0, 0)
imin r1.xy, r0.zwzz, r2.zwzz
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t2.xyzw
mad r2.z, r1.w, cb0[57].z, -cb0[57].w
rcp r2.z, r2.z
mad r1.w, r1.w, cb0[57].x, cb0[57].y
add r4.w, r2.z, r1.w
iadd r5.xyzw, r3.zwzw, l(1, 0, 0, 1)
imax r2.zw, r3.zzzw, l(0, 0, 0, 0)
imin r3.xy, r0.zwzz, r2.zwzz
imax r5.xyzw, r5.xyzw, l(0, 0, 0, 0)
imin r5.xyzw, r0.zwzw, r5.zwxy
mov r6.xy, r5.zwzz
mov r6.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r6.xyzw, t2.yxzw
mad r0.z, r6.w, cb0[57].z, -cb0[57].w
rcp r0.z, r0.z
mad r0.w, r6.w, cb0[57].x, cb0[57].y
add r4.y, r0.z, r0.w
mov r5.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.xyzw, t2.xzyw
mad r0.z, r5.w, cb0[57].z, -cb0[57].w
rcp r0.z, r0.z
mad r0.w, r5.w, cb0[57].x, cb0[57].y
add r4.z, r0.z, r0.w
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyzw, t2.xyzw
mad r0.z, r3.w, cb0[57].z, -cb0[57].w
rcp r0.z, r0.z
mad r0.w, r3.w, cb0[57].x, cb0[57].y
add r4.x, r0.z, r0.w
add r4.xyzw, -r0.yyyy, r4.xyzw
max r4.xyzw, |r4.xyzw|, l(0.000100, 0.000100, 0.000100, 0.000100)
rcp r4.xyzw, r4.xyzw
add r0.yz, -r2.yyxy, l(0.000000, 1.000000, 1.000000, 0.000000)
mul r7.yz, r0.yyzy, r2.xxyx
mul r7.x, r0.y, r0.z
mul r7.w, r2.y, r2.x
mul r2.xyzw, r4.xyzw, r7.xyzw
mov r4.y, r6.z
mov r4.z, r5.y
movc r0.y, r0.x, l(-1.000000), l(-0.000000)
mov r4.w, r1.z
mov r4.x, r3.z
add r4.xyzw, r0.yyyy, r4.xyzw
lt r4.xyzw, |r4.xyzw|, l(0.500000, 0.500000, 0.500000, 0.500000)
and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r2.xyzw, r2.xyzw, r4.xyzw
max r2.xyzw, r2.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)
mov r6.w, r1.x
mov r5.w, r1.y
mov r5.y, r6.x
mov r6.z, r5.x
mov r6.x, r3.x
mov r5.x, r3.y
dp4 r0.y, r5.xyzw, r2.xyzw
dp4 r0.z, r6.xyzw, r2.xyzw
dp4 r0.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
rcp r0.w, r0.w
mul r1.xy, r0.wwww, r0.zyzz
movc o0.xy, r0.xxxx, l(1.000000,1.000000,0,0), r1.xyxx
mov o0.zw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
