// ---- Created with 3Dmigoto v1.3.16 on Sat Dec 18 12:57:34 2021
Buffer<float4> t0 : register(t0);

cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[63];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[9];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  float3 v1 : ATTRIBUTE1,
  float4 v2 : ATTRIBUTE2,
  uint4 v3 : ATTRIBUTE3,
  float4 v4 : ATTRIBUTE4,
  float2 v5 : ATTRIBUTE5,
  float2 v6 : ATTRIBUTE6,
  float2 v7 : ATTRIBUTE7,
  out float2 o0 : TEXCOORD2,
  out float4 o1 : VertexContextVector0,
  out float4 o2 : SV_POSITION0,
  out float o3 : SV_CullDistance0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.xy = v7.xy;
  o1.xyzw = float4(0,0,0,0);
  r0.xyzw = (uint4)v3.xyzw << int4(2,2,2,2);
  r1.xyzw = t0.Load(r0.y).xyzw;
  r1.xyzw = v4.yyyy * r1.xyzw;
  r2.xyzw = t0.Load(r0.x).xyzw;
  r1.xyzw = v4.xxxx * r2.xyzw + r1.xyzw;
  r2.xyzw = t0.Load(r0.z).xyzw;
  r0.xyzw = t0.Load(r0.w).xyzw;
  r1.xyzw = v4.zzzz * r2.xyzw + r1.xyzw;
  r0.xyzw = v4.wwww * r0.xyzw + r1.xyzw;
  r1.xyz = v0.xyz * cb0[8].xyz + cb0[7].xyz;
  r1.w = 1;
  r0.x = dot(r0.xyzw, r1.xyzw);
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r2.x = (((uint)v3.x << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r2.y = (((uint)v3.x << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r2.z = (((uint)v3.y << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r2.w = (((uint)v3.y << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r3.xyzw = t0.Load(r2.z).xyzw;
  r3.xyzw = v4.yyyy * r3.xyzw;
  r4.xyzw = t0.Load(r2.x).xyzw;
  r3.xyzw = v4.xxxx * r4.xyzw + r3.xyzw;
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r4.x = (((uint)v3.z << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r4.y = (((uint)v3.z << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r4.z = (((uint)v3.w << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r4.w = (((uint)v3.w << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r5.xyzw = t0.Load(r4.x).xyzw;
  r3.xyzw = v4.zzzz * r5.xyzw + r3.xyzw;
  r5.xyzw = t0.Load(r4.z).xyzw;
  r3.xyzw = v4.wwww * r5.xyzw + r3.xyzw;
  r0.y = dot(r3.xyzw, r1.xyzw);
  r0.yzw = cb2[1].xyz * r0.yyy;
  r0.xyz = cb2[0].xyz * r0.xxx + r0.yzw;
  r3.xyzw = t0.Load(r2.w).xyzw;
  r2.xyzw = t0.Load(r2.y).xyzw;
  r3.xyzw = v4.yyyy * r3.xyzw;
  r2.xyzw = v4.xxxx * r2.xyzw + r3.xyzw;
  r3.xyzw = t0.Load(r4.y).xyzw;
  r4.xyzw = t0.Load(r4.w).xyzw;
  r2.xyzw = v4.zzzz * r3.xyzw + r2.xyzw;
  r2.xyzw = v4.wwww * r4.xyzw + r2.xyzw;
  r0.w = dot(r2.xyzw, r1.xyzw);
  r0.xyz = cb2[2].xyz * r0.www + r0.xyz;
  r0.xyz = cb2[3].xyz + r0.xyz;
  r0.xyz = cb1[62].xyz + r0.xyz;
  r1.xyzw = cb1[1].xyzw * r0.yyyy;
  r1.xyzw = r0.xxxx * cb1[0].xyzw + r1.xyzw;
  r0.xyzw = r0.zzzz * cb1[2].xyzw + r1.xyzw;
  o2.xyzw = cb1[3].xyzw + r0.xyzw;
  o3.x = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Dec 18 12:57:34 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// ATTRIBUTE                1   xyz         1     NONE   float
// ATTRIBUTE                2   xyzw        2     NONE   float
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        4     NONE   float   xyzw
// ATTRIBUTE                5   xy          5     NONE   float
// ATTRIBUTE                6   xy          6     NONE   float
// ATTRIBUTE                7   xy          7     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 2   xy          0     NONE   float   xy
// VertexContextVector      0   xyzw        1     NONE   float   xyzw
// SV_POSITION              0   xyzw        2      POS   float   xyzw
// SV_CullDistance          0   x           3  CULLDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[63], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v7.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output_siv o2.xyzw, position
dcl_output_siv o3.x, cull_distance
dcl_temps 6
mov o0.xy, v7.xyxx
mov o1.xyzw, l(0,0,0,0)
ishl r0.xyzw, v3.xyzw, l(2, 2, 2, 2)
ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
mul r1.xyzw, r1.xyzw, v4.yyyy
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.xxxx, t0.xyzw
mad r1.xyzw, v4.xxxx, r2.xyzw, r1.xyzw
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r0.xyzw, r0.wwww, t0.xyzw
mad r1.xyzw, v4.zzzz, r2.xyzw, r1.xyzw
mad r0.xyzw, v4.wwww, r0.xyzw, r1.xyzw
mad r1.xyz, v0.xyzx, cb0[8].xyzx, cb0[7].xyzx
mov r1.w, l(1.000000)
dp4 r0.x, r0.xyzw, r1.xyzw
bfi r2.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v3.xxyy, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.zzzz, t0.xyzw
mul r3.xyzw, r3.xyzw, v4.yyyy
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r2.xxxx, t0.xyzw
mad r3.xyzw, v4.xxxx, r4.xyzw, r3.xyzw
bfi r4.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v3.zzww, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.xxxx, t0.xyzw
mad r3.xyzw, v4.zzzz, r5.xyzw, r3.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.zzzz, t0.xyzw
mad r3.xyzw, v4.wwww, r5.xyzw, r3.xyzw
dp4 r0.y, r3.xyzw, r1.xyzw
mul r0.yzw, r0.yyyy, cb2[1].xxyz
mad r0.xyz, cb2[0].xyzx, r0.xxxx, r0.yzwy
ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r2.yyyy, t0.xyzw
mul r3.xyzw, r3.xyzw, v4.yyyy
mad r2.xyzw, v4.xxxx, r2.xyzw, r3.xyzw
ld_indexable(buffer)(float,float,float,float) r3.xyzw, r4.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r4.wwww, t0.xyzw
mad r2.xyzw, v4.zzzz, r3.xyzw, r2.xyzw
mad r2.xyzw, v4.wwww, r4.xyzw, r2.xyzw
dp4 r0.w, r2.xyzw, r1.xyzw
mad r0.xyz, cb2[2].xyzx, r0.wwww, r0.xyzx
add r0.xyz, r0.xyzx, cb2[3].xyzx
add r0.xyz, r0.xyzx, cb1[62].xyzx
mul r1.xyzw, r0.yyyy, cb1[1].xyzw
mad r1.xyzw, r0.xxxx, cb1[0].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb1[2].xyzw, r1.xyzw
add o2.xyzw, r0.xyzw, cb1[3].xyzw
mov o3.x, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
