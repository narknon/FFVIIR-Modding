// ---- Created with 3Dmigoto v1.3.16 on Mon Dec 27 17:14:45 2021
Buffer<float4> t1 : register(t1);

Buffer<float4> t0 : register(t0);

cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[106];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[9];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  float3 v1 : ATTRIBUTE1,
  float4 v2 : ATTRIBUTE2,
  uint4 v3 : ATTRIBUTE3,
  float4 v4 : ATTRIBUTE4,
  uint4 v5 : ATTRIBUTE14,
  float4 v6 : ATTRIBUTE15,
  float2 v7 : ATTRIBUTE5,
  float2 v8 : ATTRIBUTE6,
  uint v9 : SV_VertexID0,
  out float2 o0 : TEXCOORD0,
  out float4 o1 : ClipPosition0,
  out float4 o2 : PreviousClipPosition0,
  out float4 o3 : SV_POSITION0,
  out float o4 : SV_CullDistance0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v0.xyz * cb0[8].xyz + cb0[7].xyz;
  r1.xyzw = (uint4)v3.xyzw << int4(2,2,2,2);
  r2.xyzw = t0.Load(r1.x).xyzw;
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r3.x = (((uint)v3.x << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r3.y = (((uint)v3.x << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r3.z = (((uint)v3.y << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r3.w = (((uint)v3.y << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r4.xyzw = t0.Load(r3.x).xyzw;
  r5.xyzw = t0.Load(r3.y).xyzw;
  r6.xyzw = t0.Load(r1.y).xyzw;
  r7.xyzw = t0.Load(r3.z).xyzw;
  r8.xyzw = t0.Load(r3.w).xyzw;
  r6.xyzw = v4.yyyy * r6.xyzw;
  r7.xyzw = v4.yyyy * r7.xyzw;
  r8.xyzw = v4.yyyy * r8.xyzw;
  r2.xyzw = v4.xxxx * r2.xyzw + r6.xyzw;
  r4.xyzw = v4.xxxx * r4.xyzw + r7.xyzw;
  r5.xyzw = v4.xxxx * r5.xyzw + r8.xyzw;
  r6.xyzw = t0.Load(r1.z).xyzw;
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r7.x = (((uint)v3.z << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r7.y = (((uint)v3.z << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r7.z = (((uint)v3.w << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r7.w = (((uint)v3.w << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r8.xyzw = t0.Load(r7.x).xyzw;
  r9.xyzw = t0.Load(r7.y).xyzw;
  r2.xyzw = v4.zzzz * r6.xyzw + r2.xyzw;
  r4.xyzw = v4.zzzz * r8.xyzw + r4.xyzw;
  r5.xyzw = v4.zzzz * r9.xyzw + r5.xyzw;
  r6.xyzw = t0.Load(r1.w).xyzw;
  r8.xyzw = t0.Load(r7.z).xyzw;
  r9.xyzw = t0.Load(r7.w).xyzw;
  r2.xyzw = v4.wwww * r6.xyzw + r2.xyzw;
  r4.xyzw = v4.wwww * r8.xyzw + r4.xyzw;
  r5.xyzw = v4.wwww * r9.xyzw + r5.xyzw;
  r6.xyzw = (uint4)v5.xyzw << int4(2,2,2,2);
  r8.xyzw = t0.Load(r6.x).xyzw;
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r9.x = (((uint)v5.x << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r9.y = (((uint)v5.x << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r9.z = (((uint)v5.y << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r9.w = (((uint)v5.y << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r10.xyzw = t0.Load(r9.x).xyzw;
  r11.xyzw = t0.Load(r9.y).xyzw;
  r2.xyzw = v6.xxxx * r8.xyzw + r2.xyzw;
  r4.xyzw = v6.xxxx * r10.xyzw + r4.xyzw;
  r5.xyzw = v6.xxxx * r11.xyzw + r5.xyzw;
  r8.xyzw = t0.Load(r6.y).xyzw;
  r10.xyzw = t0.Load(r9.z).xyzw;
  r11.xyzw = t0.Load(r9.w).xyzw;
  r2.xyzw = v6.yyyy * r8.xyzw + r2.xyzw;
  r4.xyzw = v6.yyyy * r10.xyzw + r4.xyzw;
  r5.xyzw = v6.yyyy * r11.xyzw + r5.xyzw;
  r8.xyzw = t0.Load(r6.z).xyzw;
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r10.x = (((uint)v5.z << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r10.y = (((uint)v5.z << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r10.z = (((uint)v5.w << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r10.w = (((uint)v5.w << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r11.xyzw = t0.Load(r10.x).xyzw;
  r12.xyzw = t0.Load(r10.y).xyzw;
  r2.xyzw = v6.zzzz * r8.xyzw + r2.xyzw;
  r4.xyzw = v6.zzzz * r11.xyzw + r4.xyzw;
  r5.xyzw = v6.zzzz * r12.xyzw + r5.xyzw;
  r8.xyzw = t0.Load(r6.w).xyzw;
  r11.xyzw = t0.Load(r10.z).xyzw;
  r12.xyzw = t0.Load(r10.w).xyzw;
  r2.xyzw = v6.wwww * r8.xyzw + r2.xyzw;
  r4.xyzw = v6.wwww * r11.xyzw + r4.xyzw;
  r5.xyzw = v6.wwww * r12.xyzw + r5.xyzw;
  r0.w = 1;
  r8.x = dot(r2.xyzw, r0.xyzw);
  r8.y = dot(r4.xyzw, r0.xyzw);
  r8.z = dot(r5.xyzw, r0.xyzw);
  r11.xyz = cb2[1].xyz * r8.yyy;
  r8.xyw = cb2[0].xyz * r8.xxx + r11.xyz;
  r8.xyz = cb2[2].xyz * r8.zzz + r8.xyw;
  r8.xyz = cb2[3].xyz + r8.xyz;
  r8.xyz = cb1[62].xyz + r8.xyz;
  r11.xyzw = cb1[1].xyzw * r8.yyyy;
  r11.xyzw = r8.xxxx * cb1[0].xyzw + r11.xyzw;
  r8.xyzw = r8.zzzz * cb1[2].xyzw + r11.xyzw;
  r8.xyzw = cb1[3].xyzw + r8.xyzw;
  r11.xyw = cb1[105].xyz + cb0[6].xyz;
  if (cb0[8].w != 0) {
    r12.xyzw = t1.Load(r1.x).xyzw;
    r13.xyzw = t1.Load(r3.x).xyzw;
    r14.xyzw = t1.Load(r3.y).xyzw;
    r15.xyzw = t1.Load(r1.y).xyzw;
    r16.xyzw = t1.Load(r3.z).xyzw;
    r3.xyzw = t1.Load(r3.w).xyzw;
    r15.xyzw = v4.yyyy * r15.xyzw;
    r16.xyzw = v4.yyyy * r16.xyzw;
    r3.xyzw = v4.yyyy * r3.xyzw;
    r12.xyzw = v4.xxxx * r12.xyzw + r15.xyzw;
    r13.xyzw = v4.xxxx * r13.xyzw + r16.xyzw;
    r3.xyzw = v4.xxxx * r14.xyzw + r3.xyzw;
    r14.xyzw = t1.Load(r1.z).xyzw;
    r15.xyzw = t1.Load(r7.x).xyzw;
    r16.xyzw = t1.Load(r7.y).xyzw;
    r12.xyzw = v4.zzzz * r14.xyzw + r12.xyzw;
    r13.xyzw = v4.zzzz * r15.xyzw + r13.xyzw;
    r3.xyzw = v4.zzzz * r16.xyzw + r3.xyzw;
    r1.xyzw = t1.Load(r1.w).xyzw;
    r14.xyzw = t1.Load(r7.z).xyzw;
    r7.xyzw = t1.Load(r7.w).xyzw;
    r1.xyzw = v4.wwww * r1.xyzw + r12.xyzw;
    r12.xyzw = v4.wwww * r14.xyzw + r13.xyzw;
    r3.xyzw = v4.wwww * r7.xyzw + r3.xyzw;
    r7.xyzw = t1.Load(r6.x).xyzw;
    r13.xyzw = t1.Load(r9.x).xyzw;
    r14.xyzw = t1.Load(r9.y).xyzw;
    r1.xyzw = v6.xxxx * r7.xyzw + r1.xyzw;
    r7.xyzw = v6.xxxx * r13.xyzw + r12.xyzw;
    r3.xyzw = v6.xxxx * r14.xyzw + r3.xyzw;
    r12.xyzw = t1.Load(r6.y).xyzw;
    r13.xyzw = t1.Load(r9.z).xyzw;
    r9.xyzw = t1.Load(r9.w).xyzw;
    r1.xyzw = v6.yyyy * r12.xyzw + r1.xyzw;
    r7.xyzw = v6.yyyy * r13.xyzw + r7.xyzw;
    r3.xyzw = v6.yyyy * r9.xyzw + r3.xyzw;
    r9.xyzw = t1.Load(r6.z).xyzw;
    r12.xyzw = t1.Load(r10.x).xyzw;
    r13.xyzw = t1.Load(r10.y).xyzw;
    r1.xyzw = v6.zzzz * r9.xyzw + r1.xyzw;
    r7.xyzw = v6.zzzz * r12.xyzw + r7.xyzw;
    r3.xyzw = v6.zzzz * r13.xyzw + r3.xyzw;
    r6.xyzw = t1.Load(r6.w).xyzw;
    r9.xyzw = t1.Load(r10.z).xyzw;
    r10.xyzw = t1.Load(r10.w).xyzw;
    r2.xyzw = v6.wwww * r6.xyzw + r1.xyzw;
    r4.xyzw = v6.wwww * r9.xyzw + r7.xyzw;
    r5.xyzw = v6.wwww * r10.xyzw + r3.xyzw;
  }
  r1.x = dot(r2.xyzw, r0.xyzw);
  r1.y = dot(r4.xyzw, r0.xyzw);
  r1.z = dot(r5.xyzw, r0.xyzw);
  r1.w = 1;
  r0.x = cb0[3].x;
  r0.y = cb0[4].x;
  r0.z = cb0[5].x;
  r0.w = r11.x;
  r0.x = dot(r1.xyzw, r0.xyzw);
  r2.x = cb0[3].y;
  r2.y = cb0[4].y;
  r2.z = cb0[5].y;
  r2.w = r11.y;
  r0.y = dot(r1.xyzw, r2.xyzw);
  r11.x = cb0[3].z;
  r11.y = cb0[4].z;
  r11.z = cb0[5].z;
  r0.z = dot(r1.xyzw, r11.xyzw);
  r2.x = cb0[3].w;
  r2.y = cb0[4].w;
  r2.z = cb0[5].w;
  r2.w = cb0[6].w;
  r0.w = dot(r1.xyzw, r2.xyzw);
  r1.xyzw = cb1[84].xyzw * r0.yyyy;
  r1.xyzw = r0.xxxx * cb1[83].xyzw + r1.xyzw;
  r1.xyzw = r0.zzzz * cb1[85].xyzw + r1.xyzw;
  o2.xyzw = r0.wwww * cb1[86].xyzw + r1.xyzw;
  o1.xyzw = r8.xyzw;
  o3.xyzw = r8.xyzw;
  o0.xy = v7.xy;
  o4.x = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Dec 27 17:14:45 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// ATTRIBUTE                1   xyz         1     NONE   float
// ATTRIBUTE                2   xyzw        2     NONE   float
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        4     NONE   float   xyzw
// ATTRIBUTE               14   xyzw        5     NONE    uint   xyzw
// ATTRIBUTE               15   xyzw        6     NONE   float   xyzw
// ATTRIBUTE                5   xy          7     NONE   float   xy
// ATTRIBUTE                6   xy          8     NONE   float
// SV_VertexID              0   x           9   VERTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// ClipPosition             0   xyzw        1     NONE   float   xyzw
// PreviousClipPosition     0   xyzw        2     NONE   float   xyzw
// SV_POSITION              0   xyzw        3      POS   float   xyzw
// SV_CullDistance          0   x           4  CULLDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[106], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_input v0.xyz
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xy
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output_siv o3.xyzw, position
dcl_output_siv o4.x, cull_distance
dcl_temps 17
mad r0.xyz, v0.xyzx, cb0[8].xyzx, cb0[7].xyzx
ishl r1.xyzw, v3.xyzw, l(2, 2, 2, 2)
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r1.xxxx, t0.xyzw
bfi r3.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v3.xxyy, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r3.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r3.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r1.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r3.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r3.wwww, t0.xyzw
mul r6.xyzw, r6.xyzw, v4.yyyy
mul r7.xyzw, r7.xyzw, v4.yyyy
mul r8.xyzw, r8.xyzw, v4.yyyy
mad r2.xyzw, v4.xxxx, r2.xyzw, r6.xyzw
mad r4.xyzw, v4.xxxx, r4.xyzw, r7.xyzw
mad r5.xyzw, v4.xxxx, r5.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r1.zzzz, t0.xyzw
bfi r7.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v3.zzww, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r7.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r7.yyyy, t0.xyzw
mad r2.xyzw, v4.zzzz, r6.xyzw, r2.xyzw
mad r4.xyzw, v4.zzzz, r8.xyzw, r4.xyzw
mad r5.xyzw, v4.zzzz, r9.xyzw, r5.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r1.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r7.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r7.wwww, t0.xyzw
mad r2.xyzw, v4.wwww, r6.xyzw, r2.xyzw
mad r4.xyzw, v4.wwww, r8.xyzw, r4.xyzw
mad r5.xyzw, v4.wwww, r9.xyzw, r5.xyzw
ishl r6.xyzw, v5.xyzw, l(2, 2, 2, 2)
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r6.xxxx, t0.xyzw
bfi r9.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v5.xxyy, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r9.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r9.yyyy, t0.xyzw
mad r2.xyzw, v6.xxxx, r8.xyzw, r2.xyzw
mad r4.xyzw, v6.xxxx, r10.xyzw, r4.xyzw
mad r5.xyzw, v6.xxxx, r11.xyzw, r5.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r6.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r9.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r9.wwww, t0.xyzw
mad r2.xyzw, v6.yyyy, r8.xyzw, r2.xyzw
mad r4.xyzw, v6.yyyy, r10.xyzw, r4.xyzw
mad r5.xyzw, v6.yyyy, r11.xyzw, r5.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r6.zzzz, t0.xyzw
bfi r10.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v5.zzww, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r10.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r10.yyyy, t0.xyzw
mad r2.xyzw, v6.zzzz, r8.xyzw, r2.xyzw
mad r4.xyzw, v6.zzzz, r11.xyzw, r4.xyzw
mad r5.xyzw, v6.zzzz, r12.xyzw, r5.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r6.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r10.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r10.wwww, t0.xyzw
mad r2.xyzw, v6.wwww, r8.xyzw, r2.xyzw
mad r4.xyzw, v6.wwww, r11.xyzw, r4.xyzw
mad r5.xyzw, v6.wwww, r12.xyzw, r5.xyzw
mov r0.w, l(1.000000)
dp4 r8.x, r2.xyzw, r0.xyzw
dp4 r8.y, r4.xyzw, r0.xyzw
dp4 r8.z, r5.xyzw, r0.xyzw
mul r11.xyz, r8.yyyy, cb2[1].xyzx
mad r8.xyw, cb2[0].xyxz, r8.xxxx, r11.xyxz
mad r8.xyz, cb2[2].xyzx, r8.zzzz, r8.xywx
add r8.xyz, r8.xyzx, cb2[3].xyzx
add r8.xyz, r8.xyzx, cb1[62].xyzx
mul r11.xyzw, r8.yyyy, cb1[1].xyzw
mad r11.xyzw, r8.xxxx, cb1[0].xyzw, r11.xyzw
mad r8.xyzw, r8.zzzz, cb1[2].xyzw, r11.xyzw
add r8.xyzw, r8.xyzw, cb1[3].xyzw
add r11.xyw, cb0[6].xyxz, cb1[105].xyxz
if_nz cb0[8].w
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r1.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r13.xyzw, r3.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xyzw, r3.yyyy, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r15.xyzw, r1.yyyy, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r16.xyzw, r3.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r3.wwww, t1.xyzw
  mul r15.xyzw, r15.xyzw, v4.yyyy
  mul r16.xyzw, r16.xyzw, v4.yyyy
  mul r3.xyzw, r3.xyzw, v4.yyyy
  mad r12.xyzw, v4.xxxx, r12.xyzw, r15.xyzw
  mad r13.xyzw, v4.xxxx, r13.xyzw, r16.xyzw
  mad r3.xyzw, v4.xxxx, r14.xyzw, r3.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xyzw, r1.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r15.xyzw, r7.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r16.xyzw, r7.yyyy, t1.xyzw
  mad r12.xyzw, v4.zzzz, r14.xyzw, r12.xyzw
  mad r13.xyzw, v4.zzzz, r15.xyzw, r13.xyzw
  mad r3.xyzw, v4.zzzz, r16.xyzw, r3.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r1.wwww, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xyzw, r7.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r7.xyzw, r7.wwww, t1.xyzw
  mad r1.xyzw, v4.wwww, r1.xyzw, r12.xyzw
  mad r12.xyzw, v4.wwww, r14.xyzw, r13.xyzw
  mad r3.xyzw, v4.wwww, r7.xyzw, r3.xyzw
  ld_indexable(buffer)(float,float,float,float) r7.xyzw, r6.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r13.xyzw, r9.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xyzw, r9.yyyy, t1.xyzw
  mad r1.xyzw, v6.xxxx, r7.xyzw, r1.xyzw
  mad r7.xyzw, v6.xxxx, r13.xyzw, r12.xyzw
  mad r3.xyzw, v6.xxxx, r14.xyzw, r3.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r6.yyyy, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r13.xyzw, r9.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r9.xyzw, r9.wwww, t1.xyzw
  mad r1.xyzw, v6.yyyy, r12.xyzw, r1.xyzw
  mad r7.xyzw, v6.yyyy, r13.xyzw, r7.xyzw
  mad r3.xyzw, v6.yyyy, r9.xyzw, r3.xyzw
  ld_indexable(buffer)(float,float,float,float) r9.xyzw, r6.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r10.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r13.xyzw, r10.yyyy, t1.xyzw
  mad r1.xyzw, v6.zzzz, r9.xyzw, r1.xyzw
  mad r7.xyzw, v6.zzzz, r12.xyzw, r7.xyzw
  mad r3.xyzw, v6.zzzz, r13.xyzw, r3.xyzw
  ld_indexable(buffer)(float,float,float,float) r6.xyzw, r6.wwww, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r9.xyzw, r10.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r10.wwww, t1.xyzw
  mad r2.xyzw, v6.wwww, r6.xyzw, r1.xyzw
  mad r4.xyzw, v6.wwww, r9.xyzw, r7.xyzw
  mad r5.xyzw, v6.wwww, r10.xyzw, r3.xyzw
endif
dp4 r1.x, r2.xyzw, r0.xyzw
dp4 r1.y, r4.xyzw, r0.xyzw
dp4 r1.z, r5.xyzw, r0.xyzw
mov r1.w, l(1.000000)
mov r0.x, cb0[3].x
mov r0.y, cb0[4].x
mov r0.z, cb0[5].x
mov r0.w, r11.x
dp4 r0.x, r1.xyzw, r0.xyzw
mov r2.x, cb0[3].y
mov r2.y, cb0[4].y
mov r2.z, cb0[5].y
mov r2.w, r11.y
dp4 r0.y, r1.xyzw, r2.xyzw
mov r11.x, cb0[3].z
mov r11.y, cb0[4].z
mov r11.z, cb0[5].z
dp4 r0.z, r1.xyzw, r11.xyzw
mov r2.x, cb0[3].w
mov r2.y, cb0[4].w
mov r2.z, cb0[5].w
mov r2.w, cb0[6].w
dp4 r0.w, r1.xyzw, r2.xyzw
mul r1.xyzw, r0.yyyy, cb1[84].xyzw
mad r1.xyzw, r0.xxxx, cb1[83].xyzw, r1.xyzw
mad r1.xyzw, r0.zzzz, cb1[85].xyzw, r1.xyzw
mad o2.xyzw, r0.wwww, cb1[86].xyzw, r1.xyzw
mov o1.xyzw, r8.xyzw
mov o3.xyzw, r8.xyzw
mov o0.xy, v7.xyxx
mov o4.x, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
