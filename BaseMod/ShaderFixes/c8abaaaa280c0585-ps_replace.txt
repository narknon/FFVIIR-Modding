// ---- Created with 3Dmigoto v1.3.16 on Fri Dec 31 01:17:26 2021
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb0 : register(b0)
{
  float4 cb0[3];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.y = t0.Sample(s0_s, v2.xy).x;
  r0.x = 1;
  r0.xyzw = v1.xyzw * r0.xxxy;
  r1.w = cb0[1].w * r0.w;
  r0.w = cmp(asint(cb0[2].x) == 5);
  if (r0.w != 0) {
    o0.xyz = v1.xyz;
    o0.w = r1.w;
    return;
  }
  r0.w = cmp(cb0[0].y != 1.000000);
  r2.xyz = log2(r0.xyz);
  r2.xyz = cb0[0].xxx * r2.xyz;
  r3.xyz = exp2(r2.xyz);
  r4.xyz = cmp(r3.xyz < float3(0.00313080009,0.00313080009,0.00313080009));
  r3.xyz = float3(12.9200001,12.9200001,12.9200001) * r3.xyz;
  r2.xyz = float3(0.416666657,0.416666657,0.416666657) * r2.xyz;
  r2.xyz = exp2(r2.xyz);
  r2.xyz = r2.xyz * float3(1.05499995,1.05499995,1.05499995) + float3(-0.0549999997,-0.0549999997,-0.0549999997);
  r2.xyz = r4.xyz ? r3.xyz : r2.xyz;
  r1.xyz = r0.www ? r2.xyz : r0.xyz;
  switch (cb0[2].x) {
    case 0 :    o0.xyz = r1.xyz;
    o0.w = 1;
    return;
    case 2 :    r0.x = r1.w;
    r0.w = 1;
    o0.xyzw = r1.xyzw * r0.xxxw;
    return;
    case 3 :    case 1 :    o0.xyz = r1.xyz * r1.www;
    o0.w = 0;
    return;
    case 5 :    o0.xyz = r1.xyz;
    o0.w = r1.w;
    return;
    default :
    o0.xyzw = float4(0,0,0,1);
    return;
  }
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Dec 31 01:17:26 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.y, v2.xyxx, t0.yxzw, s0
mov r0.x, l(1.000000)
mul r0.xyzw, r0.xxxy, v1.xyzw
mul r1.w, r0.w, cb0[1].w
ieq r0.w, cb0[2].x, l(5)
if_nz r0.w
  mov o0.xyz, v1.xyzx
  mov o0.w, r1.w
  ret
endif
ne r0.w, cb0[0].y, l(1.000000)
log r2.xyz, r0.xyzx
mul r2.xyz, r2.xyzx, cb0[0].xxxx
exp r3.xyz, r2.xyzx
lt r4.xyz, r3.xyzx, l(0.00313080009, 0.00313080009, 0.00313080009, 0.000000)
mul r3.xyz, r3.xyzx, l(12.920000, 12.920000, 12.920000, 0.000000)
mul r2.xyz, r2.xyzx, l(0.416666657, 0.416666657, 0.416666657, 0.000000)
exp r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
movc r2.xyz, r4.xyzx, r3.xyzx, r2.xyzx
movc r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
switch cb0[2].x
  case l(0)
  mov o0.xyz, r1.xyzx
  mov o0.w, l(1.000000)
  ret
  case l(2)
  mov r0.x, r1.w
  mov r0.w, l(1.000000)
  mul o0.xyzw, r0.xxxw, r1.xyzw
  ret
  case l(3)
  case l(1)
  mul o0.xyz, r1.wwww, r1.xyzx
  mov o0.w, l(0)
  ret
  case l(5)
  mov o0.xyz, r1.xyzx
  mov o0.w, r1.w
  ret
  default
  mov o0.xyzw, l(0,0,0,1.000000)
  ret
endswitch
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
