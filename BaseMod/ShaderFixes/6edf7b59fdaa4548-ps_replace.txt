// ---- Created with 3Dmigoto v1.3.16 on Fri Dec 31 01:21:54 2021
Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

cbuffer cb0 : register(b0)
{
  float4 cb0[123];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : SV_POSITION0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = (int2)cb0[121].xy;
  r0.zw = floor(v1.xy);
  r0.zw = (int2)r0.zw;
  r0.zw = (uint2)r0.zw << int2(1,1);
  r0.zw = (int2)r0.zw + (int2)r0.xy;
  r1.xy = cb0[122].xy + cb0[121].xy;
  r1.xy = float2(-1,-1) + r1.xy;
  r1.xy = (int2)r1.xy;
  r2.xyzw = (int4)r0.zwzw + int4(0,1,1,1);
  r2.xyzw = max((int4)r2.xyzw, (int4)r0.xyxy);
  r2.xyzw = min((int4)r2.zwxy, (int4)r1.xyxy);
  r1.zw = (int2)r0.zw + int2(1,0);
  r1.zw = max((int2)r1.zw, (int2)r0.xy);
  r3.xy = min((int2)r1.zw, (int2)r1.xy);
  r0.xy = max((int2)r0.zw, (int2)r0.xy);
  r0.xy = min((int2)r0.xy, (int2)r1.xy);
  r1.xy = r2.zw;
  r1.zw = float2(0,0);
  r4.x = t0.Load(r1.xyw).w;
  r4.x = r4.x * 255 + 0.5;
  r4.x = (uint)r4.x;
  r4.y = (int)r4.x & 16;
  if (r4.y != 0) {
    r5.xyzw = t2.Load(r1.xyw).xyzw;
    r4.y = max(9.99999975e-006, r5.w);
    r4.z = dot(r5.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r4.z = max(9.99999975e-006, r4.z);
    r4.y = r4.y / r4.z;
    r4.y = min(1, r4.y);
    r4.yzw = r5.xyz * r4.yyy;
    r4.x = (int)r4.x & 15;
    r5.xy = cmp((int2)r4.xx == int2(3,9));
    r4.x = (int)r5.y | (int)r5.x;
    r5.x = r4.x ? 1 : -1;
  } else {
    r4.yzw = float3(0,0,0);
    r5.x = 0;
  }
  r2.zw = float2(0,0);
  r4.x = t0.Load(r2.xyw).w;
  r4.x = r4.x * 255 + 0.5;
  r4.x = (uint)r4.x;
  r6.x = (int)r4.x & 16;
  if (r6.x != 0) {
    r6.xyzw = t2.Load(r2.xyw).xyzw;
    r6.w = max(9.99999975e-006, r6.w);
    r7.x = dot(r6.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r7.x = max(9.99999975e-006, r7.x);
    r6.w = r6.w / r7.x;
    r6.w = min(1, r6.w);
    r6.xyz = r6.xyz * r6.www;
    r4.x = (int)r4.x & 15;
    r7.xy = cmp((int2)r4.xx == int2(3,9));
    r4.x = (int)r7.y | (int)r7.x;
    r5.y = r4.x ? 1 : -1;
  } else {
    r6.xyz = float3(0,0,0);
    r5.y = 0;
  }
  r3.zw = float2(0,0);
  r4.x = t0.Load(r3.xyw).w;
  r4.x = r4.x * 255 + 0.5;
  r4.x = (uint)r4.x;
  r6.w = (int)r4.x & 16;
  if (r6.w != 0) {
    r7.xyzw = t2.Load(r3.xyw).xyzw;
    r6.w = max(9.99999975e-006, r7.w);
    r7.w = dot(r7.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r7.w = max(9.99999975e-006, r7.w);
    r6.w = r6.w / r7.w;
    r6.w = min(1, r6.w);
    r7.xyz = r7.xyz * r6.www;
    r4.x = (int)r4.x & 15;
    r8.xy = cmp((int2)r4.xx == int2(3,9));
    r4.x = (int)r8.y | (int)r8.x;
    r5.z = r4.x ? 1 : -1;
  } else {
    r7.xyz = float3(0,0,0);
    r5.z = 0;
  }
  r0.zw = float2(0,0);
  r4.x = t0.Load(r0.xyw).w;
  r4.x = r4.x * 255 + 0.5;
  r4.x = (uint)r4.x;
  r6.w = (int)r4.x & 16;
  if (r6.w != 0) {
    r8.xyzw = t2.Load(r0.xyw).xyzw;
    r6.w = max(9.99999975e-006, r8.w);
    r7.w = dot(r8.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r7.w = max(9.99999975e-006, r7.w);
    r6.w = r6.w / r7.w;
    r6.w = min(1, r6.w);
    r8.xyz = r8.xyz * r6.www;
    r4.x = (int)r4.x & 15;
    r9.xy = cmp((int2)r4.xx == int2(3,9));
    r4.x = (int)r9.y | (int)r9.x;
    r5.w = r4.x ? 1 : -1;
  } else {
    r8.xyz = float3(0,0,0);
    r5.w = 0;
  }
  r1.x = t1.Load(r1.xyz).x;
  r1.y = r1.x * cb0[57].x + cb0[57].y;
  r1.x = r1.x * cb0[57].z + -cb0[57].w;
  r1.x = rcp(r1.x);
  r1.x = r1.y + r1.x;
  r2.x = t1.Load(r2.xyz).x;
  r2.y = r2.x * cb0[57].x + cb0[57].y;
  r2.x = r2.x * cb0[57].z + -cb0[57].w;
  r2.x = rcp(r2.x);
  r1.y = r2.y + r2.x;
  r2.x = t1.Load(r3.xyz).x;
  r2.y = r2.x * cb0[57].x + cb0[57].y;
  r2.x = r2.x * cb0[57].z + -cb0[57].w;
  r2.x = rcp(r2.x);
  r1.z = r2.y + r2.x;
  r0.x = t1.Load(r0.xyz).x;
  r0.y = r0.x * cb0[57].x + cb0[57].y;
  r0.x = r0.x * cb0[57].z + -cb0[57].w;
  r0.x = rcp(r0.x);
  r1.w = r0.y + r0.x;
  r0.x = dot(float4(1,1,1,1), r5.xyzw);
  r0.x = cmp(r0.x >= 0);
  r0.x = r0.x ? 1 : -1;
  r2.xyzw = cmp(r0.xxxx == r5.xyzw);
  r2.xyzw = r2.xyzw ? float4(1,1,1,1) : 0;
  r0.yzw = r6.xyz * r2.yyy;
  r0.yzw = r4.yzw * r2.xxx + r0.yzw;
  r0.yzw = r7.xyz * r2.zzz + r0.yzw;
  r3.xyz = r8.xyz * r2.www + r0.yzw;
  r0.y = dot(r1.xyzw, r2.xyzw);
  r3.w = r0.y * r0.x;
  r0.x = dot(float4(1,1,1,1), r2.xyzw);
  r0.x = max(9.99999975e-006, r0.x);
  o0.xyzw = r3.xyzw / r0.xxxx;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Dec 31 01:21:54 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float
// SV_POSITION              0   xyzw        1      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[123], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 10
ftoi r0.xy, cb0[121].xyxx
round_ni r0.zw, v1.xxxy
ftoi r0.zw, r0.zzzw
ishl r0.zw, r0.zzzw, l(0, 0, 1, 1)
iadd r0.zw, r0.zzzw, r0.xxxy
add r1.xy, cb0[121].xyxx, cb0[122].xyxx
add r1.xy, r1.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
ftoi r1.xy, r1.xyxx
iadd r2.xyzw, r0.zwzw, l(0, 1, 1, 1)
imax r2.xyzw, r0.xyxy, r2.xyzw
imin r2.xyzw, r1.xyxy, r2.zwxy
iadd r1.zw, r0.zzzw, l(0, 0, 1, 0)
imax r1.zw, r0.xxxy, r1.zzzw
imin r3.xy, r1.xyxx, r1.zwzz
imax r0.xy, r0.xyxx, r0.zwzz
imin r0.xy, r1.xyxx, r0.xyxx
mov r1.xy, r2.zwzz
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.x, r1.xyww, t0.wxyz
mad r4.x, r4.x, l(255.000000), l(0.500000)
ftou r4.x, r4.x
and r4.y, r4.x, l(16)
if_nz r4.y
  ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r1.xyww, t2.xyzw
  max r4.y, r5.w, l(0.000010)
  dp3 r4.z, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  max r4.z, r4.z, l(0.000010)
  div r4.y, r4.y, r4.z
  min r4.y, r4.y, l(1.000000)
  mul r4.yzw, r4.yyyy, r5.xxyz
  and r4.x, r4.x, l(15)
  ieq r5.xy, r4.xxxx, l(3, 9, 0, 0)
  or r4.x, r5.y, r5.x
  movc r5.x, r4.x, l(1.000000), l(-1.000000)
else
  mov r4.yzw, l(0,0,0,0)
  mov r5.x, l(0)
endif
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.x, r2.xyww, t0.wxyz
mad r4.x, r4.x, l(255.000000), l(0.500000)
ftou r4.x, r4.x
and r6.x, r4.x, l(16)
if_nz r6.x
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r2.xyww, t2.xyzw
  max r6.w, r6.w, l(0.000010)
  dp3 r7.x, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  max r7.x, r7.x, l(0.000010)
  div r6.w, r6.w, r7.x
  min r6.w, r6.w, l(1.000000)
  mul r6.xyz, r6.wwww, r6.xyzx
  and r4.x, r4.x, l(15)
  ieq r7.xy, r4.xxxx, l(3, 9, 0, 0)
  or r4.x, r7.y, r7.x
  movc r5.y, r4.x, l(1.000000), l(-1.000000)
else
  mov r6.xyz, l(0,0,0,0)
  mov r5.y, l(0)
endif
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.x, r3.xyww, t0.wxyz
mad r4.x, r4.x, l(255.000000), l(0.500000)
ftou r4.x, r4.x
and r6.w, r4.x, l(16)
if_nz r6.w
  ld_indexable(texture2d)(float,float,float,float) r7.xyzw, r3.xyww, t2.xyzw
  max r6.w, r7.w, l(0.000010)
  dp3 r7.w, r7.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  max r7.w, r7.w, l(0.000010)
  div r6.w, r6.w, r7.w
  min r6.w, r6.w, l(1.000000)
  mul r7.xyz, r6.wwww, r7.xyzx
  and r4.x, r4.x, l(15)
  ieq r8.xy, r4.xxxx, l(3, 9, 0, 0)
  or r4.x, r8.y, r8.x
  movc r5.z, r4.x, l(1.000000), l(-1.000000)
else
  mov r7.xyz, l(0,0,0,0)
  mov r5.z, l(0)
endif
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.x, r0.xyww, t0.wxyz
mad r4.x, r4.x, l(255.000000), l(0.500000)
ftou r4.x, r4.x
and r6.w, r4.x, l(16)
if_nz r6.w
  ld_indexable(texture2d)(float,float,float,float) r8.xyzw, r0.xyww, t2.xyzw
  max r6.w, r8.w, l(0.000010)
  dp3 r7.w, r8.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  max r7.w, r7.w, l(0.000010)
  div r6.w, r6.w, r7.w
  min r6.w, r6.w, l(1.000000)
  mul r8.xyz, r6.wwww, r8.xyzx
  and r4.x, r4.x, l(15)
  ieq r9.xy, r4.xxxx, l(3, 9, 0, 0)
  or r4.x, r9.y, r9.x
  movc r5.w, r4.x, l(1.000000), l(-1.000000)
else
  mov r8.xyz, l(0,0,0,0)
  mov r5.w, l(0)
endif
ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t1.xyzw
mad r1.y, r1.x, cb0[57].x, cb0[57].y
mad r1.x, r1.x, cb0[57].z, -cb0[57].w
rcp r1.x, r1.x
add r1.x, r1.x, r1.y
ld_indexable(texture2d)(float,float,float,float) r2.x, r2.xyzw, t1.xyzw
mad r2.y, r2.x, cb0[57].x, cb0[57].y
mad r2.x, r2.x, cb0[57].z, -cb0[57].w
rcp r2.x, r2.x
add r1.y, r2.x, r2.y
ld_indexable(texture2d)(float,float,float,float) r2.x, r3.xyzw, t1.xyzw
mad r2.y, r2.x, cb0[57].x, cb0[57].y
mad r2.x, r2.x, cb0[57].z, -cb0[57].w
rcp r2.x, r2.x
add r1.z, r2.x, r2.y
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t1.xyzw
mad r0.y, r0.x, cb0[57].x, cb0[57].y
mad r0.x, r0.x, cb0[57].z, -cb0[57].w
rcp r0.x, r0.x
add r1.w, r0.x, r0.y
dp4 r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r5.xyzw
ge r0.x, r0.x, l(0.000000)
movc r0.x, r0.x, l(1.000000), l(-1.000000)
eq r2.xyzw, r0.xxxx, r5.xyzw
and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r0.yzw, r2.yyyy, r6.xxyz
mad r0.yzw, r4.yyzw, r2.xxxx, r0.yyzw
mad r0.yzw, r7.xxyz, r2.zzzz, r0.yyzw
mad r3.xyz, r8.xyzx, r2.wwww, r0.yzwy
dp4 r0.y, r1.xyzw, r2.xyzw
mul r3.w, r0.x, r0.y
dp4 r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
max r0.x, r0.x, l(0.000010)
div o0.xyzw, r3.xyzw, r0.xxxx
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
