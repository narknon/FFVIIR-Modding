// ---- Created with 3Dmigoto v1.3.16 on Sat Dec 18 14:18:52 2021
Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[140];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[19];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : SV_POSITION0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = floor(v1.xy);
  r1.xy = (int2)r0.xy;
  r1.zw = float2(0,0);
  r2.xyzw = t2.Load(r1.xyz).xyzw;
  r0.z = cmp(0 < abs(r2.w));
  if (r0.z != 0) {
    r0.z = cmp(0 < r2.w);
    r0.w = cmp(r2.w < 0);
    r0.z = (int)-r0.z + (int)r0.w;
    r0.z = (int)r0.z;
    r0.w = cb1[122].x * cb0[0].z;
    r1.zw = float2(512,0) * r0.ww;
    r0.xy = float2(0.5,0.5) + r0.xy;
    r3.xy = float2(-1,-1) + cb1[122].xy;
    r3.zw = cb0[0].zw * r3.xy;
    r3.xy = cb0[0].zw;
    r3.xyzw = float4(0.5,0.5,0.5,0.5) * r3.xyzw;
    r4.xy = (int2)cb1[121].xy;
    r1.xy = (uint2)r1.xy << int2(1,1);
    r1.xy = (int2)r1.xy + (int2)r4.xy;
    r4.zw = cb1[122].xy + cb1[121].xy;
    r4.zw = float2(-1,-1) + r4.zw;
    r4.zw = (int2)r4.zw;
    r5.x = asint(cb1[139].z) & 1;
    if (1 == 0) r5.y = 0; else if (1+1 < 32) {     r5.y = (uint)cb1[139].z << (32-(1 + 1)); r5.y = (uint)r5.y >> (32-1);    } else r5.y = (uint)cb1[139].z >> 1;
    r1.xy = (int2)r1.xy + (int2)r5.xy;
    r1.xy = max((int2)r1.xy, (int2)r4.xy);
    r4.xy = min((int2)r1.xy, (int2)r4.zw);
    r4.zw = float2(0,0);
    r0.w = t0.Load(r4.xyw).w;
    r1.x = t1.Load(r4.xyz).w;
    r0.w = r0.w * 255 + 0.5;
    r0.w = (uint)r0.w;
    r0.w = (int)r0.w & 15;
    r0.w = cmp((int)r0.w == 3);
    r4.y = r0.w ? 0 : 1;
    r4.xzw = float3(1,0,0);
    r5.xyz = t3.Load(r4.xyz).xyz;
    r0.w = cb0[18].x / abs(r2.w);
    r1.yz = r0.ww * r1.zw;
    r1.xy = r1.yz * r1.xx;
    r4.xzw = float3(2,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r7.x = -1 * r1.z;
    r7.yw = float2(-0,-0);
    r7.xy = r0.xy * cb0[0].zw + r7.xy;
    r7.xy = max(r7.xy, r3.xy);
    r7.xy = min(r7.xy, r3.zw);
    r8.xyzw = t2.SampleLevel(s0_s, r7.xy, 0).xyzw;
    r0.w = cmp(0 < r8.w);
    r5.w = cmp(r8.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r8.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r9.w = rcp(r5.w);
    r9.xyz = r9.www * r8.xyz;
    r8.xyzw = r0.wwww ? r9.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r1.z = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r9.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r10.w = rcp(r1.z);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r10.xyzw + r8.xyzw;
    r8.xyzw = r0.wwww ? r9.xyzw : r8.xyzw;
    r8.xyz = r8.xyz * r6.xyz;
    r8.xyz = r5.xyz * r2.xyz + r8.xyz;
    r5.xyz = r6.xyz * r8.www + r5.xyz;
    r4.xzw = float3(3,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r7.z = -1 * r1.z;
    r7.xy = r0.xy * cb0[0].zw + r7.zw;
    r7.xy = max(r7.xy, r3.xy);
    r7.xy = min(r7.xy, r3.zw);
    r7.xyzw = t2.SampleLevel(s0_s, r7.xy, 0).xyzw;
    r0.w = cmp(0 < r7.w);
    r5.w = cmp(r7.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r7.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r9.w = rcp(r5.w);
    r9.xyz = r9.www * r7.xyz;
    r7.xyzw = r0.wwww ? r9.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r1.z = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r9.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r10.w = rcp(r1.z);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r10.xyzw + r7.xyzw;
    r7.xyzw = r0.wwww ? r9.xyzw : r7.xyzw;
    r7.xyz = r6.xyz * r7.xyz + r8.xyz;
    r5.xyz = r6.xyz * r7.www + r5.xyz;
    r4.xzw = float3(4,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r8.x = -1 * r1.z;
    r8.yw = float2(-0,-0);
    r8.xy = r0.xy * cb0[0].zw + r8.xy;
    r8.xy = max(r8.xy, r3.xy);
    r8.xy = min(r8.xy, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r8.xy, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r5.w = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r9.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r10.w = rcp(r5.w);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r0.wwww ? r10.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r10.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r10.w);
    r1.z = cmp(r10.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r10.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r11.w = rcp(r1.z);
    r11.xyz = r11.www * r10.xyz;
    r10.xyzw = r11.xyzw + r9.xyzw;
    r9.xyzw = r0.wwww ? r10.xyzw : r9.xyzw;
    r7.xyz = r6.xyz * r9.xyz + r7.xyz;
    r5.xyz = r6.xyz * r9.www + r5.xyz;
    r4.xzw = float3(5,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r8.z = -1 * r1.z;
    r8.xy = r0.xy * cb0[0].zw + r8.zw;
    r8.xy = max(r8.xy, r3.xy);
    r8.xy = min(r8.xy, r3.zw);
    r8.xyzw = t2.SampleLevel(s0_s, r8.xy, 0).xyzw;
    r0.w = cmp(0 < r8.w);
    r5.w = cmp(r8.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r8.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r9.w = rcp(r5.w);
    r9.xyz = r9.www * r8.xyz;
    r8.xyzw = r0.wwww ? r9.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r1.z = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r9.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r10.w = rcp(r1.z);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r10.xyzw + r8.xyzw;
    r8.xyzw = r0.wwww ? r9.xyzw : r8.xyzw;
    r7.xyz = r6.xyz * r8.xyz + r7.xyz;
    r5.xyz = r6.xyz * r8.www + r5.xyz;
    r4.xzw = float3(6,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r8.x = -1 * r1.z;
    r8.yw = float2(-0,-0);
    r8.xy = r0.xy * cb0[0].zw + r8.xy;
    r8.xy = max(r8.xy, r3.xy);
    r8.xy = min(r8.xy, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r8.xy, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r5.w = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r9.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r10.w = rcp(r5.w);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r0.wwww ? r10.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r10.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r10.w);
    r1.z = cmp(r10.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r10.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r11.w = rcp(r1.z);
    r11.xyz = r11.www * r10.xyz;
    r10.xyzw = r11.xyzw + r9.xyzw;
    r9.xyzw = r0.wwww ? r10.xyzw : r9.xyzw;
    r7.xyz = r6.xyz * r9.xyz + r7.xyz;
    r5.xyz = r6.xyz * r9.www + r5.xyz;
    r4.xzw = float3(7,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r8.z = -1 * r1.z;
    r8.xy = r0.xy * cb0[0].zw + r8.zw;
    r8.xy = max(r8.xy, r3.xy);
    r8.xy = min(r8.xy, r3.zw);
    r8.xyzw = t2.SampleLevel(s0_s, r8.xy, 0).xyzw;
    r0.w = cmp(0 < r8.w);
    r5.w = cmp(r8.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r8.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r9.w = rcp(r5.w);
    r9.xyz = r9.www * r8.xyz;
    r8.xyzw = r0.wwww ? r9.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r1.z = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r9.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r10.w = rcp(r1.z);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r10.xyzw + r8.xyzw;
    r8.xyzw = r0.wwww ? r9.xyzw : r8.xyzw;
    r7.xyz = r6.xyz * r8.xyz + r7.xyz;
    r5.xyz = r6.xyz * r8.www + r5.xyz;
    r4.xzw = float3(8,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r8.x = -1 * r1.z;
    r8.yw = float2(-0,-0);
    r8.xy = r0.xy * cb0[0].zw + r8.xy;
    r8.xy = max(r8.xy, r3.xy);
    r8.xy = min(r8.xy, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r8.xy, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r5.w = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r9.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r10.w = rcp(r5.w);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r0.wwww ? r10.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r10.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r10.w);
    r1.z = cmp(r10.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r10.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r11.w = rcp(r1.z);
    r11.xyz = r11.www * r10.xyz;
    r10.xyzw = r11.xyzw + r9.xyzw;
    r9.xyzw = r0.wwww ? r10.xyzw : r9.xyzw;
    r7.xyz = r6.xyz * r9.xyz + r7.xyz;
    r5.xyz = r6.xyz * r9.www + r5.xyz;
    r4.xzw = float3(9,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r8.z = -1 * r1.z;
    r8.xy = r0.xy * cb0[0].zw + r8.zw;
    r8.xy = max(r8.xy, r3.xy);
    r8.xy = min(r8.xy, r3.zw);
    r8.xyzw = t2.SampleLevel(s0_s, r8.xy, 0).xyzw;
    r0.w = cmp(0 < r8.w);
    r5.w = cmp(r8.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r8.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r9.w = rcp(r5.w);
    r9.xyz = r9.www * r8.xyz;
    r8.xyzw = r0.wwww ? r9.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r1.z = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r9.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r10.w = rcp(r1.z);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r10.xyzw + r8.xyzw;
    r8.xyzw = r0.wwww ? r9.xyzw : r8.xyzw;
    r7.xyz = r6.xyz * r8.xyz + r7.xyz;
    r5.xyz = r6.xyz * r8.www + r5.xyz;
    r4.xzw = float3(10,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r8.x = -1 * r1.z;
    r8.yw = float2(-0,-0);
    r8.xy = r0.xy * cb0[0].zw + r8.xy;
    r8.xy = max(r8.xy, r3.xy);
    r8.xy = min(r8.xy, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r8.xy, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r5.w = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r9.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r10.w = rcp(r5.w);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r0.wwww ? r10.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r10.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r10.w);
    r1.z = cmp(r10.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r10.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r11.w = rcp(r1.z);
    r11.xyz = r11.www * r10.xyz;
    r10.xyzw = r11.xyzw + r9.xyzw;
    r9.xyzw = r0.wwww ? r10.xyzw : r9.xyzw;
    r7.xyz = r6.xyz * r9.xyz + r7.xyz;
    r5.xyz = r6.xyz * r9.www + r5.xyz;
    r4.xzw = float3(11,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r8.z = -1 * r1.z;
    r8.xy = r0.xy * cb0[0].zw + r8.zw;
    r8.xy = max(r8.xy, r3.xy);
    r8.xy = min(r8.xy, r3.zw);
    r8.xyzw = t2.SampleLevel(s0_s, r8.xy, 0).xyzw;
    r0.w = cmp(0 < r8.w);
    r5.w = cmp(r8.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r8.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r9.w = rcp(r5.w);
    r9.xyz = r9.www * r8.xyz;
    r8.xyzw = r0.wwww ? r9.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r1.z = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r9.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r10.w = rcp(r1.z);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r10.xyzw + r8.xyzw;
    r8.xyzw = r0.wwww ? r9.xyzw : r8.xyzw;
    r7.xyz = r6.xyz * r8.xyz + r7.xyz;
    r5.xyz = r6.xyz * r8.www + r5.xyz;
    r4.xzw = float3(12,0,0);
    r6.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r6.w;
    r1.zw = r0.ww * r1.xy;
    r8.x = -1 * r1.z;
    r8.yw = float2(-0,-0);
    r8.xy = r0.xy * cb0[0].zw + r8.xy;
    r8.xy = max(r8.xy, r3.xy);
    r8.xy = min(r8.xy, r3.zw);
    r9.xyzw = t2.SampleLevel(s0_s, r8.xy, 0).xyzw;
    r0.w = cmp(0 < r9.w);
    r5.w = cmp(r9.w < 0);
    r0.w = (int)-r0.w + (int)r5.w;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r5.w = -abs(r9.w) + abs(r2.w);
    r5.w = abs(r5.w) + abs(r5.w);
    r5.w = max(1, r5.w);
    r10.w = rcp(r5.w);
    r10.xyz = r10.www * r9.xyz;
    r9.xyzw = r0.wwww ? r10.xyzw : 0;
    r1.zw = r0.xy * cb0[0].zw + r1.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r10.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r10.w);
    r1.z = cmp(r10.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r10.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r11.w = rcp(r1.z);
    r11.xyz = r11.www * r10.xyz;
    r10.xyzw = r11.xyzw + r9.xyzw;
    r9.xyzw = r0.wwww ? r10.xyzw : r9.xyzw;
    r7.xyz = r6.xyz * r9.xyz + r7.xyz;
    r5.xyz = r6.xyz * r9.www + r5.xyz;
    r4.xzw = float3(13,0,0);
    r4.xyzw = t3.Load(r4.xyz).xyzw;
    r0.w = 3 * r4.w;
    r1.xy = r0.ww * r1.xy;
    r8.z = -1 * r1.x;
    r1.zw = r0.xy * cb0[0].zw + r8.zw;
    r1.zw = max(r1.zw, r3.xy);
    r1.zw = min(r1.zw, r3.zw);
    r6.xyzw = t2.SampleLevel(s0_s, r1.zw, 0).xyzw;
    r0.w = cmp(0 < r6.w);
    r1.z = cmp(r6.w < 0);
    r0.w = (int)-r0.w + (int)r1.z;
    r0.w = (int)r0.w;
    r0.w = r0.z * r0.w;
    r0.w = cmp(0 < r0.w);
    r1.z = -abs(r6.w) + abs(r2.w);
    r1.z = abs(r1.z) + abs(r1.z);
    r1.z = max(1, r1.z);
    r8.w = rcp(r1.z);
    r8.xyz = r8.www * r6.xyz;
    r6.xyzw = r0.wwww ? r8.xyzw : 0;
    r0.xy = r0.xy * cb0[0].zw + r1.xy;
    r0.xy = max(r0.xy, r3.xy);
    r0.xy = min(r0.xy, r3.zw);
    r1.xyzw = t2.SampleLevel(s0_s, r0.xy, 0).xyzw;
    r0.x = cmp(0 < r1.w);
    r0.y = cmp(r1.w < 0);
    r0.x = (int)-r0.x + (int)r0.y;
    r0.x = (int)r0.x;
    r0.x = r0.z * r0.x;
    r0.x = cmp(0 < r0.x);
    r0.y = abs(r2.w) + -abs(r1.w);
    r0.y = abs(r0.y) + abs(r0.y);
    r0.y = max(1, r0.y);
    r3.w = rcp(r0.y);
    r3.xyz = r3.www * r1.xyz;
    r1.xyzw = r6.xyzw + r3.xyzw;
    r0.xyzw = r0.xxxx ? r1.xyzw : r6.xyzw;
    r0.xyz = r4.xyz * r0.xyz + r7.xyz;
    r1.xyz = r4.xyz * r0.www + r5.xyz;
    r1.xyz = max(float3(9.99999975e-006,9.99999975e-006,9.99999975e-006), r1.xyz);
    r2.xyz = r0.xyz / r1.xyz;
  } else {
    r2.xyz = float3(0,0,0);
  }
  o0.xyzw = r2.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Dec 18 14:18:52 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float
// SV_POSITION              0   xyzw        1      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[140], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps_siv linear noperspective v1.xy, position
dcl_output o0.xyzw
dcl_temps 12
round_ni r0.xy, v1.xyxx
ftoi r1.xy, r0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyzw, t2.xyzw
lt r0.z, l(0.000000), |r2.w|
if_nz r0.z
  lt r0.z, l(0.000000), r2.w
  lt r0.w, r2.w, l(0.000000)
  iadd r0.z, -r0.z, r0.w
  itof r0.z, r0.z
  mul r0.w, cb0[0].z, cb1[122].x
  mul r1.zw, r0.wwww, l(0.000000, 0.000000, 512.000000, 0.000000)
  add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  add r3.xy, cb1[122].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r3.zw, r3.xxxy, cb0[0].zzzw
  mov r3.xy, cb0[0].zwzz
  mul r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  ftoi r4.xy, cb1[121].xyxx
  ishl r1.xy, r1.xyxx, l(1, 1, 0, 0)
  iadd r1.xy, r1.xyxx, r4.xyxx
  add r4.zw, cb1[121].xxxy, cb1[122].xxxy
  add r4.zw, r4.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
  ftoi r4.zw, r4.zzzw
  and r5.x, cb1[139].z, l(1)
  ubfe r5.y, l(1), l(1), cb1[139].z
  iadd r1.xy, r1.xyxx, r5.xyxx
  imax r1.xy, r4.xyxx, r1.xyxx
  imin r4.xy, r4.zwzz, r1.xyxx
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r4.xyww, t0.xyzw
  ld_indexable(texture2d)(float,float,float,float) r1.x, r4.xyzw, t1.wxyz
  mad r0.w, r0.w, l(255.000000), l(0.500000)
  ftou r0.w, r0.w
  and r0.w, r0.w, l(15)
  ieq r0.w, r0.w, l(3)
  movc r4.y, r0.w, l(0), l(1)
  mov r4.xzw, l(1,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.xyz, r4.xyzw, t3.xyzw
  div r0.w, cb0[18].x, |r2.w|
  mul r1.yz, r1.zzwz, r0.wwww
  mul r1.xy, r1.xxxx, r1.yzyy
  mov r4.xzw, l(2,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r7.x, r1.z, l(-1.000000)
  mov r7.yw, l(0,-0.000000,0,-0.000000)
  mad r7.xy, r0.xyxx, cb0[0].zwzz, r7.xyxx
  max r7.xy, r3.xyxx, r7.xyxx
  min r7.xy, r3.zwzz, r7.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r7.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r8.w
  lt r5.w, r8.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r8.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r9.w, r5.w
  mul r9.xyz, r8.xyzx, r9.wwww
  and r8.xyzw, r0.wwww, r9.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r1.z, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r9.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r10.w, r1.z
  mul r10.xyz, r9.xyzx, r10.wwww
  add r9.xyzw, r8.xyzw, r10.xyzw
  movc r8.xyzw, r0.wwww, r9.xyzw, r8.xyzw
  mul r8.xyz, r6.xyzx, r8.xyzx
  mad r8.xyz, r5.xyzx, r2.xyzx, r8.xyzx
  mad r5.xyz, r6.xyzx, r8.wwww, r5.xyzx
  mov r4.xzw, l(3,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r7.z, r1.z, l(-1.000000)
  mad r7.xy, r0.xyxx, cb0[0].zwzz, r7.zwzz
  max r7.xy, r3.xyxx, r7.xyxx
  min r7.xy, r3.zwzz, r7.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r7.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r7.w
  lt r5.w, r7.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r7.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r9.w, r5.w
  mul r9.xyz, r7.xyzx, r9.wwww
  and r7.xyzw, r0.wwww, r9.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r1.z, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r9.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r10.w, r1.z
  mul r10.xyz, r9.xyzx, r10.wwww
  add r9.xyzw, r7.xyzw, r10.xyzw
  movc r7.xyzw, r0.wwww, r9.xyzw, r7.xyzw
  mad r7.xyz, r6.xyzx, r7.xyzx, r8.xyzx
  mad r5.xyz, r6.xyzx, r7.wwww, r5.xyzx
  mov r4.xzw, l(4,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r8.x, r1.z, l(-1.000000)
  mov r8.yw, l(0,-0.000000,0,-0.000000)
  mad r8.xy, r0.xyxx, cb0[0].zwzz, r8.xyxx
  max r8.xy, r3.xyxx, r8.xyxx
  min r8.xy, r3.zwzz, r8.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r5.w, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r9.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r10.w, r5.w
  mul r10.xyz, r9.xyzx, r10.wwww
  and r9.xyzw, r0.wwww, r10.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r10.w
  lt r1.z, r10.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r10.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r11.w, r1.z
  mul r11.xyz, r10.xyzx, r11.wwww
  add r10.xyzw, r9.xyzw, r11.xyzw
  movc r9.xyzw, r0.wwww, r10.xyzw, r9.xyzw
  mad r7.xyz, r6.xyzx, r9.xyzx, r7.xyzx
  mad r5.xyz, r6.xyzx, r9.wwww, r5.xyzx
  mov r4.xzw, l(5,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r8.z, r1.z, l(-1.000000)
  mad r8.xy, r0.xyxx, cb0[0].zwzz, r8.zwzz
  max r8.xy, r3.xyxx, r8.xyxx
  min r8.xy, r3.zwzz, r8.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r8.w
  lt r5.w, r8.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r8.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r9.w, r5.w
  mul r9.xyz, r8.xyzx, r9.wwww
  and r8.xyzw, r0.wwww, r9.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r1.z, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r9.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r10.w, r1.z
  mul r10.xyz, r9.xyzx, r10.wwww
  add r9.xyzw, r8.xyzw, r10.xyzw
  movc r8.xyzw, r0.wwww, r9.xyzw, r8.xyzw
  mad r7.xyz, r6.xyzx, r8.xyzx, r7.xyzx
  mad r5.xyz, r6.xyzx, r8.wwww, r5.xyzx
  mov r4.xzw, l(6,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r8.x, r1.z, l(-1.000000)
  mov r8.yw, l(0,-0.000000,0,-0.000000)
  mad r8.xy, r0.xyxx, cb0[0].zwzz, r8.xyxx
  max r8.xy, r3.xyxx, r8.xyxx
  min r8.xy, r3.zwzz, r8.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r5.w, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r9.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r10.w, r5.w
  mul r10.xyz, r9.xyzx, r10.wwww
  and r9.xyzw, r0.wwww, r10.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r10.w
  lt r1.z, r10.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r10.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r11.w, r1.z
  mul r11.xyz, r10.xyzx, r11.wwww
  add r10.xyzw, r9.xyzw, r11.xyzw
  movc r9.xyzw, r0.wwww, r10.xyzw, r9.xyzw
  mad r7.xyz, r6.xyzx, r9.xyzx, r7.xyzx
  mad r5.xyz, r6.xyzx, r9.wwww, r5.xyzx
  mov r4.xzw, l(7,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r8.z, r1.z, l(-1.000000)
  mad r8.xy, r0.xyxx, cb0[0].zwzz, r8.zwzz
  max r8.xy, r3.xyxx, r8.xyxx
  min r8.xy, r3.zwzz, r8.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r8.w
  lt r5.w, r8.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r8.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r9.w, r5.w
  mul r9.xyz, r8.xyzx, r9.wwww
  and r8.xyzw, r0.wwww, r9.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r1.z, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r9.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r10.w, r1.z
  mul r10.xyz, r9.xyzx, r10.wwww
  add r9.xyzw, r8.xyzw, r10.xyzw
  movc r8.xyzw, r0.wwww, r9.xyzw, r8.xyzw
  mad r7.xyz, r6.xyzx, r8.xyzx, r7.xyzx
  mad r5.xyz, r6.xyzx, r8.wwww, r5.xyzx
  mov r4.xzw, l(8,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r8.x, r1.z, l(-1.000000)
  mov r8.yw, l(0,-0.000000,0,-0.000000)
  mad r8.xy, r0.xyxx, cb0[0].zwzz, r8.xyxx
  max r8.xy, r3.xyxx, r8.xyxx
  min r8.xy, r3.zwzz, r8.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r5.w, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r9.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r10.w, r5.w
  mul r10.xyz, r9.xyzx, r10.wwww
  and r9.xyzw, r0.wwww, r10.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r10.w
  lt r1.z, r10.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r10.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r11.w, r1.z
  mul r11.xyz, r10.xyzx, r11.wwww
  add r10.xyzw, r9.xyzw, r11.xyzw
  movc r9.xyzw, r0.wwww, r10.xyzw, r9.xyzw
  mad r7.xyz, r6.xyzx, r9.xyzx, r7.xyzx
  mad r5.xyz, r6.xyzx, r9.wwww, r5.xyzx
  mov r4.xzw, l(9,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r8.z, r1.z, l(-1.000000)
  mad r8.xy, r0.xyxx, cb0[0].zwzz, r8.zwzz
  max r8.xy, r3.xyxx, r8.xyxx
  min r8.xy, r3.zwzz, r8.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r8.w
  lt r5.w, r8.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r8.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r9.w, r5.w
  mul r9.xyz, r8.xyzx, r9.wwww
  and r8.xyzw, r0.wwww, r9.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r1.z, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r9.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r10.w, r1.z
  mul r10.xyz, r9.xyzx, r10.wwww
  add r9.xyzw, r8.xyzw, r10.xyzw
  movc r8.xyzw, r0.wwww, r9.xyzw, r8.xyzw
  mad r7.xyz, r6.xyzx, r8.xyzx, r7.xyzx
  mad r5.xyz, r6.xyzx, r8.wwww, r5.xyzx
  mov r4.xzw, l(10,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r8.x, r1.z, l(-1.000000)
  mov r8.yw, l(0,-0.000000,0,-0.000000)
  mad r8.xy, r0.xyxx, cb0[0].zwzz, r8.xyxx
  max r8.xy, r3.xyxx, r8.xyxx
  min r8.xy, r3.zwzz, r8.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r5.w, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r9.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r10.w, r5.w
  mul r10.xyz, r9.xyzx, r10.wwww
  and r9.xyzw, r0.wwww, r10.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r10.w
  lt r1.z, r10.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r10.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r11.w, r1.z
  mul r11.xyz, r10.xyzx, r11.wwww
  add r10.xyzw, r9.xyzw, r11.xyzw
  movc r9.xyzw, r0.wwww, r10.xyzw, r9.xyzw
  mad r7.xyz, r6.xyzx, r9.xyzx, r7.xyzx
  mad r5.xyz, r6.xyzx, r9.wwww, r5.xyzx
  mov r4.xzw, l(11,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r8.z, r1.z, l(-1.000000)
  mad r8.xy, r0.xyxx, cb0[0].zwzz, r8.zwzz
  max r8.xy, r3.xyxx, r8.xyxx
  min r8.xy, r3.zwzz, r8.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r8.w
  lt r5.w, r8.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r8.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r9.w, r5.w
  mul r9.xyz, r8.xyzx, r9.wwww
  and r8.xyzw, r0.wwww, r9.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r1.z, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r9.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r10.w, r1.z
  mul r10.xyz, r9.xyzx, r10.wwww
  add r9.xyzw, r8.xyzw, r10.xyzw
  movc r8.xyzw, r0.wwww, r9.xyzw, r8.xyzw
  mad r7.xyz, r6.xyzx, r8.xyzx, r7.xyzx
  mad r5.xyz, r6.xyzx, r8.wwww, r5.xyzx
  mov r4.xzw, l(12,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r6.w, l(3.000000)
  mul r1.zw, r1.xxxy, r0.wwww
  mul r8.x, r1.z, l(-1.000000)
  mov r8.yw, l(0,-0.000000,0,-0.000000)
  mad r8.xy, r0.xyxx, cb0[0].zwzz, r8.xyxx
  max r8.xy, r3.xyxx, r8.xyxx
  min r8.xy, r3.zwzz, r8.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r9.w
  lt r5.w, r9.w, l(0.000000)
  iadd r0.w, -r0.w, r5.w
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r5.w, |r2.w|, -|r9.w|
  add r5.w, |r5.w|, |r5.w|
  max r5.w, r5.w, l(1.000000)
  rcp r10.w, r5.w
  mul r10.xyz, r9.xyzx, r10.wwww
  and r9.xyzw, r0.wwww, r10.xyzw
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r1.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r10.w
  lt r1.z, r10.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r10.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r11.w, r1.z
  mul r11.xyz, r10.xyzx, r11.wwww
  add r10.xyzw, r9.xyzw, r11.xyzw
  movc r9.xyzw, r0.wwww, r10.xyzw, r9.xyzw
  mad r7.xyz, r6.xyzx, r9.xyzx, r7.xyzx
  mad r5.xyz, r6.xyzx, r9.wwww, r5.xyzx
  mov r4.xzw, l(13,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyzw, t3.xyzw
  mul r0.w, r4.w, l(3.000000)
  mul r1.xy, r1.xyxx, r0.wwww
  mul r8.z, r1.x, l(-1.000000)
  mad r1.zw, r0.xxxy, cb0[0].zzzw, r8.zzzw
  max r1.zw, r3.xxxy, r1.zzzw
  min r1.zw, r3.zzzw, r1.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r1.zwzz, t2.xyzw, s0, l(0.000000)
  lt r0.w, l(0.000000), r6.w
  lt r1.z, r6.w, l(0.000000)
  iadd r0.w, -r0.w, r1.z
  itof r0.w, r0.w
  mul r0.w, r0.w, r0.z
  lt r0.w, l(0.000000), r0.w
  add r1.z, |r2.w|, -|r6.w|
  add r1.z, |r1.z|, |r1.z|
  max r1.z, r1.z, l(1.000000)
  rcp r8.w, r1.z
  mul r8.xyz, r6.xyzx, r8.wwww
  and r6.xyzw, r0.wwww, r8.xyzw
  mad r0.xy, r0.xyxx, cb0[0].zwzz, r1.xyxx
  max r0.xy, r3.xyxx, r0.xyxx
  min r0.xy, r3.zwzz, r0.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t2.xyzw, s0, l(0.000000)
  lt r0.x, l(0.000000), r1.w
  lt r0.y, r1.w, l(0.000000)
  iadd r0.x, -r0.x, r0.y
  itof r0.x, r0.x
  mul r0.x, r0.x, r0.z
  lt r0.x, l(0.000000), r0.x
  add r0.y, -|r1.w|, |r2.w|
  add r0.y, |r0.y|, |r0.y|
  max r0.y, r0.y, l(1.000000)
  rcp r3.w, r0.y
  mul r3.xyz, r1.xyzx, r3.wwww
  add r1.xyzw, r3.xyzw, r6.xyzw
  movc r0.xyzw, r0.xxxx, r1.xyzw, r6.xyzw
  mad r0.xyz, r4.xyzx, r0.xyzx, r7.xyzx
  mad r1.xyz, r4.xyzx, r0.wwww, r5.xyzx
  max r1.xyz, r1.xyzx, l(0.000010, 0.000010, 0.000010, 0.000000)
  div r2.xyz, r0.xyzx, r1.xyzx
else
  mov r2.xyz, l(0,0,0,0)
endif
mov o0.xyzw, r2.xyzw
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
