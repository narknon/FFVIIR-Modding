// ---- Created with 3Dmigoto v1.3.16 on Fri Dec 24 14:41:01 2021
Buffer<float4> t1 : register(t1);

Buffer<float4> t0 : register(t0);

cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[106];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[9];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  float3 v1 : ATTRIBUTE1,
  float4 v2 : ATTRIBUTE2,
  uint4 v3 : ATTRIBUTE3,
  float4 v4 : ATTRIBUTE4,
  float2 v5 : ATTRIBUTE5,
  out float4 o0 : ClipPosition0,
  out float4 o1 : PreviousClipPosition0,
  out float4 o2 : SV_POSITION0,
  out float o3 : SV_CullDistance0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v0.xyz * cb0[8].xyz + cb0[7].xyz;
  r1.xyzw = (uint4)v3.xyzw << int4(2,2,2,2);
  r2.xyzw = t0.Load(r1.x).xyzw;
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r3.x = (((uint)v3.x << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r3.y = (((uint)v3.x << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r3.z = (((uint)v3.y << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r3.w = (((uint)v3.y << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r4.xyzw = t0.Load(r3.x).xyzw;
  r5.xyzw = t0.Load(r3.y).xyzw;
  r6.xyzw = t0.Load(r1.y).xyzw;
  r7.xyzw = t0.Load(r3.z).xyzw;
  r8.xyzw = t0.Load(r3.w).xyzw;
  r6.xyzw = v4.yyyy * r6.xyzw;
  r7.xyzw = v4.yyyy * r7.xyzw;
  r8.xyzw = v4.yyyy * r8.xyzw;
  r2.xyzw = v4.xxxx * r2.xyzw + r6.xyzw;
  r4.xyzw = v4.xxxx * r4.xyzw + r7.xyzw;
  r5.xyzw = v4.xxxx * r5.xyzw + r8.xyzw;
  r6.xyzw = t0.Load(r1.z).xyzw;
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r7.x = (((uint)v3.z << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r7.y = (((uint)v3.z << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r7.z = (((uint)v3.w << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r7.w = (((uint)v3.w << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r8.xyzw = t0.Load(r7.x).xyzw;
  r9.xyzw = t0.Load(r7.y).xyzw;
  r2.xyzw = v4.zzzz * r6.xyzw + r2.xyzw;
  r4.xyzw = v4.zzzz * r8.xyzw + r4.xyzw;
  r5.xyzw = v4.zzzz * r9.xyzw + r5.xyzw;
  r6.xyzw = t0.Load(r1.w).xyzw;
  r8.xyzw = t0.Load(r7.z).xyzw;
  r9.xyzw = t0.Load(r7.w).xyzw;
  r2.xyzw = v4.wwww * r6.xyzw + r2.xyzw;
  r4.xyzw = v4.wwww * r8.xyzw + r4.xyzw;
  r5.xyzw = v4.wwww * r9.xyzw + r5.xyzw;
  r0.w = 1;
  r6.x = dot(r2.xyzw, r0.xyzw);
  r6.y = dot(r4.xyzw, r0.xyzw);
  r6.z = dot(r5.xyzw, r0.xyzw);
  r8.xyz = cb2[1].xyz * r6.yyy;
  r6.xyw = cb2[0].xyz * r6.xxx + r8.xyz;
  r6.xyz = cb2[2].xyz * r6.zzz + r6.xyw;
  r6.xyz = cb2[3].xyz + r6.xyz;
  r6.xyz = cb1[62].xyz + r6.xyz;
  r8.xyzw = cb1[1].xyzw * r6.yyyy;
  r8.xyzw = r6.xxxx * cb1[0].xyzw + r8.xyzw;
  r6.xyzw = r6.zzzz * cb1[2].xyzw + r8.xyzw;
  r6.xyzw = cb1[3].xyzw + r6.xyzw;
  r8.xyw = cb1[105].xyz + cb0[6].xyz;
  if (cb0[8].w != 0) {
    r9.xyzw = t1.Load(r1.x).xyzw;
    r10.xyzw = t1.Load(r3.x).xyzw;
    r11.xyzw = t1.Load(r3.y).xyzw;
    r12.xyzw = t1.Load(r1.y).xyzw;
    r13.xyzw = t1.Load(r3.z).xyzw;
    r3.xyzw = t1.Load(r3.w).xyzw;
    r12.xyzw = v4.yyyy * r12.xyzw;
    r13.xyzw = v4.yyyy * r13.xyzw;
    r3.xyzw = v4.yyyy * r3.xyzw;
    r9.xyzw = v4.xxxx * r9.xyzw + r12.xyzw;
    r10.xyzw = v4.xxxx * r10.xyzw + r13.xyzw;
    r3.xyzw = v4.xxxx * r11.xyzw + r3.xyzw;
    r11.xyzw = t1.Load(r1.z).xyzw;
    r12.xyzw = t1.Load(r7.x).xyzw;
    r13.xyzw = t1.Load(r7.y).xyzw;
    r9.xyzw = v4.zzzz * r11.xyzw + r9.xyzw;
    r10.xyzw = v4.zzzz * r12.xyzw + r10.xyzw;
    r3.xyzw = v4.zzzz * r13.xyzw + r3.xyzw;
    r1.xyzw = t1.Load(r1.w).xyzw;
    r11.xyzw = t1.Load(r7.z).xyzw;
    r7.xyzw = t1.Load(r7.w).xyzw;
    r2.xyzw = v4.wwww * r1.xyzw + r9.xyzw;
    r4.xyzw = v4.wwww * r11.xyzw + r10.xyzw;
    r5.xyzw = v4.wwww * r7.xyzw + r3.xyzw;
  }
  r1.x = dot(r2.xyzw, r0.xyzw);
  r1.y = dot(r4.xyzw, r0.xyzw);
  r1.z = dot(r5.xyzw, r0.xyzw);
  r1.w = 1;
  r0.x = cb0[3].x;
  r0.y = cb0[4].x;
  r0.z = cb0[5].x;
  r0.w = r8.x;
  r0.x = dot(r1.xyzw, r0.xyzw);
  r2.x = cb0[3].y;
  r2.y = cb0[4].y;
  r2.z = cb0[5].y;
  r2.w = r8.y;
  r0.y = dot(r1.xyzw, r2.xyzw);
  r8.x = cb0[3].z;
  r8.y = cb0[4].z;
  r8.z = cb0[5].z;
  r0.z = dot(r1.xyzw, r8.xyzw);
  r2.x = cb0[3].w;
  r2.y = cb0[4].w;
  r2.z = cb0[5].w;
  r2.w = cb0[6].w;
  r0.w = dot(r1.xyzw, r2.xyzw);
  r1.xyzw = cb1[84].xyzw * r0.yyyy;
  r1.xyzw = r0.xxxx * cb1[83].xyzw + r1.xyzw;
  r1.xyzw = r0.zzzz * cb1[85].xyzw + r1.xyzw;
  o1.xyzw = r0.wwww * cb1[86].xyzw + r1.xyzw;
  o0.xyzw = r6.xyzw;
  o2.xyzw = r6.xyzw;
  o3.x = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Dec 24 14:41:01 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// ATTRIBUTE                1   xyz         1     NONE   float
// ATTRIBUTE                2   xyzw        2     NONE   float
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        4     NONE   float   xyzw
// ATTRIBUTE                5   xy          5     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ClipPosition             0   xyzw        0     NONE   float   xyzw
// PreviousClipPosition     0   xyzw        1     NONE   float   xyzw
// SV_POSITION              0   xyzw        2      POS   float   xyzw
// SV_CullDistance          0   x           3  CULLDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[106], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_input v0.xyz
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output_siv o2.xyzw, position
dcl_output_siv o3.x, cull_distance
dcl_temps 14
mad r0.xyz, v0.xyzx, cb0[8].xyzx, cb0[7].xyzx
ishl r1.xyzw, v3.xyzw, l(2, 2, 2, 2)
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r1.xxxx, t0.xyzw
bfi r3.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v3.xxyy, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r3.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r3.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r1.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r3.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r3.wwww, t0.xyzw
mul r6.xyzw, r6.xyzw, v4.yyyy
mul r7.xyzw, r7.xyzw, v4.yyyy
mul r8.xyzw, r8.xyzw, v4.yyyy
mad r2.xyzw, v4.xxxx, r2.xyzw, r6.xyzw
mad r4.xyzw, v4.xxxx, r4.xyzw, r7.xyzw
mad r5.xyzw, v4.xxxx, r5.xyzw, r8.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r1.zzzz, t0.xyzw
bfi r7.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v3.zzww, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r7.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r7.yyyy, t0.xyzw
mad r2.xyzw, v4.zzzz, r6.xyzw, r2.xyzw
mad r4.xyzw, v4.zzzz, r8.xyzw, r4.xyzw
mad r5.xyzw, v4.zzzz, r9.xyzw, r5.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r1.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r7.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r7.wwww, t0.xyzw
mad r2.xyzw, v4.wwww, r6.xyzw, r2.xyzw
mad r4.xyzw, v4.wwww, r8.xyzw, r4.xyzw
mad r5.xyzw, v4.wwww, r9.xyzw, r5.xyzw
mov r0.w, l(1.000000)
dp4 r6.x, r2.xyzw, r0.xyzw
dp4 r6.y, r4.xyzw, r0.xyzw
dp4 r6.z, r5.xyzw, r0.xyzw
mul r8.xyz, r6.yyyy, cb2[1].xyzx
mad r6.xyw, cb2[0].xyxz, r6.xxxx, r8.xyxz
mad r6.xyz, cb2[2].xyzx, r6.zzzz, r6.xywx
add r6.xyz, r6.xyzx, cb2[3].xyzx
add r6.xyz, r6.xyzx, cb1[62].xyzx
mul r8.xyzw, r6.yyyy, cb1[1].xyzw
mad r8.xyzw, r6.xxxx, cb1[0].xyzw, r8.xyzw
mad r6.xyzw, r6.zzzz, cb1[2].xyzw, r8.xyzw
add r6.xyzw, r6.xyzw, cb1[3].xyzw
add r8.xyw, cb0[6].xyxz, cb1[105].xyxz
if_nz cb0[8].w
  ld_indexable(buffer)(float,float,float,float) r9.xyzw, r1.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.xyzw, r3.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r11.xyzw, r3.yyyy, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r1.yyyy, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r13.xyzw, r3.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r3.wwww, t1.xyzw
  mul r12.xyzw, r12.xyzw, v4.yyyy
  mul r13.xyzw, r13.xyzw, v4.yyyy
  mul r3.xyzw, r3.xyzw, v4.yyyy
  mad r9.xyzw, v4.xxxx, r9.xyzw, r12.xyzw
  mad r10.xyzw, v4.xxxx, r10.xyzw, r13.xyzw
  mad r3.xyzw, v4.xxxx, r11.xyzw, r3.xyzw
  ld_indexable(buffer)(float,float,float,float) r11.xyzw, r1.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r12.xyzw, r7.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r13.xyzw, r7.yyyy, t1.xyzw
  mad r9.xyzw, v4.zzzz, r11.xyzw, r9.xyzw
  mad r10.xyzw, v4.zzzz, r12.xyzw, r10.xyzw
  mad r3.xyzw, v4.zzzz, r13.xyzw, r3.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r1.wwww, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r11.xyzw, r7.zzzz, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r7.xyzw, r7.wwww, t1.xyzw
  mad r2.xyzw, v4.wwww, r1.xyzw, r9.xyzw
  mad r4.xyzw, v4.wwww, r11.xyzw, r10.xyzw
  mad r5.xyzw, v4.wwww, r7.xyzw, r3.xyzw
endif
dp4 r1.x, r2.xyzw, r0.xyzw
dp4 r1.y, r4.xyzw, r0.xyzw
dp4 r1.z, r5.xyzw, r0.xyzw
mov r1.w, l(1.000000)
mov r0.x, cb0[3].x
mov r0.y, cb0[4].x
mov r0.z, cb0[5].x
mov r0.w, r8.x
dp4 r0.x, r1.xyzw, r0.xyzw
mov r2.x, cb0[3].y
mov r2.y, cb0[4].y
mov r2.z, cb0[5].y
mov r2.w, r8.y
dp4 r0.y, r1.xyzw, r2.xyzw
mov r8.x, cb0[3].z
mov r8.y, cb0[4].z
mov r8.z, cb0[5].z
dp4 r0.z, r1.xyzw, r8.xyzw
mov r2.x, cb0[3].w
mov r2.y, cb0[4].w
mov r2.z, cb0[5].w
mov r2.w, cb0[6].w
dp4 r0.w, r1.xyzw, r2.xyzw
mul r1.xyzw, r0.yyyy, cb1[84].xyzw
mad r1.xyzw, r0.xxxx, cb1[83].xyzw, r1.xyzw
mad r1.xyzw, r0.zzzz, cb1[85].xyzw, r1.xyzw
mad o1.xyzw, r0.wwww, cb1[86].xyzw, r1.xyzw
mov o0.xyzw, r6.xyzw
mov o2.xyzw, r6.xyzw
mov o3.x, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
