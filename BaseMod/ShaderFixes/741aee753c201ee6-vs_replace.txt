// ---- Created with 3Dmigoto v1.3.16 on Fri Dec 31 02:16:38 2021
Buffer<float4> t0 : register(t0);

cbuffer cb2 : register(b2)
{
  float4 cb2[10];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[63];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[15];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  float3 v1 : ATTRIBUTE1,
  float4 v2 : ATTRIBUTE2,
  uint4 v3 : ATTRIBUTE3,
  float4 v4 : ATTRIBUTE4,
  float2 v5 : ATTRIBUTE5,
  float2 v6 : ATTRIBUTE6,
  out float2 o0 : TEXCOORD0,
  out float p0 : ShadowDepth0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : TEXCOORD5,
  out float4 o3 : TEXCOORD6,
  out float4 o4 : VertexContextVector0,
  out float3 o5 : PixelPosition0,
  out float4 o6 : SV_POSITION0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = (uint4)v3.xyzw << int4(2,2,2,2);
  r1.xyzw = t0.Load(r0.y).xyzw;
  r1.xyzw = v4.yyyy * r1.xyzw;
  r2.xyzw = t0.Load(r0.x).xyzw;
  r1.xyzw = v4.xxxx * r2.xyzw + r1.xyzw;
  r2.xyzw = t0.Load(r0.z).xyzw;
  r0.xyzw = t0.Load(r0.w).xyzw;
  r1.xyzw = v4.zzzz * r2.xyzw + r1.xyzw;
  r0.xyzw = v4.wwww * r0.xyzw + r1.xyzw;
  r1.xyz = v0.xyz * cb0[8].xyz + cb0[7].xyz;
  r1.w = 1;
  r0.w = dot(r0.xyzw, r1.xyzw);
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r2.x = (((uint)v3.x << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r2.y = (((uint)v3.x << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r2.z = (((uint)v3.y << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r2.w = (((uint)v3.y << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r3.xyzw = t0.Load(r2.z).xyzw;
  r3.xyzw = v4.yyyy * r3.xyzw;
  r4.xyzw = t0.Load(r2.x).xyzw;
  r3.xyzw = v4.xxxx * r4.xyzw + r3.xyzw;
  bitmask.x = ((~(-1 << 30)) << 2) & 0xffffffff;  r4.x = (((uint)v3.z << 2) & bitmask.x) | ((uint)1 & ~bitmask.x);
  bitmask.y = ((~(-1 << 30)) << 2) & 0xffffffff;  r4.y = (((uint)v3.z << 2) & bitmask.y) | ((uint)2 & ~bitmask.y);
  bitmask.z = ((~(-1 << 30)) << 2) & 0xffffffff;  r4.z = (((uint)v3.w << 2) & bitmask.z) | ((uint)1 & ~bitmask.z);
  bitmask.w = ((~(-1 << 30)) << 2) & 0xffffffff;  r4.w = (((uint)v3.w << 2) & bitmask.w) | ((uint)2 & ~bitmask.w);
  r5.xyzw = t0.Load(r4.x).xyzw;
  r3.xyzw = v4.zzzz * r5.xyzw + r3.xyzw;
  r5.xyzw = t0.Load(r4.z).xyzw;
  r3.xyzw = v4.wwww * r5.xyzw + r3.xyzw;
  r2.x = dot(r3.xyzw, r1.xyzw);
  r5.xyz = cb2[1].xyz * r2.xxx;
  r5.xyz = cb2[0].xyz * r0.www + r5.xyz;
  r6.xyzw = t0.Load(r2.w).xyzw;
  r2.xyzw = t0.Load(r2.y).xyzw;
  r6.xyzw = v4.yyyy * r6.xyzw;
  r2.xyzw = v4.xxxx * r2.xyzw + r6.xyzw;
  r6.xyzw = t0.Load(r4.y).xyzw;
  r4.xyzw = t0.Load(r4.w).xyzw;
  r2.xyzw = v4.zzzz * r6.xyzw + r2.xyzw;
  r2.xyzw = v4.wwww * r4.xyzw + r2.xyzw;
  r0.w = dot(r2.xyzw, r1.xyzw);
  r1.xyz = cb2[2].xyz * r0.www + r5.xyz;
  r1.xyz = cb2[3].xyz + r1.xyz;
  r1.xyz = cb1[62].xyz + r1.xyz;
  r4.xyzw = cb0[11].xyzw * r1.yyyy;
  r4.xyzw = r1.xxxx * cb0[10].xyzw + r4.xyzw;
  r4.xyzw = r1.zzzz * cb0[12].xyzw + r4.xyzw;
  o5.xyz = r1.xyz;
  r1.xyzw = cb0[13].xyzw + r4.xyzw;
  r0.w = cmp(r1.z < 0);
  r2.w = cmp(0 != cb0[14].x);
  r0.w = r0.w ? r2.w : 0;
  r1.zw = r0.ww ? float2(9.99999997e-007,1) : r1.zw;
  p0.x = r1.z;
  o6.xyzw = r1.xyzw;
  o0.xy = v5.xy;
  o1.xy = v6.xy;
  r1.xyzw = v2.xyzw * float4(2,2,2,2) + float4(-1,-1,-1,-1);
  r0.w = dot(r3.xyz, r1.xyz);
  r4.xyz = cb2[1].yzx * r0.www;
  r0.w = dot(r0.xyz, r1.xyz);
  r4.xyz = r0.www * cb2[0].yzx + r4.xyz;
  r0.w = dot(r2.xyz, r1.xyz);
  r4.xyz = r0.www * cb2[2].yzx + r4.xyz;
  r5.xyz = v1.yzx * float3(2,2,2) + float3(-1,-1,-1);
  r6.xyz = r5.xyz * r1.zxy;
  r5.xyz = r1.yzx * r5.yzx + -r6.xyz;
  r0.w = dot(r5.xyz, r5.xyz);
  r0.w = rsqrt(r0.w);
  r5.xyz = r5.xyz * r0.www;
  r5.xyz = r5.xyz * r1.www;
  r0.w = dot(r3.xyz, r5.xyz);
  r6.xyz = cb2[1].yzx * r0.www;
  r0.w = dot(r0.xyz, r5.xyz);
  r6.xyz = r0.www * cb2[0].yzx + r6.xyz;
  r0.w = dot(r2.xyz, r5.xyz);
  r6.xyz = r0.www * cb2[2].yzx + r6.xyz;
  r7.xyz = r6.yzx * r4.xyz;
  r4.xyz = r6.xyz * r4.yzx + -r7.xyz;
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r7.xyz = r5.zxy * r1.yzx;
  r1.xyz = r5.yzx * r1.zxy + -r7.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  r1.xyz = r1.xyz * r1.www;
  r5.w = cb2[9].w * r1.w;
  r0.x = dot(r0.xyz, r1.xyz);
  r0.y = dot(r3.xyz, r1.xyz);
  r0.z = dot(r2.xyz, r1.xyz);
  r1.xyz = cb2[1].xyz * r0.yyy;
  r0.xyw = r0.xxx * cb2[0].xyz + r1.xyz;
  r0.xyz = r0.zzz * cb2[2].xyz + r0.xyw;
  r0.w = dot(r0.xyz, r4.xyz);
  r0.w = cmp(r0.w < 0);
  r1.xyz = r0.www ? -r4.xyz : r4.xyz;
  r2.xyz = r0.zxy * r6.xyz;
  r0.xyz = r0.yzx * r6.yzx + -r2.xyz;
  r1.w = dot(r0.xyz, r0.xyz);
  r1.w = rsqrt(r1.w);
  r0.xyz = r1.www * r0.xyz;
  r5.xyz = r0.www ? -r0.xyz : r0.xyz;
  r0.xyz = r5.yzx * r1.xyz;
  r0.xyz = r5.xyz * r1.yzx + -r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.w = cmp(r5.w < 0);
  o3.xyzw = r5.xyzw;
  r0.xyz = r0.www ? -r0.xyz : r0.xyz;
  r1.xyz = r0.xyz * r5.yzx;
  r0.xyz = r0.zxy * r5.zxy + -r1.xyz;
  r1.x = dot(r0.xyz, r0.xyz);
  r1.x = rsqrt(r1.x);
  r0.xyz = r1.xxx * r0.xyz;
  o2.xyz = r0.www ? -r0.xyz : r0.xyz;
  o2.w = 0;
  o4.xyzw = float4(0,0,0,0);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Dec 31 02:16:38 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// ATTRIBUTE                1   xyz         1     NONE   float   xyz
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        4     NONE   float   xyzw
// ATTRIBUTE                5   xy          5     NONE   float   xy
// ATTRIBUTE                6   xy          6     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// ShadowDepth              0     z         0     NONE   float     z
// TEXCOORD                 1   xy          1     NONE   float   xy
// TEXCOORD                 5   xyzw        2     NONE   float   xyzw
// TEXCOORD                 6   xyzw        3     NONE   float   xyzw
// VertexContextVector      0   xyzw        4     NONE   float   xyzw
// PixelPosition            0   xyz         5     NONE   float   xyz
// SV_POSITION              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[63], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xy
dcl_input v6.xy
dcl_output o0.xy
dcl_output o0.z
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output_siv o6.xyzw, position
dcl_temps 8
ishl r0.xyzw, v3.xyzw, l(2, 2, 2, 2)
ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
mul r1.xyzw, r1.xyzw, v4.yyyy
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.xxxx, t0.xyzw
mad r1.xyzw, v4.xxxx, r2.xyzw, r1.xyzw
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r0.xyzw, r0.wwww, t0.xyzw
mad r1.xyzw, v4.zzzz, r2.xyzw, r1.xyzw
mad r0.xyzw, v4.wwww, r0.xyzw, r1.xyzw
mad r1.xyz, v0.xyzx, cb0[8].xyzx, cb0[7].xyzx
mov r1.w, l(1.000000)
dp4 r0.w, r0.xyzw, r1.xyzw
bfi r2.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v3.xxyy, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.zzzz, t0.xyzw
mul r3.xyzw, r3.xyzw, v4.yyyy
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r2.xxxx, t0.xyzw
mad r3.xyzw, v4.xxxx, r4.xyzw, r3.xyzw
bfi r4.xyzw, l(30, 30, 30, 30), l(2, 2, 2, 2), v3.zzww, l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.xxxx, t0.xyzw
mad r3.xyzw, v4.zzzz, r5.xyzw, r3.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.zzzz, t0.xyzw
mad r3.xyzw, v4.wwww, r5.xyzw, r3.xyzw
dp4 r2.x, r3.xyzw, r1.xyzw
mul r5.xyz, r2.xxxx, cb2[1].xyzx
mad r5.xyz, cb2[0].xyzx, r0.wwww, r5.xyzx
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r2.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r2.yyyy, t0.xyzw
mul r6.xyzw, r6.xyzw, v4.yyyy
mad r2.xyzw, v4.xxxx, r2.xyzw, r6.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r4.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r4.wwww, t0.xyzw
mad r2.xyzw, v4.zzzz, r6.xyzw, r2.xyzw
mad r2.xyzw, v4.wwww, r4.xyzw, r2.xyzw
dp4 r0.w, r2.xyzw, r1.xyzw
mad r1.xyz, cb2[2].xyzx, r0.wwww, r5.xyzx
add r1.xyz, r1.xyzx, cb2[3].xyzx
add r1.xyz, r1.xyzx, cb1[62].xyzx
mul r4.xyzw, r1.yyyy, cb0[11].xyzw
mad r4.xyzw, r1.xxxx, cb0[10].xyzw, r4.xyzw
mad r4.xyzw, r1.zzzz, cb0[12].xyzw, r4.xyzw
mov o5.xyz, r1.xyzx
add r1.xyzw, r4.xyzw, cb0[13].xyzw
lt r0.w, r1.z, l(0.000000)
ne r2.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[14].x
and r0.w, r0.w, r2.w
movc r1.zw, r0.wwww, l(0,0,0.000001,1.000000), r1.zzzw
mov o0.z, r1.z
mov o6.xyzw, r1.xyzw
mov o0.xy, v5.xyxx
mov o1.xy, v6.xyxx
mad r1.xyzw, v2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
dp3 r0.w, r3.xyzx, r1.xyzx
mul r4.xyz, r0.wwww, cb2[1].yzxy
dp3 r0.w, r0.xyzx, r1.xyzx
mad r4.xyz, r0.wwww, cb2[0].yzxy, r4.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
mad r4.xyz, r0.wwww, cb2[2].yzxy, r4.xyzx
mad r5.xyz, v1.yzxy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r6.xyz, r1.zxyz, r5.xyzx
mad r5.xyz, r1.yzxy, r5.yzxy, -r6.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
mul r5.xyz, r1.wwww, r5.xyzx
dp3 r0.w, r3.xyzx, r5.xyzx
mul r6.xyz, r0.wwww, cb2[1].yzxy
dp3 r0.w, r0.xyzx, r5.xyzx
mad r6.xyz, r0.wwww, cb2[0].yzxy, r6.xyzx
dp3 r0.w, r2.xyzx, r5.xyzx
mad r6.xyz, r0.wwww, cb2[2].yzxy, r6.xyzx
mul r7.xyz, r4.xyzx, r6.yzxy
mad r4.xyz, r6.xyzx, r4.yzxy, -r7.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mul r7.xyz, r1.yzxy, r5.zxyz
mad r1.xyz, r5.yzxy, r1.zxyz, -r7.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r1.xyz, r1.wwww, r1.xyzx
mul r5.w, r1.w, cb2[9].w
dp3 r0.x, r0.xyzx, r1.xyzx
dp3 r0.y, r3.xyzx, r1.xyzx
dp3 r0.z, r2.xyzx, r1.xyzx
mul r1.xyz, r0.yyyy, cb2[1].xyzx
mad r0.xyw, r0.xxxx, cb2[0].xyxz, r1.xyxz
mad r0.xyz, r0.zzzz, cb2[2].xyzx, r0.xywx
dp3 r0.w, r0.xyzx, r4.xyzx
lt r0.w, r0.w, l(0.000000)
movc r1.xyz, r0.wwww, -r4.xyzx, r4.xyzx
mul r2.xyz, r6.xyzx, r0.zxyz
mad r0.xyz, r0.yzxy, r6.yzxy, -r2.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r0.xyz, r0.xyzx, r1.wwww
movc r5.xyz, r0.wwww, -r0.xyzx, r0.xyzx
mul r0.xyz, r1.xyzx, r5.yzxy
mad r0.xyz, r5.xyzx, r1.yzxy, -r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r0.w, r5.w, l(0.000000)
mov o3.xyzw, r5.xyzw
movc r0.xyz, r0.wwww, -r0.xyzx, r0.xyzx
mul r1.xyz, r5.yzxy, r0.xyzx
mad r0.xyz, r0.zxyz, r5.zxyz, -r1.xyzx
dp3 r1.x, r0.xyzx, r0.xyzx
rsq r1.x, r1.x
mul r0.xyz, r0.xyzx, r1.xxxx
movc o2.xyz, r0.wwww, -r0.xyzx, r0.xyzx
mov o2.w, l(0)
mov o4.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
