// ---- Created with 3Dmigoto v1.3.16 on Mon Dec 27 17:10:11 2021
Texture3D<float4> t9 : register(t9);

Texture3D<float4> t8 : register(t8);

Texture3D<float4> t7 : register(t7);

Texture3D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture3D<float4> t0 : register(t0);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[3];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[6];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[12];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[154];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[16];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD5,
  float4 v3 : TEXCOORD6,
  float4 v4 : VertexContextVector0,
  float4 v5 : SV_Position0,
  uint v6 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3,
  out float4 o4 : SV_Target4,
  out float4 o5 : SV_Target5)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v3.zxy * v2.yzx;
  r0.xyz = v3.yzx * v2.zxy + -r0.xyz;
  r0.xyz = v3.www * r0.xyz;
  r0.w = 0.5 + v4.w;
  r0.w = floor(r0.w);
  r0.w = (int)r0.w;
  r1.xyzw = cb1[37].xyzw * v5.yyyy;
  r1.xyzw = v5.xxxx * cb1[36].xyzw + r1.xyzw;
  r1.xyzw = v5.zzzz * cb1[38].xyzw + r1.xyzw;
  r1.xyzw = cb1[39].xyzw + r1.xyzw;
  r1.xyz = r1.xyz / r1.www;
  r2.xyz = -cb1[62].xyz + r1.xyz;
  r1.w = dot(-r1.xyz, -r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = -r1.xyz * r1.www;
  r1.w = asuint(cb1[139].z) << 3;
  r3.z = (int)r0.w + (int)r1.w;
  r3.xy = (int2)v5.xy;
  r3.xyz = (int3)r3.xyz & int3(63,63,63);
  r3.w = 0;
  r3.xyz = t0.Load(r3.xyzw).xyz;
  r4.xy = t1.Sample(s1_s, v0.xy).xy;
  r4.xy = r4.xy * float2(2,2) + float2(-1,-1);
  r0.w = dot(r4.xy, r4.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r4.z = sqrt(r0.w);
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r5.xyz = r4.yyy * r0.xyz;
  r4.xyw = r4.xxx * v2.xyz + r5.xyz;
  r4.xyz = r4.zzz * v3.xyz + r4.xyw;
  r5.xy = t2.Sample(s2_s, v0.xy).xy;
  r5.xy = r5.xy * float2(2,2) + float2(-1,-1);
  r0.w = dot(r5.xy, r5.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r5.z = sqrt(r0.w);
  r0.w = dot(r5.xyz, r5.xyz);
  r0.w = rsqrt(r0.w);
  r5.xyz = r5.xyz * r0.www;
  r6.xyz = r5.yyy * r0.xyz;
  r5.xyw = r5.xxx * v2.xyz + r6.xyz;
  r5.xyz = r5.zzz * v3.xyz + r5.xyw;
  r6.xyz = v2.yzx * r5.zxy;
  r6.xyz = r5.yzx * v2.zxy + -r6.xyz;
  r0.w = dot(r6.xyz, r6.xyz);
  r0.w = rsqrt(r0.w);
  r6.xyz = r6.xyz * r0.www;
  r6.xyz = v3.www * r6.xyz;
  r7.xyz = r6.zxy * r5.yzx;
  r7.xyz = r6.yzx * r5.zxy + -r7.xyz;
  r0.w = dot(r7.xyz, r7.xyz);
  r0.w = rsqrt(r0.w);
  r7.xyz = r7.xyz * r0.www;
  r7.xyz = v3.www * r7.xyz;
  r8.xy = v0.xy * float2(2,2) + float2(-1,-1);
  r8.xy = r8.xy + r8.xy;
  r0.w = dot(r8.xy, r8.xy);
  r1.w = sqrt(r0.w);
  r2.w = rsqrt(r0.w);
  r8.yz = r8.xy * r2.ww;
  r8.x = -0.769999981 * r1.w;
  r9.y = 0;
  r9.xz = float2(1,-1) * r8.yz;
  r10.xyz = r9.xyz * r8.xyz;
  r8.xyz = r8.zxy * r9.yzx + -r10.xyz;
  r2.w = dot(r8.xyz, r8.xyz);
  r2.w = rsqrt(r2.w);
  r8.xyz = r8.xyz * r2.www;
  r9.xyz = r8.yyy * r6.xyz;
  r8.xyw = r8.xxx * r7.xyz + r9.xyz;
  r8.xyz = r8.zzz * r5.xyz + r8.xyw;
  r1.w = -0.800000012 + r1.w;
  r1.w = saturate(2.49999976 * r1.w);
  r2.w = r1.w * -2 + 3;
  r1.w = r1.w * r1.w;
  r1.w = -r2.w * r1.w + 1;
  r1.w = max(0, r1.w);
  r9.xyz = r8.xyz + -r4.xyz;
  r9.xyz = r1.www * r9.xyz + r4.xyz;
  r1.w = dot(r9.xyz, r9.xyz);
  r1.w = sqrt(r1.w);
  r9.xyz = r9.xyz / r1.www;
  r9.xyz = r9.xyz * cb1[134].www + cb1[134].xyz;
  r1.w = dot(r9.xyz, r9.xyz);
  r1.w = rsqrt(r1.w);
  r9.xyz = r9.xyz * r1.www;
  r1.w = dot(-r1.xyz, r8.xyz);
  r2.w = -r1.w * r1.w + 1;
  r2.w = -r2.w * 0.525099754 + 1;
  r3.w = sqrt(r2.w);
  r1.w = r1.w * 0.724637687 + r3.w;
  r2.w = cmp(r2.w >= 0);
  r8.xyz = r1.www * r8.xyz;
  r8.xyz = r1.xyz * float3(-0.724637687,-0.724637687,-0.724637687) + -r8.xyz;
  r8.xyz = r2.www ? r8.xyz : 0;
  r10.x = dot(r7.xyz, r8.xyz);
  r10.y = dot(r6.xyz, r8.xyz);
  r1.w = dot(r5.xyz, r8.xyz);
  r2.w = 1 + -r0.w;
  r2.w = max(0, r2.w);
  r0.w = -1 + r0.w;
  r0.w = max(0, r0.w);
  r0.w = 5 * r0.w;
  r0.w = min(1, r0.w);
  r0.w = 1 + -r0.w;
  r0.w = 0.0384999998 * r0.w;
  r0.w = r2.w * 0.38499999 + r0.w;
  r8.xy = r10.xy / -r1.ww;
  r8.xy = r8.xy * r0.ww;
  r8.xy = r8.xy * float2(0.319999993,0.319999993) + v0.xy;
  r10.xyz = t3.Sample(s3_s, r8.xy).xyz;
  r8.xy = r8.xy * float2(2,2) + float2(-1,-1);
  r8.xy = r8.xy + r8.xy;
  r0.w = dot(r8.xy, r8.xy);
  r1.w = sqrt(r0.w);
  r2.w = min(1, r0.w);
  r3.w = 1 + -r1.w;
  r3.w = max(0, r3.w);
  r2.w = r3.w * r2.w;
  r2.w = 6.71140909 * r2.w;
  r2.w = min(1, r2.w);
  r3.w = r2.w * 0.00400000019 + 0.0454999991;
  r8.zw = float2(6.25,1) * r3.ww;
  o2.y = sqrt(r8.z);
  r4.w = t4.Sample(s4_s, v1.xy).x;
  r11.xyz = saturate(r2.xyz * cb0[10].xyz + cb0[11].xyz);
  r11.xyz = cb0[12].xyz * r11.xyz;
  r10.xyz = saturate(r10.xyz);
  o3.w = saturate(r4.w);
  r4.w = cb1[135].y * 0.100000001 + cb1[135].x;
  r12.xyz = max(float3(0,0,0), cb4[2].xyz);
  r5.w = cmp(0 < cb2[11].y);
  r5.w = r5.w ? cb3[5].x : 1;
  r6.w = t9.SampleLevel(s0_s, r11.xyz, 0).x;
  r5.w = r6.w * r5.w;
  r6.w = r3.x * 0.99609375 + 0.001953125;
  r5.w = cmp(r6.w < r5.w);
  r5.w = r5.w ? 0.000000 : 0;
  r13.xyz = asint(cb2[11].xxx) & int3(1,2,4);
  r13.yz = r13.yz ? float2(8.96831017e-044,1.79366203e-043) : float2(0,0);
  r5.w = (int)r5.w + (int)r13.y;
  r5.w = (int)r13.z + (int)r5.w;
  o4.w = r2.w * -0.199999988 + 0.5;
  r13.yzw = ddx_coarse(r9.xyz);
  r2.w = dot(r13.yzw, r13.yzw);
  r13.yzw = ddy_coarse(r9.xyz);
  r6.w = dot(r13.yzw, r13.yzw);
  r2.w = r6.w + r2.w;
  r2.w = 0.5 * r2.w;
  r2.w = min(0.180000007, r2.w);
  r2.w = r4.w * r4.w + r2.w;
  r2.w = min(1, r2.w);
  r2.w = sqrt(r2.w);
  r13.yz = float2(-0.899999976,-0.800000012) + r1.ww;
  r13.yz = saturate(float2(9.99999809,2.49999976) * r13.yz);
  r14.xy = r13.yz * float2(-2,-2) + float2(3,3);
  r13.yz = r13.yz * r13.yz;
  r13.yz = -r14.xy * r13.yz + float2(1,1);
  r13.yz = max(float2(0,0), r13.yz);
  r14.xyz = r5.xyz + -r4.xyz;
  r4.xyz = r13.yyy * r14.xyz + r4.xyz;
  r1.w = dot(r4.xyz, r4.xyz);
  r1.w = sqrt(r1.w);
  r4.xyz = r4.xyz / r1.www;
  r14.xy = t5.Sample(s5_s, v0.xy).xy;
  r14.xy = r14.xy * float2(2,2) + float2(-1,-1);
  r1.w = dot(r14.xy, r14.xy);
  r1.w = 1 + -r1.w;
  r1.w = max(0, r1.w);
  r14.z = sqrt(r1.w);
  r1.w = dot(r14.xyz, r14.xyz);
  r1.w = rsqrt(r1.w);
  r14.xyz = r14.xyz * r1.www;
  r0.xyz = r14.yyy * r0.xyz;
  r0.xyz = r14.xxx * v2.xyz + r0.xyz;
  r0.xyz = r14.zzz * v3.xyz + r0.xyz;
  r8.xy = -r8.xy;
  r0.w = 2.25 + -r0.w;
  r8.z = max(0, r0.w);
  r0.w = dot(r8.xyz, r8.xyz);
  r0.w = rsqrt(r0.w);
  r8.xyz = r8.xyz * r0.www;
  r6.xyz = r8.yyy * r6.xyz;
  r6.xyz = r8.xxx * r7.xyz + r6.xyz;
  r5.xyz = r8.zzz * r5.xyz + r6.xyz;
  r5.xyz = r5.xyz + -r0.xyz;
  r0.xyz = r13.yyy * r5.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = sqrt(r0.w);
  r0.xyz = r0.xyz / r0.www;
  r0.xyz = r0.xyz + -r4.xyz;
  r0.xyz = r13.zzz * r0.xyz + r4.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = sqrt(r0.w);
  r0.xyz = r0.xyz / r0.www;
  r4.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  r5.xyz = r10.xyz * cb1[132].www + cb1[132].xyz;
  r6.xyz = r3.www * float3(0.449999988,0.449999988,0.449999988) + r5.xyz;
  r5.xyz = t6.SampleLevel(s0_s, r11.xyz, 0).xyz;
  r7.xyz = float3(0.318309873,0.318309873,0.318309873) * r5.xyz;
  r8.xyz = t7.SampleLevel(s0_s, r11.xyz, 0).xyz;
  r8.xyz = float3(0.318309873,0.318309873,0.318309873) * r8.xyz;
  r11.xyz = t8.SampleLevel(s0_s, r11.xyz, 0).xyz;
  r11.xyz = float3(0.318309873,0.318309873,0.318309873) * r11.xyz;
  r0.w = dot(r7.xyz, float3(0.212599993,0.715200007,0.0722000003));
  r0.w = max(9.99999975e-005, r0.w);
  r13.yzw = r7.xyz / r0.www;
  r14.xyz = saturate(r0.xyz);
  r14.xyz = r14.xyz * r14.xyz;
  r0.xyz = saturate(-r0.xyz);
  r0.xyz = r0.xyz * r0.xyz;
  r0.w = dot(r8.xyz, r14.xyz);
  r1.w = dot(r11.xyz, r0.xyz);
  r0.w = r1.w + r0.w;
  r11.xyz = r13.yzw * r0.www;
  r0.w = cmp(0 < cb0[13].w);
  if (r0.w != 0) {
    r0.w = dot(cb0[13].xyz, float3(0.212599993,0.715200007,0.0722000003));
    r0.w = max(9.99999975e-005, r0.w);
    r8.xyz = cb0[13].xyz / r0.www;
    r0.w = dot(cb0[14].xyz, r14.xyz);
    r0.x = dot(cb0[15].xyz, r0.xyz);
    r0.x = r0.w + r0.x;
    r0.yzw = -r5.xyz * float3(0.318309873,0.318309873,0.318309873) + cb0[13].xyz;
    r7.xyz = cb0[13].www * r0.yzw + r7.xyz;
    r0.xyz = r8.xyz * r0.xxx + -r11.xyz;
    r11.xyz = cb0[13].www * r0.xyz + r11.xyz;
  }
  r11.w = dot(r7.xyz, float3(0.212599993,0.715200007,0.0722000003));
  r0.w = dot(cb1[153].xyz, float3(0.212599993,0.715200007,0.0722000003));
  r0.xyz = cb1[153].xyz;
  r0.xyzw = r11.xyzw * r0.xyzw;
  r1.x = dot(r9.xyz, r1.xyz);
  r1.x = max(9.99999975e-006, abs(r1.x));
  r1.y = dot(r8.www, float3(0.333333343,0.333333343,0.333333343));
  r7.xyzw = r2.wwww * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
  r1.z = r7.x * r7.x;
  r1.x = -9.27999973 * r1.x;
  r1.x = exp2(r1.x);
  r1.x = min(r1.z, r1.x);
  r1.x = r1.x * r7.x + r7.y;
  r1.xz = r1.xx * float2(-1.03999996,1.03999996) + r7.zw;
  r1.y = dot(r1.yyy, float3(0.333333343,0.333333343,0.333333343));
  r1.x = saturate(r1.y * r1.x + r1.z);
  r1.x = 1 + -r1.x;
  r1.x = r1.x * r1.x;
  r1.xyz = r12.xyz * r1.xxx;
  r3.w = cmp(0 < cb1[140].z);
  r6.w = dot(r6.xyz, float3(0.212599993,0.715200007,0.0722000003));
  r1.w = 0;
  r1.xyzw = r3.wwww ? r6.xyzw : r1.xyzw;
  r3.w = cmp(0 < cb1[136].x);
  if (r3.w != 0) {
    r5.xyz = -cb2[8].xyz + r2.xyz;
    r6.xyz = float3(1,1,1) + cb2[9].xyz;
    r5.xyz = cmp(r6.xyz < abs(r5.xyz));
    r3.w = (int)r5.y | (int)r5.x;
    r3.w = (int)r5.z | (int)r3.w;
    r2.x = dot(r2.xyz, float3(0.577000022,0.577000022,0.577000022));
    r2.x = 0.00200000009 * r2.x;
    r2.x = frac(r2.x);
    r2.x = cmp(0.5 < r2.x);
    r6.xyz = r2.xxx ? float3(0,1,1) : float3(1,1,0);
    r6.w = dot(r6.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r1.xyzw = r3.wwww ? r6.xyzw : r1.xyzw;
  }
  o0.xyzw = cb1[128].xxxx * r1.xyzw;
  r1.xyz = r9.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o1.w = r13.x ? 0.333333343 : 0;
  r1.w = (int)r5.w + 25;
  r1.w = (uint)r1.w;
  o2.w = 0.00392156886 * r1.w;
  o5.xyzw = cb1[128].xxxx * r0.xyzw;
  r0.xyzw = r3.xyzx * float4(2,2,2,2) + float4(-1,-1,-1,-1);
  r3.xyzw = cmp(float4(0,0,0,0) < r0.wyzw);
  r5.xyzw = cmp(r0.wyzw < float4(0,0,0,0));
  r3.xyzw = (int4)-r3.xyzw + (int4)r5.xyzw;
  r3.xyzw = (int4)r3.xyzw;
  r0.xyzw = float4(1,1,1,1) + -abs(r0.xyzw);
  r0.xyzw = sqrt(r0.xyzw);
  r0.xyzw = float4(1,1,1,1) + -r0.xyzw;
  r0.xyzw = r3.xyzw * r0.xyzw;
  r2.xyz = r1.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r2.xyz = float3(-0.998044968,-0.998044968,-0.998044968) + abs(r2.xyz);
  r2.xyz = cmp(r2.xyz < float3(0,0,0));
  r3.xyz = r0.xyz * float3(0.000977517106,0.000977517106,0.000977517106) + r1.xyz;
  o1.xyz = saturate(r2.xyz ? r3.xyz : r1.xyz);
  r1.xyz = r4.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.xyz = float3(-0.992156863,-0.992156863,-0.992156863) + abs(r1.xyz);
  r1.xyz = cmp(r1.xyz < float3(0,0,0));
  r0.x = r0.w * 0.00392156886 + r4.x;
  o4.x = saturate(r1.x ? r0.x : r4.x);
  r0.xy = r0.yz * float2(0.00392156886,0.00392156886) + r4.yz;
  o4.yz = saturate(r1.yz ? r0.xy : r4.yz);
  o2.x = 0;
  o2.z = r2.w;
  o3.xyz = r10.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Dec 27 17:10:11 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xy          1     NONE   float   xy
// TEXCOORD                 5   xyzw        2     NONE   float   xyz
// TEXCOORD                 6   xyzw        3     NONE   float   xyzw
// VertexContextVector      0   xyzw        4     NONE   float      w
// SV_Position              0   xyzw        5      POS   float   xyz
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[154], immediateIndexed
dcl_constantbuffer cb2[12], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.w
dcl_input_ps_siv linear noperspective centroid v5.xyz, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 15
mul r0.xyz, v2.yzxy, v3.zxyz
mad r0.xyz, v3.yzxy, v2.zxyz, -r0.xyzx
mul r0.xyz, r0.xyzx, v3.wwww
add r0.w, v4.w, l(0.500000)
round_ni r0.w, r0.w
ftoi r0.w, r0.w
mul r1.xyzw, v5.yyyy, cb1[37].xyzw
mad r1.xyzw, v5.xxxx, cb1[36].xyzw, r1.xyzw
mad r1.xyzw, v5.zzzz, cb1[38].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb1[39].xyzw
div r1.xyz, r1.xyzx, r1.wwww
add r2.xyz, r1.xyzx, -cb1[62].xyzx
dp3 r1.w, -r1.xyzx, -r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, -r1.xyzx
ishl r1.w, cb1[139].z, l(3)
iadd r3.z, r0.w, r1.w
ftoi r3.xy, v5.xyxx
and r3.xyz, r3.xyzx, l(63, 63, 63, 0)
mov r3.w, l(0)
ld_indexable(texture3d)(float,float,float,float) r3.xyz, r3.xyzw, t0.xyzw
sample_indexable(texture2d)(float,float,float,float) r4.xy, v0.xyxx, t1.xyzw, s1
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r4.z, r0.w
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mul r5.xyz, r0.xyzx, r4.yyyy
mad r4.xyw, r4.xxxx, v2.xyxz, r5.xyxz
mad r4.xyz, r4.zzzz, v3.xyzx, r4.xywx
sample_indexable(texture2d)(float,float,float,float) r5.xy, v0.xyxx, t2.xyzw, s2
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r5.xyxx, r5.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r5.z, r0.w
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
mul r6.xyz, r0.xyzx, r5.yyyy
mad r5.xyw, r5.xxxx, v2.xyxz, r6.xyxz
mad r5.xyz, r5.zzzz, v3.xyzx, r5.xywx
mul r6.xyz, r5.zxyz, v2.yzxy
mad r6.xyz, r5.yzxy, v2.zxyz, -r6.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx
mul r6.xyz, r6.xyzx, v3.wwww
mul r7.xyz, r5.yzxy, r6.zxyz
mad r7.xyz, r6.yzxy, r5.zxyz, -r7.xyzx
dp3 r0.w, r7.xyzx, r7.xyzx
rsq r0.w, r0.w
mul r7.xyz, r0.wwww, r7.xyzx
mul r7.xyz, r7.xyzx, v3.wwww
mad r8.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r8.xy, r8.xyxx, r8.xyxx
dp2 r0.w, r8.xyxx, r8.xyxx
sqrt r1.w, r0.w
rsq r2.w, r0.w
mul r8.yz, r2.wwww, r8.xxyx
mul r8.x, r1.w, l(-0.770000)
mov r9.y, l(0)
mul r9.xz, r8.yyzy, l(1.000000, 0.000000, -1.000000, 0.000000)
mul r10.xyz, r8.xyzx, r9.xyzx
mad r8.xyz, r8.zxyz, r9.yzxy, -r10.xyzx
dp3 r2.w, r8.xyzx, r8.xyzx
rsq r2.w, r2.w
mul r8.xyz, r2.wwww, r8.xyzx
mul r9.xyz, r6.xyzx, r8.yyyy
mad r8.xyw, r8.xxxx, r7.xyxz, r9.xyxz
mad r8.xyz, r8.zzzz, r5.xyzx, r8.xywx
add r1.w, r1.w, l(-0.800000)
mul_sat r1.w, r1.w, l(2.49999976)
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mad r1.w, -r2.w, r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
add r9.xyz, -r4.xyzx, r8.xyzx
mad r9.xyz, r1.wwww, r9.xyzx, r4.xyzx
dp3 r1.w, r9.xyzx, r9.xyzx
sqrt r1.w, r1.w
div r9.xyz, r9.xyzx, r1.wwww
mad r9.xyz, r9.xyzx, cb1[134].wwww, cb1[134].xyzx
dp3 r1.w, r9.xyzx, r9.xyzx
rsq r1.w, r1.w
mul r9.xyz, r1.wwww, r9.xyzx
dp3 r1.w, -r1.xyzx, r8.xyzx
mad r2.w, -r1.w, r1.w, l(1.000000)
mad r2.w, -r2.w, l(0.525099754), l(1.000000)
sqrt r3.w, r2.w
mad r1.w, r1.w, l(0.724637687), r3.w
ge r2.w, r2.w, l(0.000000)
mul r8.xyz, r8.xyzx, r1.wwww
mad r8.xyz, r1.xyzx, l(-0.724637687, -0.724637687, -0.724637687, 0.000000), -r8.xyzx
and r8.xyz, r2.wwww, r8.xyzx
dp3 r10.x, r7.xyzx, r8.xyzx
dp3 r10.y, r6.xyzx, r8.xyzx
dp3 r1.w, r5.xyzx, r8.xyzx
add r2.w, -r0.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
add r0.w, r0.w, l(-1.000000)
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, l(5.000000)
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, l(0.038500)
mad r0.w, r2.w, l(0.385000), r0.w
div r8.xy, r10.xyxx, -r1.wwww
mul r8.xy, r0.wwww, r8.xyxx
mad r8.xy, r8.xyxx, l(0.320000, 0.320000, 0.000000, 0.000000), v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r8.xyxx, t3.xyzw, s3
mad r8.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r8.xy, r8.xyxx, r8.xyxx
dp2 r0.w, r8.xyxx, r8.xyxx
sqrt r1.w, r0.w
min r2.w, r0.w, l(1.000000)
add r3.w, -r1.w, l(1.000000)
max r3.w, r3.w, l(0.000000)
mul r2.w, r2.w, r3.w
mul r2.w, r2.w, l(6.711409)
min r2.w, r2.w, l(1.000000)
mad r3.w, r2.w, l(0.004000), l(0.045500)
mul r8.zw, r3.wwww, l(0.000000, 0.000000, 6.250000, 1.000000)
sqrt o2.y, r8.z
sample_indexable(texture2d)(float,float,float,float) r4.w, v1.xyxx, t4.yzwx, s4
mad_sat r11.xyz, r2.xyzx, cb0[10].xyzx, cb0[11].xyzx
mul r11.xyz, r11.xyzx, cb0[12].xyzx
mov_sat r10.xyz, r10.xyzx
mov_sat o3.w, r4.w
mad r4.w, cb1[135].y, l(0.100000), cb1[135].x
max r12.xyz, cb4[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r5.w, l(0.000000), cb2[11].y
movc r5.w, r5.w, cb3[5].x, l(1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r6.w, r11.xyzx, t9.yzwx, s0, l(0.000000)
mul r5.w, r5.w, r6.w
mad r6.w, r3.x, l(0.996093750), l(0.00195312500)
lt r5.w, r6.w, r5.w
and r5.w, r5.w, l(32)
and r13.xyz, cb2[11].xxxx, l(1, 2, 4, 0)
movc r13.yz, r13.yyzy, l(0,64,128,0), l(0,0,0,0)
iadd r5.w, r5.w, r13.y
iadd r5.w, r13.z, r5.w
mad o4.w, r2.w, l(-0.199999988), l(0.500000)
deriv_rtx_coarse r13.yzw, r9.xxyz
dp3 r2.w, r13.yzwy, r13.yzwy
deriv_rty_coarse r13.yzw, r9.xxyz
dp3 r6.w, r13.yzwy, r13.yzwy
add r2.w, r2.w, r6.w
mul r2.w, r2.w, l(0.500000)
min r2.w, r2.w, l(0.180000)
mad r2.w, r4.w, r4.w, r2.w
min r2.w, r2.w, l(1.000000)
sqrt r2.w, r2.w
add r13.yz, r1.wwww, l(0.000000, -0.900000, -0.800000, 0.000000)
mul_sat r13.yz, r13.yyzy, l(0.000000, 9.999998, 2.49999976, 0.000000)
mad r14.xy, r13.yzyy, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mul r13.yz, r13.yyzy, r13.yyzy
mad r13.yz, -r14.xxyx, r13.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
max r13.yz, r13.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
add r14.xyz, -r4.xyzx, r5.xyzx
mad r4.xyz, r13.yyyy, r14.xyzx, r4.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
sqrt r1.w, r1.w
div r4.xyz, r4.xyzx, r1.wwww
sample_indexable(texture2d)(float,float,float,float) r14.xy, v0.xyxx, t5.xyzw, s5
mad r14.xy, r14.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r14.xyxx, r14.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r14.z, r1.w
dp3 r1.w, r14.xyzx, r14.xyzx
rsq r1.w, r1.w
mul r14.xyz, r1.wwww, r14.xyzx
mul r0.xyz, r0.xyzx, r14.yyyy
mad r0.xyz, r14.xxxx, v2.xyzx, r0.xyzx
mad r0.xyz, r14.zzzz, v3.xyzx, r0.xyzx
mov r8.xy, -r8.xyxx
add r0.w, -r0.w, l(2.250000)
max r8.z, r0.w, l(0.000000)
dp3 r0.w, r8.xyzx, r8.xyzx
rsq r0.w, r0.w
mul r8.xyz, r0.wwww, r8.xyzx
mul r6.xyz, r6.xyzx, r8.yyyy
mad r6.xyz, r8.xxxx, r7.xyzx, r6.xyzx
mad r5.xyz, r8.zzzz, r5.xyzx, r6.xyzx
add r5.xyz, -r0.xyzx, r5.xyzx
mad r0.xyz, r13.yyyy, r5.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r0.w, r0.w
div r0.xyz, r0.xyzx, r0.wwww
add r0.xyz, -r4.xyzx, r0.xyzx
mad r0.xyz, r13.zzzz, r0.xyzx, r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r0.w, r0.w
div r0.xyz, r0.xyzx, r0.wwww
mad r4.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r5.xyz, r10.xyzx, cb1[132].wwww, cb1[132].xyzx
mad r6.xyz, r3.wwww, l(0.450000, 0.450000, 0.450000, 0.000000), r5.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r5.xyz, r11.xyzx, t6.xyzw, s0, l(0.000000)
mul r7.xyz, r5.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyz, r11.xyzx, t7.xyzw, s0, l(0.000000)
mul r8.xyz, r8.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r11.xyz, r11.xyzx, t8.xyzw, s0, l(0.000000)
mul r11.xyz, r11.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
dp3 r0.w, r7.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r0.w, r0.w, l(0.000100)
div r13.yzw, r7.xxyz, r0.wwww
mov_sat r14.xyz, r0.xyzx
mul r14.xyz, r14.xyzx, r14.xyzx
mov_sat r0.xyz, -r0.xyzx
mul r0.xyz, r0.xyzx, r0.xyzx
dp3 r0.w, r8.xyzx, r14.xyzx
dp3 r1.w, r11.xyzx, r0.xyzx
add r0.w, r0.w, r1.w
mul r11.xyz, r0.wwww, r13.yzwy
lt r0.w, l(0.000000), cb0[13].w
if_nz r0.w
  dp3 r0.w, cb0[13].xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  max r0.w, r0.w, l(0.000100)
  div r8.xyz, cb0[13].xyzx, r0.wwww
  dp3 r0.w, cb0[14].xyzx, r14.xyzx
  dp3 r0.x, cb0[15].xyzx, r0.xyzx
  add r0.x, r0.x, r0.w
  mad r0.yzw, -r5.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873), cb0[13].xxyz
  mad r7.xyz, cb0[13].wwww, r0.yzwy, r7.xyzx
  mad r0.xyz, r8.xyzx, r0.xxxx, -r11.xyzx
  mad r11.xyz, cb0[13].wwww, r0.xyzx, r11.xyzx
endif
dp3 r11.w, r7.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
dp3 r0.w, cb1[153].xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
mov r0.xyz, cb1[153].xyzx
mul r0.xyzw, r0.xyzw, r11.xyzw
dp3 r1.x, r9.xyzx, r1.xyzx
max r1.x, |r1.x|, l(0.000010)
dp3 r1.y, r8.wwww, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
mad r7.xyzw, r2.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r1.z, r7.x, r7.x
mul r1.x, r1.x, l(-9.280000)
exp r1.x, r1.x
min r1.x, r1.x, r1.z
mad r1.x, r1.x, r7.x, r7.y
mad r1.xz, r1.xxxx, l(-1.040000, 0.000000, 1.040000, 0.000000), r7.zzwz
dp3 r1.y, r1.yyyy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
mad_sat r1.x, r1.y, r1.x, r1.z
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, r1.x
mul r1.xyz, r1.xxxx, r12.xyzx
lt r3.w, l(0.000000), cb1[140].z
dp3 r6.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
mov r1.w, l(0)
movc r1.xyzw, r3.wwww, r6.xyzw, r1.xyzw
lt r3.w, l(0.000000), cb1[136].x
if_nz r3.w
  add r5.xyz, r2.xyzx, -cb2[8].xyzx
  add r6.xyz, cb2[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r5.xyz, r6.xyzx, |r5.xyzx|
  or r3.w, r5.y, r5.x
  or r3.w, r5.z, r3.w
  dp3 r2.x, r2.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r2.x, r2.x, l(0.002000)
  frc r2.x, r2.x
  lt r2.x, l(0.500000), r2.x
  movc r6.xyz, r2.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  dp3 r6.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  movc r1.xyzw, r3.wwww, r6.xyzw, r1.xyzw
endif
mul o0.xyzw, r1.xyzw, cb1[128].xxxx
mad r1.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
movc o1.w, r13.x, l(0.333333343), l(0)
iadd r1.w, r5.w, l(25)
utof r1.w, r1.w
mul o2.w, r1.w, l(0.00392156886)
mul o5.xyzw, r0.xyzw, cb1[128].xxxx
mad r0.xyzw, r3.xyzx, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
lt r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r0.wyzw
lt r5.xyzw, r0.wyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
iadd r3.xyzw, -r3.xyzw, r5.xyzw
itof r3.xyzw, r3.xyzw
add r0.xyzw, -|r0.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
sqrt r0.xyzw, r0.xyzw
add r0.xyzw, -r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r0.xyzw, r0.xyzw, r3.xyzw
mad r2.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r2.xyz, |r2.xyzx|, l(-0.998044968, -0.998044968, -0.998044968, 0.000000)
lt r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r3.xyz, r0.xyzx, l(0.000977517106, 0.000977517106, 0.000977517106, 0.000000), r1.xyzx
movc_sat o1.xyz, r2.xyzx, r3.xyzx, r1.xyzx
mad r1.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r1.xyz, |r1.xyzx|, l(-0.992156863, -0.992156863, -0.992156863, 0.000000)
lt r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r0.x, r0.w, l(0.00392156886), r4.x
movc_sat o4.x, r1.x, r0.x, r4.x
mad r0.xy, r0.yzyy, l(0.00392156886, 0.00392156886, 0.000000, 0.000000), r4.yzyy
movc_sat o4.yz, r1.yyzy, r0.xxyx, r4.yyzy
mov o2.x, l(0)
mov o2.z, r2.w
mov o3.xyz, r10.xyzx
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
