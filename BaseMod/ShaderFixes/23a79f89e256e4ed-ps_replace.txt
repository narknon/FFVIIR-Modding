// ---- Created with 3Dmigoto v1.3.16 on Mon Dec 27 16:43:22 2021
Texture3D<float4> t8 : register(t8);

Texture3D<float4> t7 : register(t7);

Texture3D<float4> t6 : register(t6);

Texture3D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture3D<float4> t0 : register(t0);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[3];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[6];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[12];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[154];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[17];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD5,
  float4 v3 : TEXCOORD6,
  float4 v4 : VertexContextVector0,
  float4 v5 : SV_Position0,
  uint v6 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3,
  out float4 o4 : SV_Target4,
  out float4 o5 : SV_Target5)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v3.zxy * v2.yzx;
  r0.xyz = v3.yzx * v2.zxy + -r0.xyz;
  r0.xyz = v3.www * r0.xyz;
  r0.w = 0.5 + v4.w;
  r0.w = floor(r0.w);
  r0.w = (int)r0.w;
  r1.xyzw = cb1[37].xyzw * v5.yyyy;
  r1.xyzw = v5.xxxx * cb1[36].xyzw + r1.xyzw;
  r1.xyzw = v5.zzzz * cb1[38].xyzw + r1.xyzw;
  r1.xyzw = cb1[39].xyzw + r1.xyzw;
  r1.xyz = r1.xyz / r1.www;
  r2.xyz = -cb1[62].xyz + r1.xyz;
  r1.w = dot(-r1.xyz, -r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = -r1.xyz * r1.www;
  r1.w = asuint(cb1[139].z) << 3;
  r3.z = (int)r0.w + (int)r1.w;
  r3.xy = (int2)v5.xy;
  r3.xyz = (int3)r3.xyz & int3(63,63,63);
  r3.w = 0;
  r3.xyz = t0.Load(r3.xyzw).xyz;
  r4.xy = t1.Sample(s1_s, v0.xy).xy;
  r4.xy = r4.xy * float2(2,2) + float2(-1,-1);
  r0.w = dot(r4.xy, r4.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r4.z = sqrt(r0.w);
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r4.xyz = r4.xyz * cb1[134].www + cb1[134].xyz;
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r0.xyz = r4.yyy * r0.xyz;
  r0.xyz = r4.xxx * v2.xyz + r0.xyz;
  r0.xyz = r4.zzz * v3.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r4.xyz = t2.Sample(s2_s, v0.xy).xyz;
  r5.xy = t3.Sample(s3_s, v0.xy).xy;
  r0.w = t4.Sample(s4_s, v1.xy).x;
  r6.xyz = saturate(r2.xyz * cb0[11].xyz + cb0[12].xyz);
  r6.xyz = cb0[13].xyz * r6.xyz;
  r4.xyz = saturate(r4.xyz);
  o3.w = saturate(r0.w);
  r5.xy = saturate(r5.xy);
  r0.w = r5.y * cb1[135].y + cb1[135].x;
  r5.yzw = max(float3(0,0,0), cb4[2].xyz);
  r1.w = cmp(0 < cb2[11].y);
  r1.w = r1.w ? cb3[5].x : 1;
  r2.w = t8.SampleLevel(s0_s, r6.xyz, 0).x;
  r1.w = r2.w * r1.w;
  r2.w = r3.x * 0.99609375 + 0.001953125;
  r1.w = cmp(r2.w < r1.w);
  r1.w = r1.w ? 0.000000 : 0;
  r7.xyz = asint(cb2[11].xxx) & int3(1,2,4);
  r7.yz = r7.yz ? float2(8.96831017e-044,1.79366203e-043) : float2(0,0);
  r1.w = (int)r1.w + (int)r7.y;
  r1.w = (int)r7.z + (int)r1.w;
  r7.yzw = ddx_coarse(r0.xyz);
  r2.w = dot(r7.yzw, r7.yzw);
  r7.yzw = ddy_coarse(r0.xyz);
  r3.w = dot(r7.yzw, r7.yzw);
  r2.w = r3.w + r2.w;
  r2.w = 0.5 * r2.w;
  r2.w = min(0.180000007, r2.w);
  r0.w = r0.w * r0.w + r2.w;
  r0.w = min(1, r0.w);
  r0.w = sqrt(r0.w);
  r7.yzw = v3.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  r2.w = 1 + -r5.x;
  r8.xyz = r2.www * r4.xyz;
  r9.xyz = float3(-0.0399999991,-0.0399999991,-0.0399999991) + r4.xyz;
  r9.xyz = r5.xxx * r9.xyz + float3(0.0399999991,0.0399999991,0.0399999991);
  r8.xyz = r8.xyz * cb1[132].www + cb1[132].xyz;
  r9.xyz = r9.xyz * cb1[133].www + cb1[133].xyz;
  r8.xyz = r9.xyz * float3(0.449999988,0.449999988,0.449999988) + r8.xyz;
  r10.xyz = t5.SampleLevel(s0_s, r6.xyz, 0).xyz;
  r11.xyz = float3(0.318309873,0.318309873,0.318309873) * r10.xyz;
  r12.xyz = t6.SampleLevel(s0_s, r6.xyz, 0).xyz;
  r12.xyz = float3(0.318309873,0.318309873,0.318309873) * r12.xyz;
  r6.xyz = t7.SampleLevel(s0_s, r6.xyz, 0).xyz;
  r6.xyz = float3(0.318309873,0.318309873,0.318309873) * r6.xyz;
  r2.w = dot(r11.xyz, float3(0.212599993,0.715200007,0.0722000003));
  r2.w = max(9.99999975e-005, r2.w);
  r13.xyz = r11.xyz / r2.www;
  r14.xyz = saturate(r0.xyz);
  r14.xyz = r14.xyz * r14.xyz;
  r15.xyz = saturate(-r0.xyz);
  r15.xyz = r15.xyz * r15.xyz;
  r2.w = dot(r12.xyz, r14.xyz);
  r3.w = dot(r6.xyz, r15.xyz);
  r2.w = r3.w + r2.w;
  r6.xyz = r13.xyz * r2.www;
  r2.w = cmp(0 < cb0[14].w);
  if (r2.w != 0) {
    r2.w = dot(cb0[14].xyz, float3(0.212599993,0.715200007,0.0722000003));
    r2.w = max(9.99999975e-005, r2.w);
    r12.xyz = cb0[14].xyz / r2.www;
    r2.w = dot(cb0[15].xyz, r14.xyz);
    r3.w = dot(cb0[16].xyz, r15.xyz);
    r2.w = r3.w + r2.w;
    r10.xyz = -r10.xyz * float3(0.318309873,0.318309873,0.318309873) + cb0[14].xyz;
    r11.xyz = cb0[14].www * r10.xyz + r11.xyz;
    r10.xyz = r12.xyz * r2.www + -r6.xyz;
    r6.xyz = cb0[14].www * r10.xyz + r6.xyz;
  }
  r6.w = dot(r11.xyz, float3(0.212599993,0.715200007,0.0722000003));
  r10.w = dot(cb1[153].xyz, float3(0.212599993,0.715200007,0.0722000003));
  r10.xyz = cb1[153].xyz;
  r6.xyzw = r10.xyzw * r6.xyzw;
  r1.x = dot(r0.xyz, r1.xyz);
  r1.x = max(9.99999975e-006, abs(r1.x));
  r1.y = dot(r9.xyz, float3(0.333333343,0.333333343,0.333333343));
  r9.xyzw = r0.wwww * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
  r1.z = r9.x * r9.x;
  r1.x = -9.27999973 * r1.x;
  r1.x = exp2(r1.x);
  r1.x = min(r1.z, r1.x);
  r1.x = r1.x * r9.x + r9.y;
  r1.xz = r1.xx * float2(-1.03999996,1.03999996) + r9.zw;
  r1.y = dot(r1.yyy, float3(0.333333343,0.333333343,0.333333343));
  r2.w = saturate(50 * r1.y);
  r1.z = r2.w * r1.z;
  r1.x = saturate(r1.y * r1.x + r1.z);
  r1.x = 1 + -r1.x;
  r1.x = r1.x * r1.x;
  r1.x = r5.x * -r1.x + r1.x;
  r9.xyz = r5.yzw * r1.xxx;
  r1.x = cmp(0 < cb1[140].z);
  r8.w = dot(r8.xyz, float3(0.212599993,0.715200007,0.0722000003));
  r9.w = 0;
  r8.xyzw = r1.xxxx ? r8.xyzw : r9.xyzw;
  r1.x = cmp(0 < cb1[136].x);
  if (r1.x != 0) {
    r1.xyz = -cb2[8].xyz + r2.xyz;
    r5.yzw = float3(1,1,1) + cb2[9].xyz;
    r1.xyz = cmp(r5.yzw < abs(r1.xyz));
    r1.x = (int)r1.y | (int)r1.x;
    r1.x = (int)r1.z | (int)r1.x;
    r1.y = dot(r2.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.y = 0.00200000009 * r1.y;
    r1.y = frac(r1.y);
    r1.y = cmp(0.5 < r1.y);
    r2.xyz = r1.yyy ? float3(0,1,1) : float3(1,1,0);
    r2.w = dot(r2.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r8.xyzw = r1.xxxx ? r2.xyzw : r8.xyzw;
  }
  o0.xyzw = cb1[128].xxxx * r8.xyzw;
  r0.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o1.w = r7.x ? 0.333333343 : 0;
  r1.x = (int)r1.w + 1;
  r1.x = (uint)r1.x;
  o2.w = 0.00392156886 * r1.x;
  o5.xyzw = cb1[128].xxxx * r6.xyzw;
  r1.xyzw = r3.xyzx * float4(2,2,2,2) + float4(-1,-1,-1,-1);
  r2.xyzw = cmp(float4(0,0,0,0) < r1.wyzw);
  r3.xyzw = cmp(r1.wyzw < float4(0,0,0,0));
  r2.xyzw = (int4)-r2.xyzw + (int4)r3.xyzw;
  r2.xyzw = (int4)r2.xyzw;
  r1.xyzw = float4(1,1,1,1) + -abs(r1.xyzw);
  r1.xyzw = sqrt(r1.xyzw);
  r1.xyzw = float4(1,1,1,1) + -r1.xyzw;
  r1.xyzw = r2.xyzw * r1.xyzw;
  r2.xyz = r0.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r2.xyz = float3(-0.998044968,-0.998044968,-0.998044968) + abs(r2.xyz);
  r2.xyz = cmp(r2.xyz < float3(0,0,0));
  r3.xyz = r1.xyz * float3(0.000977517106,0.000977517106,0.000977517106) + r0.xyz;
  o1.xyz = saturate(r2.xyz ? r3.xyz : r0.xyz);
  r0.xyz = r7.yzw * float3(2,2,2) + float3(-1,-1,-1);
  r0.xyz = float3(-0.992156863,-0.992156863,-0.992156863) + abs(r0.xyz);
  r0.xyz = cmp(r0.xyz < float3(0,0,0));
  r1.x = r1.w * 0.00392156886 + r7.y;
  o4.x = saturate(r0.x ? r1.x : r7.y);
  r1.xy = r1.yz * float2(0.00392156886,0.00392156886) + r7.zw;
  o4.yz = saturate(r0.yz ? r1.xy : r7.zw);
  o2.x = r5.x;
  o2.y = 0.5;
  o2.z = r0.w;
  o3.xyz = r4.xyz;
  o4.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Dec 27 16:43:22 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xy          1     NONE   float   xy
// TEXCOORD                 5   xyzw        2     NONE   float   xyz
// TEXCOORD                 6   xyzw        3     NONE   float   xyzw
// VertexContextVector      0   xyzw        4     NONE   float      w
// SV_Position              0   xyzw        5      POS   float   xyz
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[154], immediateIndexed
dcl_constantbuffer cb2[12], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.w
dcl_input_ps_siv linear noperspective centroid v5.xyz, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 16
mul r0.xyz, v2.yzxy, v3.zxyz
mad r0.xyz, v3.yzxy, v2.zxyz, -r0.xyzx
mul r0.xyz, r0.xyzx, v3.wwww
add r0.w, v4.w, l(0.500000)
round_ni r0.w, r0.w
ftoi r0.w, r0.w
mul r1.xyzw, v5.yyyy, cb1[37].xyzw
mad r1.xyzw, v5.xxxx, cb1[36].xyzw, r1.xyzw
mad r1.xyzw, v5.zzzz, cb1[38].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb1[39].xyzw
div r1.xyz, r1.xyzx, r1.wwww
add r2.xyz, r1.xyzx, -cb1[62].xyzx
dp3 r1.w, -r1.xyzx, -r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, -r1.xyzx
ishl r1.w, cb1[139].z, l(3)
iadd r3.z, r0.w, r1.w
ftoi r3.xy, v5.xyxx
and r3.xyz, r3.xyzx, l(63, 63, 63, 0)
mov r3.w, l(0)
ld_indexable(texture3d)(float,float,float,float) r3.xyz, r3.xyzw, t0.xyzw
sample_indexable(texture2d)(float,float,float,float) r4.xy, v0.xyxx, t1.xyzw, s1
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r4.z, r0.w
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mad r4.xyz, r4.xyzx, cb1[134].wwww, cb1[134].xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mul r0.xyz, r0.xyzx, r4.yyyy
mad r0.xyz, r4.xxxx, v2.xyzx, r0.xyzx
mad r0.xyz, r4.zzzz, v3.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v0.xyxx, t2.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r5.xy, v0.xyxx, t3.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t4.yzwx, s4
mad_sat r6.xyz, r2.xyzx, cb0[11].xyzx, cb0[12].xyzx
mul r6.xyz, r6.xyzx, cb0[13].xyzx
mov_sat r4.xyz, r4.xyzx
mov_sat o3.w, r0.w
mov_sat r5.xy, r5.xyxx
mad r0.w, r5.y, cb1[135].y, cb1[135].x
max r5.yzw, cb4[2].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb2[11].y
movc r1.w, r1.w, cb3[5].x, l(1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r2.w, r6.xyzx, t8.yzwx, s0, l(0.000000)
mul r1.w, r1.w, r2.w
mad r2.w, r3.x, l(0.996093750), l(0.00195312500)
lt r1.w, r2.w, r1.w
and r1.w, r1.w, l(32)
and r7.xyz, cb2[11].xxxx, l(1, 2, 4, 0)
movc r7.yz, r7.yyzy, l(0,64,128,0), l(0,0,0,0)
iadd r1.w, r1.w, r7.y
iadd r1.w, r7.z, r1.w
deriv_rtx_coarse r7.yzw, r0.xxyz
dp3 r2.w, r7.yzwy, r7.yzwy
deriv_rty_coarse r7.yzw, r0.xxyz
dp3 r3.w, r7.yzwy, r7.yzwy
add r2.w, r2.w, r3.w
mul r2.w, r2.w, l(0.500000)
min r2.w, r2.w, l(0.180000)
mad r0.w, r0.w, r0.w, r2.w
min r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mad r7.yzw, v3.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
add r2.w, -r5.x, l(1.000000)
mul r8.xyz, r4.xyzx, r2.wwww
add r9.xyz, r4.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r9.xyz, r5.xxxx, r9.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r8.xyz, r8.xyzx, cb1[132].wwww, cb1[132].xyzx
mad r9.xyz, r9.xyzx, cb1[133].wwww, cb1[133].xyzx
mad r8.xyz, r9.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r8.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r10.xyz, r6.xyzx, t5.xyzw, s0, l(0.000000)
mul r11.xyz, r10.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r6.xyzx, t6.xyzw, s0, l(0.000000)
mul r12.xyz, r12.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r6.xyz, r6.xyzx, t7.xyzw, s0, l(0.000000)
mul r6.xyz, r6.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
dp3 r2.w, r11.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r2.w, r2.w, l(0.000100)
div r13.xyz, r11.xyzx, r2.wwww
mov_sat r14.xyz, r0.xyzx
mul r14.xyz, r14.xyzx, r14.xyzx
mov_sat r15.xyz, -r0.xyzx
mul r15.xyz, r15.xyzx, r15.xyzx
dp3 r2.w, r12.xyzx, r14.xyzx
dp3 r3.w, r6.xyzx, r15.xyzx
add r2.w, r2.w, r3.w
mul r6.xyz, r2.wwww, r13.xyzx
lt r2.w, l(0.000000), cb0[14].w
if_nz r2.w
  dp3 r2.w, cb0[14].xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  max r2.w, r2.w, l(0.000100)
  div r12.xyz, cb0[14].xyzx, r2.wwww
  dp3 r2.w, cb0[15].xyzx, r14.xyzx
  dp3 r3.w, cb0[16].xyzx, r15.xyzx
  add r2.w, r2.w, r3.w
  mad r10.xyz, -r10.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), cb0[14].xyzx
  mad r11.xyz, cb0[14].wwww, r10.xyzx, r11.xyzx
  mad r10.xyz, r12.xyzx, r2.wwww, -r6.xyzx
  mad r6.xyz, cb0[14].wwww, r10.xyzx, r6.xyzx
endif
dp3 r6.w, r11.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
dp3 r10.w, cb1[153].xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
mov r10.xyz, cb1[153].xyzx
mul r6.xyzw, r6.xyzw, r10.xyzw
dp3 r1.x, r0.xyzx, r1.xyzx
max r1.x, |r1.x|, l(0.000010)
dp3 r1.y, r9.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
mad r9.xyzw, r0.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r1.z, r9.x, r9.x
mul r1.x, r1.x, l(-9.280000)
exp r1.x, r1.x
min r1.x, r1.x, r1.z
mad r1.x, r1.x, r9.x, r9.y
mad r1.xz, r1.xxxx, l(-1.040000, 0.000000, 1.040000, 0.000000), r9.zzwz
dp3 r1.y, r1.yyyy, l(0.333333343, 0.333333343, 0.333333343, 0.000000)
mul_sat r2.w, r1.y, l(50.000000)
mul r1.z, r1.z, r2.w
mad_sat r1.x, r1.y, r1.x, r1.z
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, r1.x
mad r1.x, r5.x, -r1.x, r1.x
mul r9.xyz, r1.xxxx, r5.yzwy
lt r1.x, l(0.000000), cb1[140].z
dp3 r8.w, r8.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
mov r9.w, l(0)
movc r8.xyzw, r1.xxxx, r8.xyzw, r9.xyzw
lt r1.x, l(0.000000), cb1[136].x
if_nz r1.x
  add r1.xyz, r2.xyzx, -cb2[8].xyzx
  add r5.yzw, cb2[9].xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
  lt r1.xyz, r5.yzwy, |r1.xyzx|
  or r1.x, r1.y, r1.x
  or r1.x, r1.z, r1.x
  dp3 r1.y, r2.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.y, r1.y, l(0.002000)
  frc r1.y, r1.y
  lt r1.y, l(0.500000), r1.y
  movc r2.xyz, r1.yyyy, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  dp3 r2.w, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  movc r8.xyzw, r1.xxxx, r2.xyzw, r8.xyzw
endif
mul o0.xyzw, r8.xyzw, cb1[128].xxxx
mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
movc o1.w, r7.x, l(0.333333343), l(0)
iadd r1.x, r1.w, l(1)
utof r1.x, r1.x
mul o2.w, r1.x, l(0.00392156886)
mul o5.xyzw, r6.xyzw, cb1[128].xxxx
mad r1.xyzw, r3.xyzx, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
lt r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r1.wyzw
lt r3.xyzw, r1.wyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
iadd r2.xyzw, -r2.xyzw, r3.xyzw
itof r2.xyzw, r2.xyzw
add r1.xyzw, -|r1.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
sqrt r1.xyzw, r1.xyzw
add r1.xyzw, -r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r1.xyzw, r1.xyzw, r2.xyzw
mad r2.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r2.xyz, |r2.xyzx|, l(-0.998044968, -0.998044968, -0.998044968, 0.000000)
lt r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r3.xyz, r1.xyzx, l(0.000977517106, 0.000977517106, 0.000977517106, 0.000000), r0.xyzx
movc_sat o1.xyz, r2.xyzx, r3.xyzx, r0.xyzx
mad r0.xyz, r7.yzwy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r0.xyz, |r0.xyzx|, l(-0.992156863, -0.992156863, -0.992156863, 0.000000)
lt r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r1.x, r1.w, l(0.00392156886), r7.y
movc_sat o4.x, r0.x, r1.x, r7.y
mad r1.xy, r1.yzyy, l(0.00392156886, 0.00392156886, 0.000000, 0.000000), r7.zwzz
movc_sat o4.yz, r0.yyzy, r1.xxyx, r7.zzwz
mov o2.x, r5.x
mov o2.y, l(0.500000)
mov o2.z, r0.w
mov o3.xyz, r4.xyzx
mov o4.w, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
