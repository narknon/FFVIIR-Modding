// ---- Created with 3Dmigoto v1.3.16 on Sat Dec 18 13:08:21 2021
Texture3D<float4> t8 : register(t8);

TextureCube<float4> t7 : register(t7);

Texture3D<float4> t6 : register(t6);

Texture3D<float4> t5 : register(t5);

Texture3D<float4> t4 : register(t4);

Texture3D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture3D<float4> t0 : register(t0);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[32];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[6];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[12];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[188];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[40];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD2,
  float4 v2 : TEXCOORD3,
  float4 v3 : TEXCOORD5,
  float4 v4 : TEXCOORD6,
  float4 v5 : TEXCOORD8,
  float4 v6 : TEXCOORD10,
  float4 v7 : TEXCOORD11,
  float4 v8 : SV_Position0,
  uint v9 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o5 : SV_Target5)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v7.zxy * v6.yzx;
  r0.xyz = v7.yzx * v6.zxy + -r0.xyz;
  r0.xyz = v7.www * r0.xyz;
  r0.w = cmp(v3.w < 9.99999997e-007);
  r0.w = r0.w ? 0 : v3.w;
  r1.x = cmp(0.999998987 < r0.w);
  r1.y = -0.999511719 + v2.w;
  r1.y = frac(r1.y);
  r1.y = 1024 * r1.y;
  r1.y = (uint)r1.y;
  r1.y = (uint)r1.y;
  r1.y = 92.2228012 * r1.y;
  r1.y = sin(r1.y);
  r1.y = 43758.5469 * r1.y;
  r1.y = frac(r1.y);
  r2.xyzw = cb1[37].xyzw * v8.yyyy;
  r2.xyzw = v8.xxxx * cb1[36].xyzw + r2.xyzw;
  r2.xyzw = v8.zzzz * cb1[38].xyzw + r2.xyzw;
  r2.xyzw = cb1[39].xyzw + r2.xyzw;
  r2.xyz = r2.xyz / r2.www;
  r3.xyz = -cb1[62].xyz + r2.xyz;
  r1.z = dot(-r2.xyz, -r2.xyz);
  r1.z = rsqrt(r1.z);
  r4.xyz = -r2.xyz * r1.zzz;
  r5.z = asuint(cb1[139].z) << 3;
  r5.xy = (int2)v8.xy;
  r5.xyz = (int3)r5.xyz & int3(63,63,63);
  r5.w = 0;
  r1.z = t0.Load(r5.xyzw).x;
  r5.xyz = cb1[134].www * float3(0,0,1) + cb1[134].xyz;
  r1.w = dot(r5.xyz, r5.xyz);
  r1.w = rsqrt(r1.w);
  r5.xyz = r5.xyz * r1.www;
  r0.xyz = r5.yyy * r0.xyz;
  r0.xyz = r5.xxx * v6.xyz + r0.xyz;
  r0.xyz = r5.zzz * v7.xyz + r0.xyz;
  r1.w = dot(r0.xyz, r0.xyz);
  r1.w = rsqrt(r1.w);
  r0.xyz = r1.www * r0.xyz;
  r1.w = 0.125 + cb4[26].y;
  r1.w = frac(r1.w);
  r1.w = 4 * r1.w;
  r1.w = floor(r1.w);
  r5.xy = float2(-2,-1) + r1.ww;
  r5.xy = abs(r5.xy);
  r6.xy = float2(-0.5,-0.5) + v0.xy;
  r5.zw = r5.xy * float2(1,-1) + float2(-1,1);
  r7.x = dot(r5.zw, r6.xy);
  r5.xy = float2(-1,0) + r5.yz;
  r7.y = dot(r5.xy, r6.xy);
  r5.xy = float2(0.5,0.5) + r7.xy;
  r5.zw = cb4[14].xy * cb4[15].xz + cb4[15].yw;
  r1.y = r1.y * 2 + -1;
  r1.yw = r5.zw * r1.yy + cb4[14].xy;
  r1.yw = r5.xy + r1.yw;
  r1.yw = cb4[16].xy + r1.yw;
  r1.yw = cb4[20].xy * r1.yw;
  r1.z = r1.z * 0.99609375 + 0.001953125;
  r2.w = cmp(r1.z >= v6.w);
  r5.xy = r2.ww ? v1.xy : v1.zw;
  r5.xy = cb4[16].xy + r5.xy;
  r2.w = cmp(cb4[27].z >= 0.5);
  r5.xy = r2.ww ? r5.xy : r1.yw;
  r5.zw = ddy_coarse(r1.yw);
  r6.xy = cb4[16].xy + v1.xy;
  r6.zw = ddy_coarse(r6.xy);
  r5.zw = r2.ww ? r6.zw : r5.zw;
  r1.yw = ddx_coarse(r1.yw);
  r6.xy = ddx_coarse(r6.xy);
  r1.yw = r2.ww ? r6.xy : r1.yw;
  r1.y = t1.SampleGrad(s1_s, r5.xy, r1.w, r5.w).x;
  r1.w = exp2(cb4[27].w);
  r2.w = cmp(r1.y < 9.99999997e-007);
  r1.y = log2(abs(r1.y));
  r1.y = r1.w * r1.y;
  r1.y = exp2(r1.y);
  r1.y = saturate(cb4[28].y * r1.y);
  r0.w = min(1, r0.w);
  r0.w = r1.x ? 1 : r0.w;
  r0.x = dot(r0.xyz, r4.xyz);
  r0.x = min(1, abs(r0.x));
  r0.y = exp2(cb4[28].z);
  r0.z = cmp(r0.x < 9.99999997e-007);
  r0.x = log2(r0.x);
  r0.x = r0.y * r0.x;
  r0.x = exp2(r0.x);
  r0.x = -1 + r0.x;
  r0.x = r0.z ? -1 : r0.x;
  r0.x = cb4[29].x * r0.x + 1;
  r0.x = saturate(r0.w * r0.x);
  r0.yzw = saturate(r3.xyz * cb0[3].xyz + cb0[4].xyz);
  r0.yzw = cb0[5].xyz * r0.yzw;
  r4.xyz = saturate(cb4[8].xyz);
  r1.x = r2.w ? 0 : r1.y;
  r5.xyz = max(float3(0,0,0), cb4[2].xyz);
  r1.y = cmp(0 < cb2[11].y);
  r1.y = r1.y ? cb3[5].x : 1;
  r1.w = t6.SampleLevel(s0_s, r0.yzw, 0).x;
  r1.y = r1.y * r1.w;
  r1.y = cmp(r1.z < r1.y);
  r1.y = r1.y ? 0.000000 : 0;
  r1.zw = asint(cb2[11].xx) & int2(2,4);
  r1.zw = r1.zw ? float2(8.96831017e-044,1.79366203e-043) : float2(0,0);
  r1.y = (int)r1.z + (int)r1.y;
  r1.y = (int)r1.w + (int)r1.y;
  r1.z = max(cb4[30].z, cb1[138].x);
  r1.w = cb4[30].w + -r1.z;
  r1.w = max(1, r1.w);
  r1.w = rcp(r1.w);
  r2.w = cmp(r1.w < 1);
  r1.z = v8.w + -r1.z;
  r1.z = saturate(r1.z * r1.w);
  r1.z = r2.w ? r1.z : 1;
  r1.z = cb4[31].x * r1.z;
  r6.xy = cb1[126].zw * v8.xy;
  r1.w = t2.SampleLevel(s2_s, r6.xy, 0).x;
  r2.w = r1.w * cb1[57].x + cb1[57].y;
  r1.w = r1.w * cb1[57].z + -cb1[57].w;
  r1.w = rcp(r1.w);
  r1.w = r2.w + r1.w;
  r1.w = -v8.w + r1.w;
  r1.w = saturate(0.0199999996 * r1.w);
  r2.w = -r1.w * 2 + 3;
  r1.w = r1.w * r1.w;
  r1.w = r2.w * r1.w;
  r1.z = r1.z * r1.w;
  r4.xyz = r4.xyz * cb1[132].www + cb1[132].xyz;
  r6.xyz = cb1[133].www * float3(0.0399999991,0.0399999991,0.0399999991) + cb1[133].xyz;
  r6.xyz = r6.xyz * float3(0.449999988,0.449999988,0.449999988) + r4.xyz;
  r0.yzw = t5.SampleLevel(s0_s, r0.yzw, 0).xyz;
  r7.xyz = float3(0.318309873,0.318309873,0.318309873) * r0.yzw;
  r1.w = cmp(0 < cb0[6].w);
  if (r1.w != 0) {
    r0.yzw = -r0.yzw * float3(0.318309873,0.318309873,0.318309873) + cb0[6].xyz;
    r7.xyz = cb0[6].www * r0.yzw + r7.xyz;
  }
  r0.yzw = cb1[153].xyz * r7.xyz;
  r7.xyz = r6.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r7.xyz = r6.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + r7.xyz;
  r7.xyz = r6.xyz * float3(2.75519991,2.75519991,2.75519991) + r7.xyz;
  r7.xyz = float3(1.33200002,1.33200002,1.33200002) + r7.xyz;
  r7.xyz = max(float3(1,1,1), r7.xyz);
  r1.y = (int)r1.y & 64;
  r1.y = r1.y ? cb1[130].x : 1;
  r8.xyz = r1.yyy * r4.xyz;
  r9.xyz = v5.xyz + r3.xyz;
  r10.xyz = -cb1[143].xyz + r9.xyz;
  r11.xyz = cb1[145].xyz * r10.xyz;
  r9.xyz = -cb1[144].xyz + r9.xyz;
  r9.xyz = cb1[146].xyz * r9.xyz;
  r10.xyz = r10.xyz * cb1[145].xyz + float3(-0.5,-0.5,-0.5);
  r10.xyz = float3(0.5,0.5,0.5) + -abs(r10.xyz);
  r10.xyz = saturate(float3(6,6,6) * r10.xyz);
  r1.y = r10.x * r10.y;
  r1.y = r1.y * r10.z;
  r10.xyz = t3.SampleLevel(s0_s, r11.xyz, 0).xyz;
  r9.xyz = t4.SampleLevel(s0_s, r9.xyz, 0).xyz;
  r10.xyz = min(float3(65504,65504,65504), r10.xyz);
  r9.xyz = min(float3(65504,65504,65504), r9.xyz);
  r9.xyz = cb1[128].yyy * r9.xyz;
  r10.xyz = r10.xyz * cb1[128].yyy + -r9.xyz;
  r9.xyz = r1.yyy * r10.xyz + r9.xyz;
  r4.xyz = r9.xyz * r4.xyz;
  r4.xyz = r7.xyz * r4.xyz;
  r4.xyz = float3(0.886227548,0.886227548,0.886227548) * r4.xyz;
  r0.yzw = r8.xyz * r0.yzw + r4.xyz;
  r1.y = dot(r2.xyz, r2.xyz);
  r1.y = sqrt(r1.y);
  r1.w = cb1[187].w * r1.y;
  r2.w = dot(r2.xyz, cb1[52].xyz);
  r1.w = r1.w / r2.w;
  r1.w = max(0, r1.w);
  r2.w = rcp(r1.y);
  r4.xyz = -r2.xyz * r2.www;
  r3.w = dot(cb0[37].xyz, r4.xyz);
  r4.w = -r3.w * -1.20000005 + 1.36000001;
  r5.w = cmp(r4.w < 9.99999997e-007);
  r4.w = log2(abs(r4.w));
  r4.w = -1.5 * r4.w;
  r4.w = exp2(r4.w);
  r4.w = r5.w ? 0 : r4.w;
  r3.w = r3.w * r3.w + 1;
  r3.w = r4.w * r3.w;
  r3.w = 0.0323704928 * r3.w;
  r4.xyz = t7.SampleLevel(s3_s, r4.xyz, 0).xyz;
  r4.xyz = cb0[38].xyz * r3.www + r4.xyz;
  r1.w = max(cb0[32].w, r1.w);
  r3.w = cmp(0 < r1.w);
  r4.w = r1.w * r2.w;
  r5.w = r4.w * r2.z + cb1[59].z;
  r4.w = -r4.w * r2.z + r2.z;
  r1.w = -r1.w * r2.w + 1;
  r1.w = r1.w * r1.y;
  r2.w = -cb0[34].y + r5.w;
  r2.w = cb0[32].y * r2.w;
  r2.w = max(-127, r2.w);
  r2.w = exp2(-r2.w);
  r2.w = cb0[34].x * r2.w;
  r2.w = r3.w ? r2.w : cb0[32].x;
  r1.y = r3.w ? r1.w : r1.y;
  r1.w = r3.w ? r4.w : r2.z;
  r1.w = cb0[32].y * r1.w;
  r1.w = max(-127, r1.w);
  r3.w = cmp(0.00999999978 < abs(r1.w));
  r4.w = exp2(-r1.w);
  r4.w = 1 + -r4.w;
  r4.w = r4.w / r1.w;
  r1.w = -r1.w * 0.240226507 + 0.693147182;
  r1.w = r3.w ? r4.w : r1.w;
  r1.y = -r1.y * r2.w;
  r1.y = r1.y * r1.w;
  r1.y = exp2(r1.y);
  r1.y = min(1, r1.y);
  r4.xyz = cb0[33].xyz * r4.xyz;
  r1.w = 1 + -r1.y;
  r4.xyz = r4.xyz * r1.www;
  r1.w = cmp(0 < cb0[39].y);
  if (r1.w != 0) {
    r2.xyz = cb1[60].xyz + r2.xyz;
    r2.xyz = -cb1[62].xyz + r2.xyz;
    r7.xyz = cb1[5].xyw * r2.yyy;
    r2.xyw = r2.xxx * cb1[4].xyw + r7.xyz;
    r2.xyz = r2.zzz * cb1[6].xyw + r2.xyw;
    r2.xyz = cb1[7].xyw + r2.xyz;
    r1.w = rcp(r2.z);
    r2.xy = r2.xy * r1.ww;
    r2.xy = r2.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r1.w = r2.z * cb1[187].x + cb1[187].y;
    r1.w = log2(r1.w);
    r1.w = cb1[187].z * r1.w;
    r7.z = cb1[185].z * r1.w;
    r2.xy = cb1[183].xy * r2.xy;
    r2.zw = float2(-0.5,-0.5) + cb1[183].xy;
    r2.xy = max(float2(0.5,0.5), r2.xy);
    r2.xy = min(r2.xy, r2.zw);
    r7.xy = cb1[186].xy * r2.xy;
    r2.xyzw = t8.SampleLevel(s4_s, r7.xyz, 0).xyzw;
    r2.xyz = cb1[128].yyy * r2.xyz;
    r4.xyz = r4.xyz * r2.www + r2.xyz;
    r1.y = r2.w * r1.y;
  }
  r2.xyz = cb0[34].www * r4.xyz;
  r1.y = -1 + r1.y;
  r1.y = cb0[34].w * r1.y + 1;
  r1.w = r1.z * r1.z;
  r1.w = r1.w * r1.w;
  r1.w = r1.w * r1.w;
  r0.yzw = r0.yzw * r1.xxx;
  r4.xyz = r5.xyz * r1.www;
  r0.yzw = r0.yzw * r1.zzz + r4.xyz;
  r4.w = r1.x * r1.z;
  r2.xyz = r2.xyz * r1.xxx;
  r1.xzw = r2.xyz * r1.zzz;
  r4.xyz = r0.yzw * r1.yyy + r1.xzw;
  r0.xyzw = r4.xyzw * r0.xxxx;
  r1.x = cmp(0 < cb1[140].z);
  r6.w = dot(r6.xyz, float3(0.212599993,0.715200007,0.0722000003));
  r0.xyzw = r1.xxxx ? r6.xyzw : r0.xyzw;
  r1.x = cmp(0 < cb1[136].x);
  if (r1.x != 0) {
    r1.xyz = -cb2[8].xyz + r3.xyz;
    r2.xyz = float3(1,1,1) + cb2[9].xyz;
    r1.xyz = cmp(r2.xyz < abs(r1.xyz));
    r1.x = (int)r1.y | (int)r1.x;
    r1.x = (int)r1.z | (int)r1.x;
    r1.y = dot(r3.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.y = 0.00200000009 * r1.y;
    r1.y = frac(r1.y);
    r1.y = cmp(0.5 < r1.y);
    r2.xyz = r1.yyy ? float3(0,1,1) : float3(1,1,0);
    r2.w = dot(r2.xyz, float3(0.212599993,0.715200007,0.0722000003));
    r0.xyzw = r1.xxxx ? r2.xyzw : r0.xyzw;
    o0.w = r0.w;
  } else {
    o0.w = r0.w;
  }
  o0.xyz = cb1[128].xxx * r0.xyz;
  o5.xyzw = float4(0,0,0,0);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Dec 18 13:08:21 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy
// TEXCOORD                 2   xyzw        1     NONE   float   xyzw
// TEXCOORD                 3   xyzw        2     NONE   float      w
// TEXCOORD                 5   xyzw        3     NONE   float      w
// TEXCOORD                 6   xyzw        4     NONE   float
// TEXCOORD                 8   xyz         5     NONE   float   xyz
// TEXCOORD                10   xyzw        6     NONE   float   xyzw
// TEXCOORD                11   xyzw        7     NONE   float   xyzw
// SV_Position              0   xyzw        8      POS   float   xyzw
// SV_IsFrontFace           0   x           9    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[40], immediateIndexed
dcl_constantbuffer cb1[188], immediateIndexed
dcl_constantbuffer cb2[12], immediateIndexed
dcl_constantbuffer cb3[6], immediateIndexed
dcl_constantbuffer cb4[32], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.w
dcl_input_ps linear v3.w
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyzw
dcl_input_ps_siv linear noperspective centroid v8.xyzw, position
dcl_output o0.xyzw
dcl_output o5.xyzw
dcl_temps 12
mul r0.xyz, v6.yzxy, v7.zxyz
mad r0.xyz, v7.yzxy, v6.zxyz, -r0.xyzx
mul r0.xyz, r0.xyzx, v7.wwww
lt r0.w, v3.w, l(0.000001)
movc r0.w, r0.w, l(0), v3.w
lt r1.x, l(0.999999), r0.w
add r1.y, v2.w, l(-0.999511719)
frc r1.y, r1.y
mul r1.y, r1.y, l(1024.000000)
ftou r1.y, r1.y
utof r1.y, r1.y
mul r1.y, r1.y, l(92.222801)
sincos r1.y, null, r1.y
mul r1.y, r1.y, l(43758.546875)
frc r1.y, r1.y
mul r2.xyzw, v8.yyyy, cb1[37].xyzw
mad r2.xyzw, v8.xxxx, cb1[36].xyzw, r2.xyzw
mad r2.xyzw, v8.zzzz, cb1[38].xyzw, r2.xyzw
add r2.xyzw, r2.xyzw, cb1[39].xyzw
div r2.xyz, r2.xyzx, r2.wwww
add r3.xyz, r2.xyzx, -cb1[62].xyzx
dp3 r1.z, -r2.xyzx, -r2.xyzx
rsq r1.z, r1.z
mul r4.xyz, r1.zzzz, -r2.xyzx
ishl r5.z, cb1[139].z, l(3)
ftoi r5.xy, v8.xyxx
and r5.xyz, r5.xyzx, l(63, 63, 63, 0)
mov r5.w, l(0)
ld_indexable(texture3d)(float,float,float,float) r1.z, r5.xyzw, t0.yzxw
mad r5.xyz, cb1[134].wwww, l(0.000000, 0.000000, 1.000000, 0.000000), cb1[134].xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
mul r0.xyz, r0.xyzx, r5.yyyy
mad r0.xyz, r5.xxxx, v6.xyzx, r0.xyzx
mad r0.xyz, r5.zzzz, v7.xyzx, r0.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r0.xyz, r0.xyzx, r1.wwww
add r1.w, cb4[26].y, l(0.125000)
frc r1.w, r1.w
mul r1.w, r1.w, l(4.000000)
round_ni r1.w, r1.w
add r5.xy, r1.wwww, l(-2.000000, -1.000000, 0.000000, 0.000000)
mov r5.xy, |r5.xyxx|
add r6.xy, v0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mad r5.zw, r5.xxxy, l(0.000000, 0.000000, 1.000000, -1.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
dp2 r7.x, r5.zwzz, r6.xyxx
add r5.xy, r5.yzyy, l(-1.000000, 0.000000, 0.000000, 0.000000)
dp2 r7.y, r5.xyxx, r6.xyxx
add r5.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r5.zw, cb4[14].xxxy, cb4[15].xxxz, cb4[15].yyyw
mad r1.y, r1.y, l(2.000000), l(-1.000000)
mad r1.yw, r5.zzzw, r1.yyyy, cb4[14].xxxy
add r1.yw, r1.yyyw, r5.xxxy
add r1.yw, r1.yyyw, cb4[16].xxxy
mul r1.yw, r1.yyyw, cb4[20].xxxy
mad r1.z, r1.z, l(0.996093750), l(0.00195312500)
ge r2.w, r1.z, v6.w
movc r5.xy, r2.wwww, v1.xyxx, v1.zwzz
add r5.xy, r5.xyxx, cb4[16].xyxx
ge r2.w, cb4[27].z, l(0.500000)
movc r5.xy, r2.wwww, r5.xyxx, r1.ywyy
deriv_rty_coarse r5.zw, r1.yyyw
add r6.xy, v1.xyxx, cb4[16].xyxx
deriv_rty_coarse r6.zw, r6.xxxy
movc r5.zw, r2.wwww, r6.zzzw, r5.zzzw
deriv_rtx_coarse r1.yw, r1.yyyw
deriv_rtx_coarse r6.xy, r6.xyxx
movc r1.yw, r2.wwww, r6.xxxy, r1.yyyw
sample_d_indexable(texture2d)(float,float,float,float) r1.y, r5.xyxx, t1.yxzw, s1, r1.ywyy, r5.zwzz
exp r1.w, cb4[27].w
lt r2.w, r1.y, l(0.000001)
log r1.y, |r1.y|
mul r1.y, r1.y, r1.w
exp r1.y, r1.y
mul_sat r1.y, r1.y, cb4[28].y
min r0.w, r0.w, l(1.000000)
movc r0.w, r1.x, l(1.000000), r0.w
dp3 r0.x, r0.xyzx, r4.xyzx
min r0.x, |r0.x|, l(1.000000)
exp r0.y, cb4[28].z
lt r0.z, r0.x, l(0.000001)
log r0.x, r0.x
mul r0.x, r0.x, r0.y
exp r0.x, r0.x
add r0.x, r0.x, l(-1.000000)
movc r0.x, r0.z, l(-1.000000), r0.x
mad r0.x, cb4[29].x, r0.x, l(1.000000)
mul_sat r0.x, r0.x, r0.w
mad_sat r0.yzw, r3.xxyz, cb0[3].xxyz, cb0[4].xxyz
mul r0.yzw, r0.yyzw, cb0[5].xxyz
mov_sat r4.xyz, cb4[8].xyzx
movc r1.x, r2.w, l(0), r1.y
max r5.xyz, cb4[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.y, l(0.000000), cb2[11].y
movc r1.y, r1.y, cb3[5].x, l(1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r1.w, r0.yzwy, t6.yzwx, s0, l(0.000000)
mul r1.y, r1.w, r1.y
lt r1.y, r1.z, r1.y
and r1.y, r1.y, l(32)
and r1.zw, cb2[11].xxxx, l(0, 0, 2, 4)
movc r1.zw, r1.zzzw, l(0,0,64,128), l(0,0,0,0)
iadd r1.y, r1.z, r1.y
iadd r1.y, r1.w, r1.y
max r1.z, cb1[138].x, cb4[30].z
add r1.w, -r1.z, cb4[30].w
max r1.w, r1.w, l(1.000000)
rcp r1.w, r1.w
lt r2.w, r1.w, l(1.000000)
add r1.z, -r1.z, v8.w
mul_sat r1.z, r1.w, r1.z
movc r1.z, r2.w, r1.z, l(1.000000)
mul r1.z, r1.z, cb4[31].x
mul r6.xy, v8.xyxx, cb1[126].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r6.xyxx, t2.yzwx, s2, l(0.000000)
mad r2.w, r1.w, cb1[57].x, cb1[57].y
mad r1.w, r1.w, cb1[57].z, -cb1[57].w
rcp r1.w, r1.w
add r1.w, r1.w, r2.w
add r1.w, r1.w, -v8.w
mul_sat r1.w, r1.w, l(0.020000)
mad r2.w, -r1.w, l(2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mul r1.z, r1.w, r1.z
mad r4.xyz, r4.xyzx, cb1[132].wwww, cb1[132].xyzx
mad r6.xyz, cb1[133].wwww, l(0.040000, 0.040000, 0.040000, 0.000000), cb1[133].xyzx
mad r6.xyz, r6.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r4.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r0.yzw, r0.yzwy, t5.wxyz, s0, l(0.000000)
mul r7.xyz, r0.yzwy, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
lt r1.w, l(0.000000), cb0[6].w
if_nz r1.w
  mad r0.yzw, -r0.yyzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873), cb0[6].xxyz
  mad r7.xyz, cb0[6].wwww, r0.yzwy, r7.xyzx
endif
mul r0.yzw, r7.xxyz, cb1[153].xxyz
mad r7.xyz, r6.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r7.xyz, r6.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r7.xyzx
mad r7.xyz, r6.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r7.xyzx
add r7.xyz, r7.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r7.xyz, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
and r1.y, r1.y, l(64)
movc r1.y, r1.y, cb1[130].x, l(1.000000)
mul r8.xyz, r4.xyzx, r1.yyyy
add r9.xyz, r3.xyzx, v5.xyzx
add r10.xyz, r9.xyzx, -cb1[143].xyzx
mul r11.xyz, r10.xyzx, cb1[145].xyzx
add r9.xyz, r9.xyzx, -cb1[144].xyzx
mul r9.xyz, r9.xyzx, cb1[146].xyzx
mad r10.xyz, r10.xyzx, cb1[145].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r10.xyz, -|r10.xyzx|, l(0.500000, 0.500000, 0.500000, 0.000000)
mul_sat r10.xyz, r10.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000)
mul r1.y, r10.y, r10.x
mul r1.y, r10.z, r1.y
sample_l_indexable(texture3d)(float,float,float,float) r10.xyz, r11.xyzx, t3.xyzw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyz, r9.xyzx, t4.xyzw, s0, l(0.000000)
min r10.xyz, r10.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
min r9.xyz, r9.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
mul r9.xyz, r9.xyzx, cb1[128].yyyy
mad r10.xyz, r10.xyzx, cb1[128].yyyy, -r9.xyzx
mad r9.xyz, r1.yyyy, r10.xyzx, r9.xyzx
mul r4.xyz, r4.xyzx, r9.xyzx
mul r4.xyz, r4.xyzx, r7.xyzx
mul r4.xyz, r4.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000)
mad r0.yzw, r8.xxyz, r0.yyzw, r4.xxyz
dp3 r1.y, r2.xyzx, r2.xyzx
sqrt r1.y, r1.y
mul r1.w, r1.y, cb1[187].w
dp3 r2.w, r2.xyzx, cb1[52].xyzx
div r1.w, r1.w, r2.w
max r1.w, r1.w, l(0.000000)
rcp r2.w, r1.y
mul r4.xyz, r2.wwww, -r2.xyzx
dp3 r3.w, cb0[37].xyzx, r4.xyzx
mad r4.w, -r3.w, l(-1.200000), l(1.360000)
lt r5.w, r4.w, l(0.000001)
log r4.w, |r4.w|
mul r4.w, r4.w, l(-1.500000)
exp r4.w, r4.w
movc r4.w, r5.w, l(0), r4.w
mad r3.w, r3.w, r3.w, l(1.000000)
mul r3.w, r3.w, r4.w
mul r3.w, r3.w, l(0.0323704928)
sample_l_indexable(texturecube)(float,float,float,float) r4.xyz, r4.xyzx, t7.xyzw, s3, l(0.000000)
mad r4.xyz, cb0[38].xyzx, r3.wwww, r4.xyzx
max r1.w, r1.w, cb0[32].w
lt r3.w, l(0.000000), r1.w
mul r4.w, r2.w, r1.w
mad r5.w, r4.w, r2.z, cb1[59].z
mad r4.w, -r4.w, r2.z, r2.z
mad r1.w, -r1.w, r2.w, l(1.000000)
mul r1.w, r1.y, r1.w
add r2.w, r5.w, -cb0[34].y
mul r2.w, r2.w, cb0[32].y
max r2.w, r2.w, l(-127.000000)
exp r2.w, -r2.w
mul r2.w, r2.w, cb0[34].x
movc r2.w, r3.w, r2.w, cb0[32].x
movc r1.y, r3.w, r1.w, r1.y
movc r1.w, r3.w, r4.w, r2.z
mul r1.w, r1.w, cb0[32].y
max r1.w, r1.w, l(-127.000000)
lt r3.w, l(0.010000), |r1.w|
exp r4.w, -r1.w
add r4.w, -r4.w, l(1.000000)
div r4.w, r4.w, r1.w
mad r1.w, -r1.w, l(0.240226507), l(0.693147182)
movc r1.w, r3.w, r4.w, r1.w
mul r1.y, r2.w, -r1.y
mul r1.y, r1.w, r1.y
exp r1.y, r1.y
min r1.y, r1.y, l(1.000000)
mul r4.xyz, r4.xyzx, cb0[33].xyzx
add r1.w, -r1.y, l(1.000000)
mul r4.xyz, r1.wwww, r4.xyzx
lt r1.w, l(0.000000), cb0[39].y
if_nz r1.w
  add r2.xyz, r2.xyzx, cb1[60].xyzx
  add r2.xyz, r2.xyzx, -cb1[62].xyzx
  mul r7.xyz, r2.yyyy, cb1[5].xywx
  mad r2.xyw, r2.xxxx, cb1[4].xyxw, r7.xyxz
  mad r2.xyz, r2.zzzz, cb1[6].xywx, r2.xywx
  add r2.xyz, r2.xyzx, cb1[7].xywx
  rcp r1.w, r2.z
  mul r2.xy, r1.wwww, r2.xyxx
  mad r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r1.w, r2.z, cb1[187].x, cb1[187].y
  log r1.w, r1.w
  mul r1.w, r1.w, cb1[187].z
  mul r7.z, r1.w, cb1[185].z
  mul r2.xy, r2.xyxx, cb1[183].xyxx
  add r2.zw, cb1[183].xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  max r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  min r2.xy, r2.zwzz, r2.xyxx
  mul r7.xy, r2.xyxx, cb1[186].xyxx
  sample_l_indexable(texture3d)(float,float,float,float) r2.xyzw, r7.xyzx, t8.xyzw, s4, l(0.000000)
  mul r2.xyz, r2.xyzx, cb1[128].yyyy
  mad r4.xyz, r4.xyzx, r2.wwww, r2.xyzx
  mul r1.y, r1.y, r2.w
endif
mul r2.xyz, r4.xyzx, cb0[34].wwww
add r1.y, r1.y, l(-1.000000)
mad r1.y, cb0[34].w, r1.y, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r0.yzw, r1.xxxx, r0.yyzw
mul r4.xyz, r1.wwww, r5.xyzx
mad r0.yzw, r0.yyzw, r1.zzzz, r4.xxyz
mul r4.w, r1.z, r1.x
mul r2.xyz, r1.xxxx, r2.xyzx
mul r1.xzw, r1.zzzz, r2.xxyz
mad r4.xyz, r0.yzwy, r1.yyyy, r1.xzwx
mul r0.xyzw, r0.xxxx, r4.xyzw
lt r1.x, l(0.000000), cb1[140].z
dp3 r6.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
movc r0.xyzw, r1.xxxx, r6.xyzw, r0.xyzw
lt r1.x, l(0.000000), cb1[136].x
if_nz r1.x
  add r1.xyz, r3.xyzx, -cb2[8].xyzx
  add r2.xyz, cb2[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r1.xyz, r2.xyzx, |r1.xyzx|
  or r1.x, r1.y, r1.x
  or r1.x, r1.z, r1.x
  dp3 r1.y, r3.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.y, r1.y, l(0.002000)
  frc r1.y, r1.y
  lt r1.y, l(0.500000), r1.y
  movc r2.xyz, r1.yyyy, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  dp3 r2.w, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  movc r0.xyzw, r1.xxxx, r2.xyzw, r0.xyzw
  mov o0.w, r0.w
else
  mov o0.w, r0.w
endif
mul o0.xyz, r0.xyzx, cb1[128].xxxx
mov o5.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
